import re

def get_keys_from_dict(dict):
    keys = []
    for key in captions_dict_long:
        keys.append(key.__str__())
    return keys

captions_dict_long = dict()


captions_dict_long['Full plaintext html'] = r'''<head><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_82">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/5f59ig08bu","@type":"VideoObject","duration":"PT3M15S","name":"C1-L1-meet your instructor","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/527c301d9e2e07c27d451f7694fe2dc8.jpg?image_crop_resized=640x337","embedUrl":"https://fast.wistia.net/embed/iframe/5f59ig08bu","uploadDate":"2024-03-18T17:46:11.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/1b2e8e36588db8097f51500c1af0c9d0f3b77b8d.m3u8","transcript":"Hi there. My name's Kyle. I'm the director of training here at dbt Labs. I'm really glad you're here to continue your learning journey, leveling up with dbt fundamentals.\n\nI first discovered dbt in a former career as a high school math teacher. I was in charge of a lot of the reporting to make sure our seniors were on track to graduate. And so what I was originally doing was exporting a lot of CSVs from different systems, putting together some very hacky Jupyter notebooks and then uploading that data to a Google sheet, and teachers would look at that Google sheet too, to figure out who needed some more coaching and things like that on the path to graduation.\n\nBut then I discovered DBT and just totally streamlined my workflow. I went from every Wednesday morning doing a very manual process for thirty five minutes of that exporting CSVs, running Jupyter notebooks, making sure the Google Sheet looked good, to just running a single command, each morning, when we needed to refresh the reports. Very, very simple.\n\nYou'll learn more about that throughout this course. And so just personally really leveled up my own career, my own data workflow, I'm excited for you to hopefully experience something very similar.\n\nLet's jump into the course. Course covers, five key topics They are sources, models, tests, docs, and deployment. This is the real basis of the DV development workflow, and then deployment will show you how to run all your transformations on a schedule. And so as you jump into the course, you'll notice we have some very specific pedagogy in how we teach, and just want you to know what to expect. First, you'll have explainers, where we outline concepts kind of teach some of the software engineering best practices that we're bringing to the data workflow.\n\nThen we also have demos where we're showing off how a particular functionality and dbt works, and then a really important proponent that the team believes in is that you have a chance to get hands on keyboards in this course. So we'll have a practice section or a lab section where you can actually take DBT for a spin, try replicating what we showed you in the demo, maybe try some stretch exercises, but then we want you to be supported. We'll also provide an exemplar for you to check your work.\n\nAt the very end, we want to check your understanding, so we have a very quick quiz, on each section, just to make sure you're checking your progress throughout the the learning. And then finally, we have a quick review section. If you just need a quick recap of what was covered in that particular chapter.\n\nAnd so it's broken into a few different chapters.\n\nAs I've outlined before, and the quizzes, this is a low stakes course.\n\nIt's not gonna passfail or anything like that. You can take the quizzes as many times as you would like. To once you get through the whole course, pass each of the quizzes, then at the end, you'll be issued a DV fundamentals badge. Feel free to, put that on LinkedIn if you want to show it off.\n\nAnd so I'll get out of your way shortly, but, we'll love to hear your feedback on the course at the very end or on LinkedIn or reach out to us in dbt community slack. We take our teaching craft very seriously here on the training team. So let us know, and I'll I'll step aside and let you learn from myself and the rest of the team. Thanks.","hasPart":[{"@type":"Clip","endOffset":39,"name":"Introduction","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=0s"},{"@type":"Clip","endOffset":73,"name":"Discovering dbt","startOffset":39,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=39s"},{"@type":"Clip","endOffset":133,"name":"Course Overview","startOffset":73,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=73s"},{"@type":"Clip","endOffset":152,"name":"Course Structure","startOffset":133,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=133s"},{"@type":"Clip","endOffset":175,"name":"Course Format","startOffset":152,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=152s"},{"@type":"Clip","endOffset":195,"name":"Closing Remarks","startOffset":175,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/welcome-to-dbt-fundamentals-5min/welcome?page=1&wtime=175s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_235">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/t7x65av30d","@type":"VideoObject","duration":"PT2M2S","name":"C2-L2-traditional data teams explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/0f8cfcdb3b43899e7ebe680fc189c80e711fe325.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/t7x65av30d","uploadDate":"2023-11-20T15:51:47.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/fe2954f66591cbb80c96a3c4e7f20d6f09ad3397.m3u8","transcript":"Hi everyone. So we're talking about who is an analytics engineer? Where did this role come from, why is it necessary for data teams. We are going to go on a little bit of a journey starting with traditional data teams, then talking about ETL and ELT, and then we'll circle back to where analytics engineering fits in to the whole data team structure.\n\nSo let's first start with traditional data teams. Traditional data teams have typically two roles, data analysts, and data engineers. The data engineers are in charge of building the infrastructure that the data is hosted on, usually databases. And then also for managing the ETL process extract, transform load for making sure the data is where it needs to be and in tables so that the analysts can then query it.\n\nThe skill set for a typical data engineer includes SQL for sure. But also includes, Python, Java, other functional programming languages. To orchestrate the production of that data so that the analysts have it to just to work with. The data analysts on the other hand, tends to work a little bit closer to the business decision makers in finance, marketing, and other departments.\n\nAnd they typically query the tables that the data engineer has built to serve up dashboards or different types of reports. And so analysts their skill set usually involves a lot of Excel and then also, quite a bit of SQL to query those underlying tables. So when we think about these two roles at an organization. There's essentially this gap between the two of them, the data analysts on one hand knows what needs to be built so that business decision makers can make those decisions.\n\nAnd then the data engineer has the skills to build that, put that in production, have those tables refresh at some cadence because of this gap between the two, there's an opportunity for teams to work a little bit more efficiently. It wasn't until the recent advent of some technology, that we'll learn about in a moment that makes this possible for us to rethink what a data team could be.","hasPart":[{"@type":"Clip","endOffset":21,"name":"Introduction","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=2&wtime=0s"},{"@type":"Clip","endOffset":121,"name":"Traditional Data Teams","startOffset":21,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=2&wtime=21s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_295">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/qbunk0c39l","@type":"VideoObject","duration":"PT3M27S","name":"C2-L3-etl vs elt explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/a188b1fcd22b9fb8eead91954329e6706905a42e.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/qbunk0c39l","uploadDate":"2023-11-20T15:53:18.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/4eb0663d706c6abcc8d50378c5027c7c139fd2ad.m3u8","transcript":"So you've been working in data for awhile. You've likely done the following extracted data from some source, whether it's email as a CSV or an Excel file, manipulated that data and then serve that data over to a colleague so that they can make decisions based off your analysis. This is in a nutshell, like its own ETL process. You're extracting the data by downloading it.\n\nYou're manipulating that data. You're transforming it and then you're loading that data, giving it back to someone who can use it in that new state. The more traditional ETL process is handled by data engineers, where the data is taken out of a database, transformed on some third party machine and then loaded back into the database so that data analysts can query that data. This usually requires a few, additional skills and on top of SQL Python, Java, other functional programming languages to make this happen.\n\nThen in addition to that, once that table is built, that process of building that table, refreshing that table, inserting new records, rebuilding the table, whatever it is, it needs to be automated, and that requires additional tooling, tools like airflow have commonly been used to automate that process. But then there's been this recent addition and introduction of data warehouses that are based in the cloud. And because they're based in the cloud, organizations can just purchase them and scale them up as needed. They don't need to build these things on premise, so they just have them when they need it.\n\nAnd then they'll also this term data warehouse has emerged and it means slightly different things at different organizations, but in a nutshell, the data warehouse is the coupling of a database and a supercomputer that can run transformations run code against that database. This has been a complete game changer for the analytics workflow. Particularly, because you can just take raw data, get that into your data warehouse and then transform it from there. There's no longer this extract load extract load process every time you want to rebuild new database object.\n\nAnd so this has changed the term ETL, swapped it around a little bit to E L T extract load transform. So for data teams, what this means is we can first focus on just the E and the L. Let's extract data from some source and then load it into our data warehouse, just get it in the data warehouse. And then once it's there, we can transform it into whatever shape we need so that analysts can query that data later.\n\nTotal game changer. And some other impacts of this are the compute that's associated with data warehouses is scalable. If you need a more powerful computer, you can get that just by asking your provider for more. You have to pay for it, but you can just get a stronger computer.\n\nAlso as your organization grows, you're inevitably going to need more space to store that data. In the cloud, these databases, data warehouses are scalable. You can store more data as you need. And then finally, there's this old process of extracting data and then loading it back every time you want to build a new database object.\n\nThat doesn't happen anymore. Raw data is there. You transform it? There's no longer this transfer of data, consuming a lot of energy and probably consuming a lot of financial resources to make that happen.\n\nAnd so with this game changing technology, we can now introduce this new role of analytics engineer and rethink about how our data teams work together. That's what we want to cover next.","hasPart":[{"@type":"Clip","endOffset":87,"name":"Introduction to ETL Process","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=3&wtime=0s"},{"@type":"Clip","endOffset":148,"name":"Introduction of Data Warehouses","startOffset":87,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=3&wtime=87s"},{"@type":"Clip","endOffset":195,"name":"Impacts of Data Warehouses","startOffset":148,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=3&wtime=148s"},{"@type":"Clip","endOffset":207,"name":"Introduction of Analytics Engineer Role","startOffset":195,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=3&wtime=195s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_347">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/heyh0zt4u7","@type":"VideoObject","duration":"PT2M56S","name":"C2-L4-analytics engineer explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/496b047875626a82a73e579bc2e4de56.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/heyh0zt4u7","uploadDate":"2023-11-20T15:54:35.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/47932fe00eadd556e20696385d306fa891ee5690.m3u8","transcript":"So let's revisit the data team. Previously, we covered that the traditional data team is made up of data analysts and data engineers. And what really drove this process was the ETL framework. that data engineers owned of extracting the data, transforming the data and loading the data.\n\nData warehouses enable this new process of E L T extract the data, load the data, and then transform from there. And so with this changes is that we have this new role emerging known as analytics engineer. And we'll just talk about first the analytics engineer, and then we'll see how that impacts the analyst and the engineer, the data engineer as well on the team. So the analytics engineer is solely focused on taking that raw data and transforming it into transformed data so that the analysts can take it from there and serve whatever needs the business has.\n\nThey're really in charge of the T and ELT. This then frees up the data engineer to focus on the extracting from sources and then loading into the data warehouse or the EL in ELT. They can also focus on more macro level things, maintaining infrastructure and things like that. Then for the analyst, they can work more closely with the analytics engineer to deliver these final tables that can then be queried with a BI tool, in a much faster way so that they can get what they need when they need it and get those to the right people to make the right decisions.\n\nAnd so ultimately, the team is composed of data engineer, analytics engineer, and then a data analyst and maybe different numbers in each of these roles. I would love to share with you a quick snippet of an article that my colleague Claire wrote. I'm going to show that on the screen in a moment, highly recommend you check this out. I'll link it below.\n\nIt's a great read. And so take a moment to just pause the video and just read the three columns here and kind of soak in what each of these different roles do and how they might work together. Great! So thanks for, thanks for taking a look at that.\n\nImportant disclaimer here is that these roles are the lines between these roles are really blurry. The people don't need to be siloed into these specific job descriptions. And in fact, if you're a brand new data team, you might be a data team of one, you might be owning all three of these roles and there's tools to do that. These days, your data warehouse in the cloud, there's off the shelf tools for extracting and loading there's tools for transforming.\n\nThere's plenty of tools for visualizing that data. You can run this as a data team of one, but obviously as the needs of your organization, get larger. You need more people. And so you may develop your organization into these different roles or something like that.\n\nAll in all analytics engineer is a new role that can help data teams move faster. And next we're gonna talk about DBT and how that fits into the bigger picture here.","hasPart":[{"@type":"Clip","endOffset":52,"name":"The Traditional Data Team","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=4&wtime=0s"},{"@type":"Clip","endOffset":86,"name":"Changing Roles and Impact","startOffset":52,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=4&wtime=52s"},{"@type":"Clip","endOffset":106,"name":"Team Composition and Collaboration","startOffset":86,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=4&wtime=86s"},{"@type":"Clip","endOffset":166,"name":"Role Flexibility and Tools","startOffset":106,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=4&wtime=106s"},{"@type":"Clip","endOffset":176,"name":"The Emergence of Analytics Engineer","startOffset":166,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=4&wtime=166s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_422">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/goi598nozd","@type":"VideoObject","duration":"PT4M20S","name":"C2-L5-modern data stack explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/8922c5732a5ba357f08817fd39fd1729.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/goi598nozd","uploadDate":"2023-11-20T15:54:43.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/e540c545e8377afa47ad9b61129483c155099c0f.m3u8","transcript":"All right. Let's focus on dbt in the modern data stack. Let's see how everything fits together. First, we have a ton of data sources these days.\n\nThis could be Salesforce data, HubSpot data, all sorts of data being collected about our business, which we'll use to make key decisions. At the center of the modern data stack is your data platform. This could be Snowflake, Redshift, BigQuery, Databricks, or a plethora of other tools that are available for storing your data as the central location for your business. Those four are supported in dbt cloud, but if using dbt core, there are a ton of different community supported adapters for different data.\n\nAnd so you may be wondering how does this data move from data sources to data platforms? You could transfer all this data with custom tooling, through Python, Scala, or Java, but there's an emergence of a ton of different tools known as loaders or EL tools that will extract this data from those sources and then load them into your data platform. These are the E L step of the ELT framework as we move to cloud data platforms. And so once you have that data in your data platform, you probably want to use that data for something that's where BI tools come in.\n\nML models come in. As well as operational analytics, where we may take some curated data from our data platform and push that back to our applications. And so let's draw some arrows here. We may be pushing the data to Tableau Looker mode, power BI, or maybe we're pushing it to an ML model or a notebook that we're using maybe in Hex or something.\n\nOr taking that data and pushing it into Census or Hightouch to then use that data really productively in one of our applications. So where does dbt fit in? dbt works directly with your data platform to manage your transformations, test them, and then also document your transformations along the way. So let's zoom in on this interaction here between dbt and your data platform.\n\nFrom on the left, we see raw data coming in and at the end of this process, we have curated data sets that are ready for our BI tools, ML models, and operational analytics. How do we get there though? With dbt it's really easy to develop your transformation pipeline because you are writing modular code in models as SQL select statements. You don't need to worry about the DDL and the DML to wrap around that.\n\nYou're just focusing on select statements. And while you write those models you are building dependencies between models to transform that data over time. And so if we want to visualize that, we see, we have this dbt DAG for data lineage: directed acyclic graph. So on the left, we have our sources and those are transformed into our staging layer here into multiple models downstream.\n\nAnd then we can even make dbt aware of the BI layer or any of those downstream workflows. So while you're writing dbt code, you are slowly assembling this DAG. So you see complete lineage from source through use case there. At the end, we come back up here as you're developing your models, you can also test your models.\n\nSo you can ensure that a primary key is in fact unique or is actually not null before shipping that data and then having that run in production. While you're also configuring tests. You can also document your models while you write the transformations right in the same code base. And so you create a new model, you configure tests on it, and then you write documentation while that is fresh in your mind.\n\nYou don't need to open a new tab, go into a different system. It's all right there. So once you agree and trust your transformations and you've tested them and you've documented them, you can then deploy your dbt projecton a schedule. Through the dbt cloud interface is really easy to do.\n\nYou set up a production environment or deployment environment, and then you set up a job. You can run that weekly, daily, you can re really get aggressive and run that hourly. If that is the use case you need. Then you have these refreshed datasets on whatever cadence that you need.\n\nSo if we step back, we see that DBT is the T and the ELT framework in our modern data stack, powering the transformations of that raw data through those curated datasets to power your BI tools, ML models, and your operational analytics workloads.","hasPart":[{"@type":"Clip","endOffset":40,"name":"Introduction to Modern Data Stack","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=0s"},{"@type":"Clip","endOffset":73,"name":"Data Movement and ELT Framework","startOffset":40,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=40s"},{"@type":"Clip","endOffset":96,"name":"BI Tools and ML Models","startOffset":73,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=73s"},{"@type":"Clip","endOffset":121,"name":"Data Utilization in Applications","startOffset":96,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=96s"},{"@type":"Clip","endOffset":143,"name":"dbt and Data Platform Interaction","startOffset":121,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=121s"},{"@type":"Clip","endOffset":167,"name":"Development of Transformation Pipeline with dbt","startOffset":143,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=143s"},{"@type":"Clip","endOffset":187,"name":"Data Lineage and Downstream Workflows","startOffset":167,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=167s"},{"@type":"Clip","endOffset":210,"name":"Testing and Documentation of dbt Models","startOffset":187,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=187s"},{"@type":"Clip","endOffset":227,"name":"Efficient Model Configuration in dbt","startOffset":210,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=210s"},{"@type":"Clip","endOffset":243,"name":"Deployment of dbt Projects","startOffset":227,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=227s"},{"@type":"Clip","endOffset":259,"name":"Role of dbt in ELT Framework","startOffset":243,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=5&wtime=243s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_497">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/dl383b500m","@type":"VideoObject","duration":"PT8M48S","name":"C2-L6-overview of exemplar demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/cc22086a15970024ac5d93bd06c9d98d.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/dl383b500m","uploadDate":"2023-11-20T16:03:32.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/9b4accf120f605c5e7399f37db7eb9c2bea020ad.m3u8","transcript":"Hey everyone. In this video we're gonna do a quick walkthrough of what the project will look like at the end of this dbt Fundamentals course. So here I am in the dbt Cloud IDE and we're gonna look at model sources, tests, and docs. And so just to orient you to everything we have what we call here is a DAG ,D-A-G directed Acyclic graph, and this shows me the flow of data all the way from source, those green nodes all the way through this final model called DIM customers.\n\nAnd so to make that super clear, these green nodes represent tables in my data platform that were dropped off by some loader tool, maybe that's Fivetran, maybe that's some other custom Python script, but those are sources, those are brought into my data platform automatically. The blue nodes are then called models and those map one to one with a table or view in your data platform. And so I'm gonna design those and build those here in dbt and then I can persist those over in snowflake, Databricks, Redshift, BigQuery or whatever other data platform you might be using. And so before we jump into the nitty gritty there the first command I want you to be familiar with as you jump into the course is dbt Run.\n\nAnd so what dbt run is gonna do is from left to right in the DAG, below it's gonna build each of those models. And so you can see I've run this a couple times in the past but we'll see a new run queues up in a moment. There we go. We have stage customers, stage orders, stage payments, and then fact orders being built.\n\nAnd in a moment we'll see everything else built as well. Great. Cool. So you'll notice stage customers, stage orders, stage payments.\n\nIf I look here, I can see those were the first three models that were built. So now you might be wondering how does this actually get built? We're gonna learn a lot about that throughout the course, but just wanna point you in the right direction so you have some grounding. If I look here at Stripe, I can go to Source Stripe dot YAML.\n\nAnd what you'll see here is I have a configuration in place that tells dbt about this Stripe payment source here. It's purple now because I've highlighted it. But if I look back at DIM customers, you'll see that it's actually a green node, right here. So first thing I need to do is in some YAML tell dbt about those raw tables that were brought in by my loader tool.\n\nAnd then downstream from there I can even double click on the DAG here to navigate. I can build dependency back to that source using a source macro like you see here. And then the rest of it is just pure SQL. And so in this model in particular, I'm just cleaning up some of the raw data, renaming some column names changing the amount.\n\nI think it was sent over to dollars. The arrow you see here is a dependency built through this source macro here. So instead of writing the raw table name, I can use a source macro and that dependency gets built. If I then go downstream to fact orders, I can see that fact orders actually builds off of two models, stage orders and stage payments, and I'm using what's called the ref function here.\n\nAnd so the order of which your models get built is all done when you write the SQL transformation to do whatever you want it to do to build that particular model. So I have two refs here that's building those two dependencies here in the graph. So that's just enough about sources and models to get you started, let's turn our attention to tests and docs. So let's find where those tests and docs are actually configured.\n\nIf I go to Jaffle shop here, I can see Stage Jaffle Shop dot YAML, and what I can do is configure tests and docs in YAML files really quickly and easily. And so for example, here in terms of tests on the stage customers model, I have a column called Customer id, and I want to test that for uniqueness and to make sure that none of those values are null. I can do that with just a few lines of yml, and then I'm able to enforce that assumption against that particular column. That's the basics of tests.\n\nWe'll get into that more later in the course. In terms of documentation, I can actually write descriptions on the model and the column itself, so I can leave a note for my future self. I can leave a note for a peer, I can leave a note for a stakeholder who I've never even met, and they're able to see that documentation in a documentation site that I'll show you in a moment. A couple other commands I wanna show you just to get you started.\n\ndbt run, which we saw before, will actually build your models. dbt test will actually test those models as they've been built. And so we'll let that queue up. And what that's gonna do is given the tests that I've configured here, actually run SQL against those materialized tables or views, and it will tell us if those things are in fact, unique or not null.\n\nSo in this case, we were looking at the stage customers model, customer ID column, and I can see here we have, gotta look through the logs here a little bit. Stage customers, customer ID column, making sure that's unique. Great. So we can see that the test is actually there and then it actually passes.\n\nright here. So that's tests. And you'll learn a little bit later about another command that combines runs and tests, but also we have dbt docs generate. dbt docs generate, will build the documentation site that you can hand to stakeholders so that they know what models mean, what columns mean and things like that.\n\nSo we'll let that queue up in the background and I'll let you preview that particular site in a moment. So what's happening here is dbt is going through my entire project and building a documentation site. It's also sending some queries over to my data platform to get some information about the tables as they've been materialized. And once I run that, I can click on this little book here for View Docs.\n\nAnd what we see here is a documentation site that will show us information. So you don't need to actually go into the code base and see these things. So let's see if we can find stage customers, customer id, and a description on that column. So if I go to Jaffle shop or Yep, let's go to Jaffle shop here, models.\n\nLet's go to stage customers right here, we see a primary key for customers, and if I toggle back to the IDE, the primary key for customers is...\n\nThere we go, the description's right there. So someone can come in here to docs and find out what that column actually means. It's a very self-explanatory description, just using it as an example. So that is documentation.\n\nAnd the one thing, one additional thing I wanna show you that I get really excited about is this green button here, view lineage graph. If I make this large, I can see the lineage upstream and downstream from that model. I can clear this selector here, and I can also see the entire DAG here for my entire project. Really nice.\n\nSo without even logging into the IDE or knowing how to write dbt code, I'm able to see the flow of data at my organization. And so at this point, we've talked about dbt run, talked about dbt tests, and we talked about dbt docs generate. We've talked about those three commands in the context of you as a developer in dbt code. So if you're writing dbt you can use those three commands as you develop to make sure things are building as you would like.\n\nHowever, if you really wanna get the most out of dbt Cloud, you likely want to run that on a schedule and not log in every time to run that. So this is where deployment comes in. In deployment, you have the chance to set up an environment. And so in this case, I've already set up a deployment environment.\n\nI was working the development environment previously. So if I click on this deployment environment, I can configure what we call jobs within this environment. And so you'll see I have one job down here daily run, and I kicked it off about 20 minutes ago. And what I can do here is run a set of commands on a schedule at whatever cadence I would like.\n\nSo in this case, let's see what I have configured here. I have this set to run every sunday through Saturday. So I guess I should update my name there hourly run might be more appropriate. I'm gonna turn this off though because it's just using sample data.\n\nI don't want burn some compute. But I can also pass commands here, so I could run dbt, run dbt test. But in this case, and we'll cover this later dbt build is a combination of run and test. It'll build a model and then test it.\n\nIt'll build another model and test it. So a few more intricacies to that command that we'll learn later as well. And so to summarize, over here in the developed tab, this is where you can work on your project, add models, add nodes to your graph like you saw here, and then in deployment you'll be able to run that on a schedule. We'll be building towards something very similar to this throughout the rest of the course but just wanted to orient you to where we're headed throughout dbt fundamentals.","hasPart":[{"@type":"Clip","endOffset":30,"name":"Introduction to dbt Fundamentals","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=0s"},{"@type":"Clip","endOffset":71,"name":"Understanding the DAG","startOffset":30,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=30s"},{"@type":"Clip","endOffset":117,"name":"dbt Run Command","startOffset":71,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=71s"},{"@type":"Clip","endOffset":204,"name":"Configuring Sources and Models","startOffset":117,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=117s"},{"@type":"Clip","endOffset":258,"name":"Tests and Documentation Configuration","startOffset":204,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=204s"},{"@type":"Clip","endOffset":282,"name":"dbt Commands Overview","startOffset":258,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=258s"},{"@type":"Clip","endOffset":302,"name":"Testing Models","startOffset":282,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=282s"},{"@type":"Clip","endOffset":321,"name":"Generating Documentation","startOffset":302,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=302s"},{"@type":"Clip","endOffset":346,"name":"Building Documentation Site","startOffset":321,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=321s"},{"@type":"Clip","endOffset":384,"name":"Viewing Documentation Site","startOffset":346,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=346s"},{"@type":"Clip","endOffset":431,"name":"Viewing Lineage Graph","startOffset":384,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=384s"},{"@type":"Clip","endOffset":449,"name":"Deployment in dbt Cloud","startOffset":431,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=431s"},{"@type":"Clip","endOffset":489,"name":"Configuring Deployment Environment","startOffset":449,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=449s"},{"@type":"Clip","endOffset":528,"name":"Running Commands on Schedule","startOffset":489,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/who-is-an-analytics-engineer-20min/introduction-to-analytics-engineering?page=6&wtime=489s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_586">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/kq1g3h3v4a","@type":"VideoObject","duration":"PT9M","name":"C3-L6-dbt cloud ide overview-[updated 2024-10-23]","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/0dc0077262a1634bee4d8283c82b3643.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/kq1g3h3v4a","uploadDate":"2023-11-20T16:32:07.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/da7641ab50ed31f1562d382e73169102a663cabf.m3u8","transcript":"\n\nBy this point, you should have connected dbt Cloud to your data platform and Git repo. So here you are now, in the IDE, or Integrated Development Environment. I'm going to give you a quick tour of all of the things you need to know to be successful in this course, and I'll even show you some little Easter eggs.\n\nYou know, some spoilers of things that you're going to be seeing later on.\n\nSo let's get started with stuff here in this menu on the left. So right now you can see we're in the Develop tab. I have the choice to develop in the Cloud IDE, which is where we are right now, in the Cloud CLI, or using the Visual Editor. Right below this Develop tab is the Deploy tab.\n\nThis is where you'll click to see all things deploy related. So, you can see your run history, you can see your environments, the jobs that you made in your environments, and your data sources. Basically, this is where you'll go to\n\nsee all job, all deployment related things. This dashboard tab right here gives you a quick overview of what's going on in your project.\n\nThings like recent job runs, deployment environments, you know, that sort of thing.\n\nUh, this book icon up here, if I ran the command dbt docs generate, is where I'd click to view all of the documentation for my project. Down here, this tab here, is where I would go to either view my account settings, or\n\nswitch my account if I have multiple. When you initialized your project, dbt built out all sorts of folders like the ones you see here, and it also built out a couple files like your dbt project YAML file, which I've\n\njust opened.\n\nIt covers some really important configuration paths for different features in here. It has the name of your project, all sorts of folder configurations that we won't really get into, although we will be looking closely at your models folder and your tests folder during this course. Information on the rest of those folders is covered in other courses and in the dbt documentation. I'm going to go ahead and dive into our models folder a little bit.\n\nWe can see what kind of files we have here. We see a lot of YAML files and a lot of SQL files with the odd markdown file. At the top of the screen here, you'll see all of the tabs that we have open. Right now, the only file we have open is our dbt project.\n\nyaml file. But I can also create a new file by pressing that new file button on the top right. This is essentially a SQL runner, so\n\nyou can type any SQL in here, and you can also type in dbt specific code, so let's try that out right now. When you're working in here, you can click this little preview button, and this will show you what all your\n\ncode will do when you run it against your data platform.\n\nWhat I put in there was just a small bit of dbt code with some Jinja. Again, Jinja is just a Pythonic language. And so what we're saying we're going to do here is iterate over ten numbers, uh, we're going to loop over ten numbers, we're going to union all those numbers. . So what we should just see here is everything from 0 to 9.\n\nWhich is, if we scroll down to the bottom here, that's what we're seeing.\n\nWhen I click this compile button What this is going to do is it's going to take that dbt code that I just wrote, and it's going to show me the raw SQL that the dbt compiles to.\n\nDbt code is very similar to SQL with some extensions, thanks to Jinja. So basically when you see anything like these double curly brackets here, Or these curly brackets with a percent sign.\n\nYou can pretty much assume that's Jinja. We won't get too into Jinja. Just know that much and you'll be fine. So again, if we go back to our models folder, we see that we have a lot of SQL files in here.\n\nWe call models, uh, SQL files that contain SELECT statements, but again, we'll get a little more into that a little bit later. I'll just click on a random model here. You can also preview and compile these. So if I hit preview, then we're going to see the table that we're, uh, that we're, that we're selecting from.\n\nAnd if I click compile, we'll get to see the compiled SQL code. This compiled code, uh, pretty much matches the uncompiled code.\n\nExcept for when we're selecting from our table right here, because this is a really cool Jinja macro, or function, that we use to make it a little bit easier to reference tables. We also have this really cool Lineage tab here, so if I have a model open, I can click that Lineage button, and that little graph will pop up down here.\n\nThis is a really cool thing that dbt does, because it keeps track of all of your dependencies between your models, so it knows What order things should be built in. If I click on any of these files down here, it'll just take me directly to that file. So now\n\nI'm in this dim customers file. I also mentioned, uh, YAML files earlier.\n\nI'll just click on a YAML file. These are where you're going to configure tests, documentation. We'll give you all the details on those later on. If you're new to YAML, don't worry about it.\n\nYou'll be pretty comfortable with YAML by the end of this course. Now if I make any changes to my files, I'll make a really superficial change here, I'll just add, uh, add some whitespace. What I'll see is this little green dot pop up next to the name of the file that I edited.\n\nAnd if I save this file, we get this little M next to it for modified.\n\nThese green dots and Ms will go away if I click our Git button up here, commit and sync, and I commit those changes to our branch. Basically what a commit does is it'll take a snapshot of your project's current state, and that can now be pushed into your Git repo where you commit a real change. You'll want to include a little message when you click this commit button. It'll prompt you to add a commit message.\n\nAnd you'll want this message to be pretty descriptive so that anyone can understand what you did and why. So I might add a commit message like, um, Added extra line of white space to stg_jaffle_shop.yml to demonstrate how to write a commit message, commit changes. Once your series of commits represents, you know, one logical piece of work, you might click, uh, create pull request button.\n\nWhat that will do is it will prompt someone on your team to look at your pull request, review your pull request, maybe approve your pull request, so that that can all be pushed into your main, you know, production branch. Now down here, this is where I might type out, you know, commands that I want to run, like say dbt run. which will build all of my models. If I typed dbt build, that would run a model, then test that model, and then repeat for all of my models in DAG order, in Lineage Graph order.\n\nYou can also run dbt docs generate, which will generate all of your documentation. And now that dbt run has finished building all of my models, I can see all sorts of great information here. Um, I can see how long it took to run each of these models. I can see all the models that were, uh, that were run.\n\nI can see more details if I click on each individual model. You can see the actual code that was run, the compiled SQL. Uh, and if there were any errors when I ran this, we would be able to review them in this errors tab and try to figure out from the error message what actually went wrong. That was a really quick run through of the IDE.\n\nNow I want to show you some really useful keyboard shortcuts. So I'll open up new blank file. And to start, basically the most important thing you want to remember is the double underscore. That's going to show you a list of all of the keyboard shortcuts that you can use.\n\nI'm going to try, uh, say, the keyboard shortcut to write a reference statement. So I'll just write ref, and so if you type in double underscore ref, uh, a basic generic ref statement, ref function, whatever you want to call it, will pop up written out just like that. You'll learn a lot more about ref functions later on, but in general, if you want to use shortcuts. double underscore is the way to go to get access to all of them.\n\nNow I'll give you a quick overview of the rest of the UI so you can be familiar with everything before you jump further into the course.","hasPart":[{"@type":"Clip","endOffset":19,"name":"Introduction to dbt Cloud IDE","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=0s"},{"@type":"Clip","endOffset":57,"name":"Tabs and Settings","startOffset":19,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=19s"},{"@type":"Clip","endOffset":72,"name":"Project Configuration","startOffset":57,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=57s"},{"@type":"Clip","endOffset":88,"name":"Models Folder","startOffset":72,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=72s"},{"@type":"Clip","endOffset":101,"name":"File Tabs and SQL Runner","startOffset":88,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=88s"},{"@type":"Clip","endOffset":136,"name":"Preview and Compilation","startOffset":101,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=101s"},{"@type":"Clip","endOffset":159,"name":"Understanding dbt Code","startOffset":136,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=136s"},{"@type":"Clip","endOffset":173,"name":"Previewing and Compiling Models","startOffset":159,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=159s"},{"@type":"Clip","endOffset":199,"name":"Understanding Lineage","startOffset":173,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=173s"},{"@type":"Clip","endOffset":214,"name":"File Navigation and Yaml Files","startOffset":199,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=199s"},{"@type":"Clip","endOffset":242,"name":"Configuration and Changes","startOffset":214,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=214s"},{"@type":"Clip","endOffset":274,"name":"Committing Changes","startOffset":242,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=242s"},{"@type":"Clip","endOffset":295,"name":"Command Line Interface","startOffset":274,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=274s"},{"@type":"Clip","endOffset":311,"name":"Reviewing Model Run","startOffset":295,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=295s"},{"@type":"Clip","endOffset":346,"name":"Useful Keyboard Shortcuts","startOffset":311,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=311s"},{"@type":"Clip","endOffset":539,"name":"Overview of the UI","startOffset":346,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=4&wtime=346s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_661">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/yc0hrtr1z5","@type":"VideoObject","duration":"PT3M55S","name":"C3-L7-ovrvw dbt cloud ui demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/7207529da44ca2e01ebfac03ad7b0d4f.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/yc0hrtr1z5","uploadDate":"2023-11-20T16:34:28.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/cca1544c815a2db17f0a87355f6d50b4088e2be7.m3u8","transcript":"Hey everyone. We're going to jump into the dbt Cloud UI here, just so you have some orientation to where things are, where to go, where to find them as you navigate the rest of this course. So on the left-hand side, you should see this navigation. I'm going to keep it popped open for this, but you can also, if you'd like to keep your screen real estate, you can keep it nice and collapsed like that.\n\nI'll expand it like this. And down here, you'll see this little kind of like work building logo and you can choose your account. I'm currently working in Coap Sandbox. This is my sandbox account.\n\nAnd I could toggle into other projects if I. Opened this up here. So make sure you're working in whatever account you want to use for this particular course. Once I have that, you can then select a project.\n\nYou may have already set one of these up and you might have multiple projects over time, depending on what type of account you're using. And so I am going to focus on analytics here. And so I'll already see, I'm brought into this dashboard here. I don't have much going on with this project at the moment, but once I do have it up and running things, running on a schedule, refreshing my pipelines.\n\nI will get to see some high level information about how my data pipelines are running, powered by dbt. On the left-hand side, there are three kind of key motions or key areas of the product that you want to jump into. So first being develop. There are three ways to develop in dbt right now there's cloud IDE cloud CLI and visual editor.\n\nAnd this course we're going to focus on cloud IDE. And you'll notice if I open that up, I actually land directly in the development environment for this particular project. So if I jump back. In a future course or a future time, you can check out these other options for development.\n\nAnd once you've done a bunch of development merged things to main you can then run your data pipelines built in dbt on a schedule using the deploy function here. This allows you to set up environments and within environments, you can run jobs, which is effectively running your project on a schedule. And then you can review the run history from each of those jobs. So this is a cascading effect here.\n\nEnvironments have jobs have run history. And once you've done that and run your first production run. You can navigate to explore which we'll show you. A very high level view of your project.\n\nSo you can see how models depend on each other see your full lineage look at documentation and things like that. So you will likely spend most of your time as a dbt developer in develop, deploy, or explore. Great. So we'll jump into each of those throughout the course.\n\nSo you're familiar with them, but just wanted to give you some orientation to those. As you are working through the course, you might need to investigate a few different things like connections, or just want to know where the account settings are. Those again are here under account settings. Anything under settings here is account wide.\n\nSo if I'm working in an account with someone else, These will change things for both of us. Whereas your profile, these are specific to you as a developer. So if I click credentials, click on analytics, I will see my credentials here for development. And then finally, if you're interested in notifications, you can have email and slack notifications as well.\n\nAnd so that is your account settings. And a few more things just to get you oriented. For helping guides, lots of things to support you getting started. If you're watching this video, you're probably already in dbt learn.\n\nWe also have our product docs, slack community, and our community forum as well. If you need to reach out to support or check the status of dbt Cloud, you can check the status page, see release notes, create a support ticket. Let us know how we can support. And then finally, as I wrap this up let us know what you think.\n\nIf there's a part of the product we're doing really well. Grab a screenshot and write us a note. There's something we can improve. We want to hear from you.\n\nSo definitely just fill this out add a screenshot that helps us know what you're talking about. And then if you'd like us to connect with you. You. can check this box.\n\nAs well. And so with that, you have a full tour of the dbt cloud UI.","hasPart":[{"@type":"Clip","endOffset":63,"name":"Introduction to dbt Cloud UI","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=0s"},{"@type":"Clip","endOffset":101,"name":"Development Options in dbt","startOffset":63,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=63s"},{"@type":"Clip","endOffset":132,"name":"Managing Data Pipelines","startOffset":101,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=101s"},{"@type":"Clip","endOffset":148,"name":"Exploring Project Dependencies","startOffset":132,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=132s"},{"@type":"Clip","endOffset":189,"name":"Account Settings Overview","startOffset":148,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=148s"},{"@type":"Clip","endOffset":215,"name":"Support and Resources","startOffset":189,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=189s"},{"@type":"Clip","endOffset":228,"name":"Feedback and Improvement","startOffset":215,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=215s"},{"@type":"Clip","endOffset":234,"name":"Conclusion of dbt Cloud UI Tour","startOffset":228,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/set-up-dbt-cloud-55min/getting-started?page=5&wtime=228s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_736">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/u5mzoa143d","@type":"VideoObject","duration":"PT1M55S","name":"C4-L2-what are models-[Updated Apr-2024]","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/a243ae3af56d75a908c7014592ef4636.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/u5mzoa143d","uploadDate":"2024-04-09T15:28:17.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/7a13339c919d2b546669a99046121bcdccfe4a55.m3u8","transcript":"In analytics, the process of modeling is the shaping of your data between raw data all the way up through your final transformed data.\n\nNow typically, data engineers are responsible for building the tables that represent your source data, and then on top of that, building the tables and the views that transform that data step by step, eventually building out the final tables that the BI tools can query to drive insights for your organization.\n\nIn DBT, though, models are just SQL select statements inside of your DBT project, and each of these represent one modular\n\npiece of logic that will slowly take that raw data and build it into the final transformed data that you need.\n\nEach of these transformations are gonna live inside of SQL files written and stored in your DBT project inside of the models folder.\n\nNow a good assumption to have early on is that each model will map one to one with either a table or a view inside of your actual data warehouse.\n\nNow there will be some different materializations that we're gonna\n\ncover later where this is not necessarily true, but this is a good assumption to have right now when you're just getting started.\n\nAnd that's what's just great about DBT is that you don't necessarily need to know the DDL or the DML that's necessary to build something as a table or to build something as a view. You simply just configure either at the top of your SQL file or at a separate YAML file how you want any individual model to be built. Ultimately, this allows you to focus on writing great business logic inside of your SQL files and then let DBT take care of all the DDL and the DML that's needed to materialize items inside of your data warehouse.","hasPart":[{"@type":"Clip","endOffset":37,"name":"Introduction to Data Modeling in Analytics","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=2&wtime=0s"},{"@type":"Clip","endOffset":70,"name":"Modular Logic in dbt","startOffset":37,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=2&wtime=37s"},{"@type":"Clip","endOffset":114,"name":"Simplified Data Modeling with dbt","startOffset":70,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=2&wtime=70s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_812">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/slnz00rqr3","@type":"VideoObject","duration":"PT13M7S","name":"C4-L3-build your first model demo-[Updated Apr 9 2024]","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/71a4877e8671ef62f7a914687abba197.jpg?image_crop_resized=640x389","embedUrl":"https://fast.wistia.net/embed/iframe/slnz00rqr3","uploadDate":"2023-11-20T17:05:20.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/52687093f17647040728b5c0a110bb1fac2ee022.m3u8","transcript":"Well, it's time to create our very first model over here inside of dbt cloud. But before we do that, I wanna show you a query that I have over here in Snowflake so we can examine what it's doing and take a look at its result set.\n\nWe'll step over here into Snowflake, and this is the query I've been talking about.\n\nYou can see here we've got a couple of CTEs. One's called customers. Another one's called orders. We've got another one here called customer orders. And you can start to see that we're doing some pretty basic things.\n\nA little bit of field name cleanup and we're pulling directly out of our raw database, a Jaffle Shop schema and our customers, object.\n\nSame thing here. We're pulling from orders, a little bit more, field cleanup. We start to bring some things together. We're looking for some mins and some max, some counting, and finally, we join things in and we pull this all out. Now my point right here so you can see what this looks like inside of Snowflake. And if I go ahead and I execute this particular query, I want you to be able to look at the result set.\n\nTake note of a few of the names here, Michael, Sean, Kathleen, and Jimmy, and you can see some of the fields that we have, that are the result set of this particular query. So of note, this works in Snowflake.\n\nLet's take this query. Let's bring it over into dbt Cloud, and we're gonna do a little bit of work in there. We're gonna make sure that it runs in dbt cloud, and then we're gonna see if we can actually create something here in Snowflake, but doing that over in dbt cloud. Let's go ahead and do that right now.\n\nI'll grab this particular query and let's move over to dbt cloud. And our main intention here is to save a file that has this query within it.\n\nNow within dbt cloud, inside of our models folder is where we're going to place the files where all of our different models are going to live. Now I wanna go ahead and create a file inside of this model's folder. And when I click on the ellipses, I'm actually not presented with any options. Now if that happens to you that you actually cannot create a file, what that indicates to you is you're on a protected branch, and that's my situation. If you look here at the top, I'm connected to our main branch, which is protected. It's read only. So for me to do work, for me to work on this new feature where I'm gonna add some code and do a little refactoring, I need to go ahead and create a branch.\n\nI'm just going to put my initials and call this start of modeling. You can do something similar.\n\nWe'll get that branch created, and we're gonna take note up here at the top so we can get a visual indicator that indeed we are working in our branch. And all of a sudden, my read only indicator goes away. And if I come and hover right next to our models folder, sure enough, now I can create a file.\n\nNow this was called dim customers a moment ago. Let's just stay with that. We're gonna call this dim customers.\n\nAnd we need to add the SQL file extension to it, And you can see it's being created in the miles folder. You can see the path right here above. Let's create this.\n\nYou start to see things happen. This a means it's an additional item added to the project. It's called dim customers. You can see its actual file name down here under models. Down here on my file navigation, I'm gonna select dim customers. That'll open a tab over here in my coding workspace.\n\nAnd in fact, I wanna paste my code right here.\n\nThis is what I brought over from Snowflake. And before we jump in too much, a couple more indicators that you see here on the screen. We've got at least three places that are telling me this particular file has not been saved. The most obvious one is up here on the tab. You can see that it's sort of a teal. That means it has not been saved. Likewise, there's a dot next to its name on the file navigation.\n\nThat also means it has not been saved. And then finally, big old save button over here has that teal color. Let's save this. That way we know our code has been saved.\n\nNow a lot of times when you're copying code from another system and bringing it into dbt cloud, we wanna make sure it still runs. Now I copied out a Snowflake, DBT Cloud, and this setup is targeting Snowflake. This should still work, but let's find out.\n\nWe'll choose the preview command button and DBT will take this code, send it to Snowflake. Snowflake will return the result set and I'll get a display limited to a hundred rows of what the the result set is. And there are our names again, Michael, Sean, Kathleen, and Jimmy. So, you know, step number one, we've successfully brought over code, placed it inside of dbt cloud, and the code is working.\n\nPreview actually executed.\n\nNow to be frank with you, nothing was actually constructed inside of Snowflake.\n\nNo model was built.\n\nThis preview was just taking this sequel as written, taking a look at the customer's table in Snowflake, take a look at orders, doing these same CTEs, giving us the exact same result set.\n\nIf we want to construct dim customers inside of our data warehouse, we're going to need to go ahead and issue a command. Now we issue our commands right down here in this bottom command bar, and you can see a toggle right here that, you know, raises and lowers this command tray to see even more details. But I'm gonna put in really our very first basic command and it's gonna be d b t space run. And I'm gonna press enter to execute that command. And at a high level, the run command is looking at my project and it's asking d b t what models are in this project.\n\nFind them. Now construct them in the target data warehouse.\n\nAnd what we can do is focus right in on the model in question, dim customers. These other two models came over automatically through just the setup of our project. More on these a little bit later, but let's see what's going on with dim customers and I'm gonna expand it right here using this toggle.\n\nAnd I like the details. I'm sure you do as well. This summary at least tells us it looks like a view was but let's get into the details and find out why and where.\n\nWell, the why behind it is it appears that our code that started with this CTE with customers has been wrapped inside of some DDL. This particular command was a create or replace view and it placed it in the analytics database under my schema and it's now called dim customers.\n\nNow I can't help but wonder, is it really there inside of Snowflake? Because this starts to this should create these items. So let's come over to Snowflake and take a look.\n\nI'm gonna need to get over into those databases.\n\nLet's make sure we're in the analytics database, and we are. And let's hunt down my schema.\n\nWell, here's the schema, d b t underscore d horner. And let's take a look and see what we have in here. We have one table, my first d b t model. That's one of the examples we talked about, but here's the ours that we've been working with.\n\nIndeed, dim customers has been created as a view inside of the analytics database inside of my schema. Now if it's truly there, of course, I should be able to, say, open up a worksheet tab and let's query out of that and see if we say see if we see our same, names. So open up a new worksheet and let's take a peek at what's inside that view.\n\nWe'll execute on that.\n\nTake a look at our result set, and indeed, our view does exist and we're able to query right out of it, Michael, Sean, Kathleen, and Jimmy.\n\nSo we've had great success. We've used dbt cloud, I'll call this, and we've run against all of our models and that resulted in the creation of a view.\n\nNow, we didn't really designate that we wanted a view. It's not here in our code, yet d b t did that for us. It happens to be a default behavior.\n\nBut what if we would like to specifically say, d b t, I'd like to have a table constructed, not a view? Well, one of the ways we can do that is to make a change right here inside of the code that defines dim customers. So I'm gonna open up a little space here at the top, and I'm gonna come up here and I'm gonna add what's called a configuration.\n\nAnd configurations go inside of double KERDI braces. I'll just open up a little bit of room here. And we call a particular macro that's called config for configuration.\n\nAnd if we'll place in this configuration that we want to materialize our work, our code as a table, we can change that view behavior that's happening by default. And the way we do that is we type out materialized.\n\nAnd then what we want that material what we want the materialization to be. And in this case, in single quotes, we're gonna place table.\n\nOf course, we'll save our file, and then let's check to see if this works. I'm gonna come down here to the command line, and let's do our d v t run once more. And what do you think we're gonna do once we examine the details?\n\nShould we see some different DDL that's constructed for us? Let's see.\n\nDid you accurately predict it? Were you expecting to see create or replace and instead of view table?\n\nI hope so because that's exactly what we got. So in this case, DBT has taken our code and wrapped it not within a create or replace view, but within a create or replace table. Let's see what happened over here in Snowflake. Let's see how that was executed.\n\nWell, here's my schema right here, d b t underscore d horner. Let's take a look at our views.\n\nDim customers is no longer in Snowflake as a view.\n\nHowever, under tables, here is dim customers existing as a table.\n\nSo let's collapse this command tray.\n\nAnd, you know, I'm thinking you might be wondering why is it that every single time I keep running all my models? Is there not a way that we could run just the one model in question?\n\nAnd it is possible. We'll come right down here to our command tray. It's still a dbt run, but we're gonna add some selection syntax. And in fact, the syntax is dash dash select space. And if you'll provide the actual model name, then when you do a d b t run, instead of running all of the models that are in the project, will only run the one model that you specify right here on this command line.\n\nI'll press enter. Let's see how this acts.\n\nWonderful. We didn't get all of our extra models that were part of the example. Instead, we only constructed dim customers. If I open this up, I look at the details, and you'll see our command is still the same, create or replace transient table in the same location with the same name with the same code.\n\nSo there you have it. We've created our very first model inside of dbt.\n\nWe first created it as a view in Snowflake, and then we explicitly materialized as a table and verified that in Snowflake. And we've even learned how to not only run all the models in our project, but how to run specifically certain targeted models by using the selector. So we're in a great place. Well done.\n\nWe'll catch you in the next video.","hasPart":[{"@type":"Clip","endOffset":81,"name":"Introduction to Model Creation","startOffset":1,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=1s"},{"@type":"Clip","endOffset":151,"name":"Moving Query to dbt Cloud","startOffset":81,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=81s"},{"@type":"Clip","endOffset":202,"name":"Creating a Branch in dbt Cloud","startOffset":151,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=151s"},{"@type":"Clip","endOffset":220,"name":"Creating a File in dbt Cloud","startOffset":202,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=202s"},{"@type":"Clip","endOffset":260,"name":"Pasting Code into dbt Cloud","startOffset":220,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=220s"},{"@type":"Clip","endOffset":276,"name":"Saving Code in dbt Cloud","startOffset":260,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=260s"},{"@type":"Clip","endOffset":302,"name":"Testing Code in dbt Cloud","startOffset":276,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=276s"},{"@type":"Clip","endOffset":311,"name":"Preview Execution in dbt Cloud","startOffset":302,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=302s"},{"@type":"Clip","endOffset":325,"name":"No Model Built in Snowflake","startOffset":311,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=311s"},{"@type":"Clip","endOffset":375,"name":"Issuing Commands in dbt Cloud","startOffset":325,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=325s"},{"@type":"Clip","endOffset":427,"name":"Reviewing Model Creation in dbt Cloud","startOffset":375,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=375s"},{"@type":"Clip","endOffset":439,"name":"Analyzing Model Details in dbt Cloud","startOffset":427,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=427s"},{"@type":"Clip","endOffset":505,"name":"Checking Model Creation in Snowflake","startOffset":439,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=439s"},{"@type":"Clip","endOffset":518,"name":"Success in dbt Cloud","startOffset":505,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=505s"},{"@type":"Clip","endOffset":528,"name":"Default Behavior in dbt Cloud","startOffset":518,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=518s"},{"@type":"Clip","endOffset":626,"name":"Changing Materialization to Table","startOffset":528,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=528s"},{"@type":"Clip","endOffset":680,"name":"Verification of Materialization Change","startOffset":626,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=626s"},{"@type":"Clip","endOffset":760,"name":"Selective Model Execution in dbt Cloud","startOffset":680,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=680s"},{"@type":"Clip","endOffset":787,"name":"Summary of Model Creation in dbt Cloud","startOffset":760,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=3&wtime=760s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_887">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/16vbgki2kg","@type":"VideoObject","duration":"PT3M38S","name":"C4-L4-what is modularity explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/ce8acc29f8deec2773e7e419b830af1e.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/16vbgki2kg","uploadDate":"2023-11-20T17:08:14.000Z","description":"Updated April 9 2024","contentUrl":"https://embed-ssl.wistia.com/deliveries/8d950fb4d66c1da3bcd0323324a201c2fd118c7d.m3u8","transcript":"Just built our first model called dim customers.\n\nLet's revisit the query that we used to build that.\n\nWe had multiple CTEs. Let's go through each of them.\n\nFirst CTE, took our underlying customer's data and we reshaped it into what we want it to look like. Did the same thing for orders where we reshaped orders.\n\nThen in the third CTE, customer orders, we aggregated things, based on the business logic that we decided on. And then finally, we performed a join where we joined that data together with customers to create our final data artifact. This works, and it serves our needs. But we're gonna pause there and think about something a little more tangible and then revisit how we might do that differently.\n\nLet's say we're building a car. One way to build a car would be to get a bunch of metal in a room, get a bunch of plastic in a room, get a bunch of wiring in a room, and then take all those pieces and bend them, meld them on the fly to build that final, vehicle.\n\nWe know that's not how cars are built. Cars are built by building the individual parts first and then assembling all these into the final product.\n\nWe can call this modular thinking or modularity, and we can do the same thing in analytics.\n\nSo let's rethink that query we looked at a moment ago. We saw we were doing a lot of things in this query.\n\nInstead of doing this all in one model, we're gonna break this into three separate models.\n\nSo our first model, we're gonna call stage customers.\n\nAnd what stage customers' sole responsibility to do is to take that underlying data and shape it into what we want it to look like so we can use it in any downstream models.\n\nSo that's stage customers.\n\nWe'll similarly stage orders and call that a model of stage orders, and that's where we'll shape orders into what we want it to look like. So that's two of the three models. The third and final model is we're gonna refactor dim customers to select from those two models that we just built, so that we can build that final dim customers data artifact that our BI tool can use.\n\nSo what this allows us to do is we're assembling that final model using different parts. We have stage customers, we have stage orders, and we're building that, shaping that over multiple steps into that final data artifact.\n\nWhat this also allows us to do is we can reuse stage customers and we can reuse stage orders in other models. So we're not repeating that logic in another really long select statement, long SQL query.\n\nSo what this allows us to do, thinking like this, it allows us to modularize how we build data products much like other engineers and other fields will build machinery, build hardware, or build applications. We can do that in analytics by thinking like this.","hasPart":[{"@type":"Clip","endOffset":44,"name":"Introduction to Model Building","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=4&wtime=0s"},{"@type":"Clip","endOffset":67,"name":"Analogy to Car Building","startOffset":44,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=4&wtime=44s"},{"@type":"Clip","endOffset":99,"name":"Modular Thinking in Analytics","startOffset":67,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=4&wtime=67s"},{"@type":"Clip","endOffset":138,"name":"Refactoring into Three Separate Models","startOffset":99,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=4&wtime=99s"},{"@type":"Clip","endOffset":217,"name":"Reusability and Modularization","startOffset":138,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=4&wtime=138s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_963">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/gl6i9et3k6","@type":"VideoObject","duration":"PT16M25S","name":"C4-L5-modularity and ref function demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/fa1d5d73979dc1f8dcb99a7702acb33d4e055a80.jpg?image_crop_resized=640x349","embedUrl":"https://fast.wistia.net/embed/iframe/gl6i9et3k6","uploadDate":"2023-11-20T17:05:55.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/e8d19359884c8b6a8d4a8c20acb04b62d9a752de.m3u8","transcript":"We've discussed this whole idea of modularity, and it's time to apply it to our project. We've previously said that we're gonna take dim customers, and we're gonna break it into three different models.\n\nThe approach is that we're gonna take this logic right here, all about customers, where we're selecting the ID, renaming it, and then two more fields. We're gonna put that into a model of its own.\n\nAnd then we're also gonna take the idea right here about orders, and we're gonna put orders in a model of its own. So let's go ahead and see how that's done. We're still gonna place these models inside of our models folder. So let's go ahead and create a file, and we're gonna make a spot for customers. Now, since this is staging, let's call this stage customers.\n\nWe're gonna add the SQL file extension just as before. We'll go ahead and we're gonna create this file.\n\nNow, it's empty.\n\nLet's use this section as our starting point. I'm gonna go ahead and pull this CTE out, I'm gonna place it over here in stage customers.\n\nLet's place it in here. We have the beginnings of a CTE. We're going to have to end it here and then let's pull everything out of this model right here at the end.\n\nAlright. Let's save that.\n\nWe have created our very first staging model. It's all about customers. We're taking care of our work here, taking care of a little light refactorization.\n\nNow let's make sure it works. We can use the preview button.\n\nLet's select that, and we should see if we get our three fields as expected.\n\nWonderful.\n\nCustomer ID, first name, last name. This particular model is working.\n\nNow, let's come back and do the same thing with this other logic that's down here that's all about orders.\n\nWe'll go ahead and follow our same procedure. This time, I'll go ahead and let's grab this information that we're going to use this CTE. We'll pull that out and let's place yet another new file inside of our models folder. This one will be staging, but for orders.\n\nWe'll place our SQL in here and because we want to CTE, let's clean things up a bit and then we'll pull everything out of our CTE now that this model's built.\n\nWe'll save that.\n\nAnd now we have our second staging model stage orders that's all built.\n\nWell, stepping back over here to dim customers, the rest of our logic is still very useful to us. This is where we're doing our joins that we discussed last time, and we're still relying upon orders and customers in building out the rest of this logic. So the idea here is going to be, let's leverage the fact that these two models, these staging models have been built, and let's leverage that all this work has been done and pull that right in to our dim customers model right up here at the top. Let me show you how that's done.\n\nWe still have a CTE that we're building. Let's go ahead and get that going.\n\nWe'll open ourselves up a little bit of space here.\n\nWe've already done all the work. So let's bring in that work that's been materialized in our warehouse as stage customers, where we can select everything in from where are we selecting.\n\nYou know, in dbt, we have a very important function, and it's called the ref function. And this function allows us to go and pull information from a model that's been materialized in our warehouse and to create dependencies. We're going to enclose this ref function inside of double curly braces.\n\nAnd then we're going to send the ref function a parameter inside of single quotes. And the parameter is the name of the model that we want to be used. So in this case, stage customers.\n\nGet ourselves a little space here just for readability.\n\nNow I can't quite show you yet how this will work because we've got to pull in information about our orders. So let's go ahead and build now a second CTE orders.\n\nLet's clean up some of our previous cutting and pasting here and we'll do the same thing.\n\nWe're going to select everything out of our state orders CTE, but we're gonna do the same thing with the ref function. So let's build that again.\n\nRemember, it's the name of our model.\n\nNow I can leverage the work that we've done inside of this particular model in advance. We just bring it all in. I don't have to do the logic here. Let's look quick. Looks like I'm missing a comma on this CTE. We'll make sure everything is gonna run here. We'll clean some things up, and I'm gonna go ahead and I'm gonna save.\n\nWe've set up that we can reference right here in dim customers whatever has been materialized in our database with the work that we've done in stage customers and the work that we've done in stage orders. We've brought them in as CTEs customers and orders, which then lets the rest of our query run because we are using orders and we're using customers.\n\nNow, before I actually run this, I wanna introduce you to this compile command button.\n\nI'm gonna go ahead and click that. I wanna show you how each of these ref macros actually resolve themselves in what's gonna be submitted to the data warehouse.\n\nYou'll notice up here at the top line nine, we're referencing stage customers. We're building dependencies there. But what actually gets submitted to the data warehouse?\n\nThis resolves down here to my database, my schema dbt dehorner, and then the actual model is going to be built STG customers. Now, this is very powerful because we're taking this code and it's resolving specifically to me in my development environment. That means you could take this code and it would resolve to your schema yet the same model. This allows us to share code and to work on different items and yet still be in our development environment. Likewise, you'll see stage orders, resolves to my schema, and again the model, s t g orders. This is where Ref is doing a lot of work for us, not only building dependencies, but allowing us to work in our own development environments.\n\nNow at this point, we haven't actually created anything in our data warehouse. We've used the preview command button, but that allowed us to look at the result set, but didn't materialize anything. Likewise, with compile, we could examine the code and how it resolves, but nothing's built.\n\nIn order to build these items, we need to come down here and we need to run a d b t run.\n\nBut because we use the ref function, we're gonna have items build in dependency order. You're going to notice that the different items that get built are going to be in a sequence such as stage customers and stage orders are gonna need to be built before dim customers can be built because we created dependencies.\n\nSo let's go ahead and run that right now and we'll examine the results.\n\nYou'll start to see down here on the bottom how the different models start to get built. Notice stage customers and stage orders are getting built first.\n\nAnd then finally, dim customers. And then note my first dbt model and my second dbt model are from the examples that were brought in. We'll deal with those later. And if we come in here, stage customers, we come into the details tab.\n\nLet's go and pull that down.\n\nYou'll see that stage customers was built as a view.\n\nLikewise, stage orders.\n\nWe look at the details here.\n\nWe'll see that was built as a view.\n\nAnd if you recall on dim customers, we had a config block in there, and that config block was all about building things as a table, and we see we're still creating or replacing the table.\n\nLet's go ahead and just to be sure, let's jump over to Snowflake. We'll likely have to reset or refresh.\n\nAnd let's take a look and see what's sitting inside of my tables and my views for my schema. And sure enough, dim customers, and then our two staging models, stage orders and stage customers.\n\nWonderful. Everything's working. We've now created our three models out of our original dim customers model.\n\nNow something that's very powerful, you get a glimpse of it over here under this lineage peak, but let's come down here because I wanna give you a sneak peek at DBT docs. So So I'm going to run a dbt docs generate, and then use that to explore this whole idea of dependencies.\n\nLet's go and let this run, and then we'll jump over into those docs and take a look around.\n\nOur docs just finished generating. Let's bring the command bar down. Right up here, this icon for view docs, we're gonna select that, have a new tab. And we have a whole module on this documentation area. For right now though, let's focus on the bottom right where it says view lineage graph. I'm gonna select that, and we're gonna take a look here at what we've been building. We did our work with DIM customers, and we built a stage customers and a stage orders.\n\nSo, ultimately, you can now see how we did apply modularity to our project. We now have building blocks that we can use for future models as we continue to build out our project.","hasPart":[{"@type":"Clip","endOffset":166,"name":"Applying Modularity to the Project","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=5&wtime=0s"},{"@type":"Clip","endOffset":328,"name":"Leveraging Staging Models","startOffset":166,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=5&wtime=166s"},{"@type":"Clip","endOffset":442,"name":"Using the Ref Function","startOffset":328,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=5&wtime=328s"},{"@type":"Clip","endOffset":577,"name":"Building the Models","startOffset":442,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=5&wtime=442s"},{"@type":"Clip","endOffset":984,"name":"Exploring dbt Docs","startOffset":577,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=5&wtime=577s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1038">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/o73hmtavip","@type":"VideoObject","duration":"PT1M42S","name":"C4-L6-quick history of modeling explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/055765cbd4f0cf376391d03ad4f0fd58.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/o73hmtavip","uploadDate":"2023-11-20T17:09:32.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/1338a0735833fb579ed392b19a6954da653605c2.m3u8","transcript":"If you've been working in analytics for a while, you've likely heard the term star schema or Kimbell Data Vault. Now these are all ways of thinking about how data should be organized within a database, and many of these methodologies were created when storage was very expensive and we had to reduce the redundancy in our data. These approaches are often grouped together into a concept that we'll call normalized modeling.\n\nNow over time, technology has continued\n\nto change, but we still have tremendous respect for these ways of thinking because they've shaped how analytics exist today.\n\nHowever, with this new technology, we can optimize for different things like human readability or for how fast we're going to be able to deliver a final table to our stakeholders.\n\nSo for our course, we're actually going to approach things from a denormalized standpoint.\n\nYou may have heard these as agile analytics or perhaps referred to as ad hoc analytics,\n\nwhere the goal is to build items quickly for the people that need them so that they can have access to the needed data in order to make decisions.\n\nAll this to say that although we're going to approach this course with a denormalized viewpoint, when you go to build your own DBT project for your organization, you can still use star schema or or you can still use Data\n\nVault. That's your view of how you want to build your database, and that's totally fine. And DBT is a tool that can do that. DBT does not lock you into this denormalized view of how data should be structured. It's just that that's the approach that we're gonna utilize for our course.","hasPart":[{"@type":"Clip","endOffset":28,"name":"Introduction to Data Organization","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=6&wtime=0s"},{"@type":"Clip","endOffset":60,"name":"Evolution of Technology and Data Organization","startOffset":28,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=6&wtime=28s"},{"@type":"Clip","endOffset":83,"name":"Approach to Data Organization in the Course","startOffset":60,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=6&wtime=60s"},{"@type":"Clip","endOffset":101,"name":"Flexibility of Data Organization with dbt","startOffset":83,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=6&wtime=83s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1113">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/jjokoozfip","@type":"VideoObject","duration":"PT4M10S","name":"C4-L7-naming conventions explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/f3657730275e2a0c80b5f4f1c9041563.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/jjokoozfip","uploadDate":"2023-11-20T17:11:11.000Z","description":"a dbtsandbox video","contentUrl":"https://embed-ssl.wistia.com/deliveries/9b1685bbe7b43eef2be8130f842b69ae3a8c07eb.m3u8","transcript":"I'm gonna take a moment just to go over the naming conventions for some of the models that you'll see throughout this course.\n\nSo the first of those is sources. Sources aren't actually models. They're ways of referencing the raw tables that exist in your data warehouse.\n\nThe data there should be loaded in with some off the shelf tool like a Fivetran or Stitch or through some manual orchestration by your data team.\n\nThen there's staging models.\n\nStaging models should be built one to one with the underlying source tables.\n\nThese are very light touch computations that just maybe rename a column or maybe do a quick conversion of a particular number so that the data is what what you want it to be. Maybe it's from like inches to feet or something like that.\n\nThen there's intermediate models.\n\nIntermediate models exist somewhere between staging and then the rest of your final tables.\n\nSo you may want to hide your intermediate tables from final users and only let your data team see those. That may be something up to you. But these should always reference your staging models. It should never reference directly to your source tables because you wanna use the data that you've already transformed and shaped into the way that you want it to be.\n\nThen coming off of intermediate models, if you have them, that's where we start building things like a fact model. So a fact model is gonna be a pretty skinny table, very long table that represents things that are occurring or have already occurred. So that might be orders, events, clicks, things that are gonna keep happening over time.\n\nThen there's also dimension models, which are going to represent things that exist or things that are, like a person, place, or thing. So these are typically gonna be like customers, users, things that aren't gonna change that much but may change a little bit, like an email might change. That would be a good example of a dimension model.\n\nSo now if we look at a quick image of all this together, this is the DAG for the project that we're building towards. On the left side, you will see in green, those are our sources and we're gonna configure those in a later module, but those are our sources.\n\nBuilding off of those, we see our staging models and those are going to shape the data just a little bit to make it look as we want it to look.\n\nBuilding off that those staging models, we see that we have a fact orders model where we are bringing together some data to represent our orders, and then we can maybe query that with the BI tool. And then finally, we're actually reusing orders to build into a final dim customers model, and that's also bringing data from our stage customers model. So by building modularly like this, we can reuse things as we need and then just to really clarify fact versus dimension.\n\nHere we have a fact table called orders and that's something that's happening over time. So every time a single customer does another order or maybe a subscription kicks off, another purchase, we're going to have another row in that table for orders. That's a fact table. Then for dim customers, that's a dimension table, because customers, once they're once they're once they exist, their entity isn't really gonna change. But they may have a changing email address or changing phone number or maybe somebody changes their last name for some reason.\n\nBut in summary, those are the five naming conventions that you'll see throughout this course. Again, they are sources, staging, intermediate, fact, and dimension.","hasPart":[{"@type":"Clip","endOffset":48,"name":"Naming Conventions for Models","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=0s"},{"@type":"Clip","endOffset":76,"name":"Intermediate Models","startOffset":48,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=48s"},{"@type":"Clip","endOffset":95,"name":"Fact Models","startOffset":76,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=76s"},{"@type":"Clip","endOffset":115,"name":"Dimension Models","startOffset":95,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=95s"},{"@type":"Clip","endOffset":168,"name":"Overview of Project DAG","startOffset":115,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=115s"},{"@type":"Clip","endOffset":250,"name":"Fact Table vs. Dimension Table","startOffset":168,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=7&wtime=168s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1189">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/t7go1a1mjh","@type":"VideoObject","duration":"PT9M53S","name":"C4-L8-reorganize your project demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/89a99b69b4de98081696394cff74fffd.jpg?image_crop_resized=640x357","embedUrl":"https://fast.wistia.net/embed/iframe/t7go1a1mjh","uploadDate":"2023-11-20T17:11:43.000Z","description":"a dbtsandbox video","contentUrl":"https://embed-ssl.wistia.com/deliveries/09c13df92cd667f7f2a151c645e3d000e21fcad5.m3u8","transcript":"So let's go ahead and start organizing our project in a way that makes sense for our business.\n\nNow one of the first things that we really should do is remove our example directory.\n\nIt's only here so that all of us would understand how models can be structured within dbt. But for right now, let's go ahead and remove it. And we'll come over to the ellipses right next to the model directory itself example, and I'll come down and I'm going to delete that specific folder.\n\nAnd now to get even more organized, cause imagine as this model is starts to grow, our models folder could get very full. So let's add a couple of additional subfolders to keep things even further divided so that we can find things when we need them. I'm gonna set up a Marts folder.\n\nWe can put our end of the pipeline consumables, and I wanna set up a staging folder.\n\nAnd likely you can already see where I'm going, but, you know, I don't wanna move things just quite yet. I'm going to further subdivide Marts into a business unit, in this case, marketing, and I'm going to be placing my customer information in there.\n\nSo I've got now a deeper folder under Marts named marketing, and, you know, I'm gonna continue on that theme for staging.\n\nLet's call out that these particular staging models are all about Jaffle Shop. So I'm gonna go ahead and add a Jaffle Shop folder as well.\n\nAt this point, our organization becomes pretty straightforward. We can begin to drag and drop things. I'm gonna put dim customers here inside of our marketing folder. You'll see it appear right there. And likewise, both of these staging models, I'm gonna place inside of the Jaffle Shop staging folder that we have. If I open this up, you'll be able to see how we've got things nice and organized so that we can find these model definitions in the future.\n\nNow you know this structure is going to do more for us than just help organize the mind of the developer.\n\nWe've actually put into place through these subfolders kind of the opportunity to really target some of our project, configurations.\n\nRemember that whole, top of dim customers where right up here we said we want this specific model to be materialized as a table. Now that's wonderful and it works, and it was a great place to start. But could you imagine if we had a command that we could say everything inside of our marts folder would be materialized as a table. There could be many, many models all nested under Marts that we all want to be tables. Wouldn't it be nice if we could have more of a project level configuration that we could set up for table instead of needing in each and every model to materialize and call out that this every single model should be a table. Well, there is a way to do that. Let's talk about that right now.\n\nLet's come over here to our navigation and come to the bottom. It's on the bottom of my screen, but there's a dbt project YAML file. I'm gonna select that. It'll load up in my IDE so we can get into this. We're gonna focus on just a couple of key areas here. First, let me call out line five. Notice on line five, our project inside of this YAML file is named the string my new project.\n\nActually, I'm gonna change that here in just a minute, but take note of it for right now.\n\nLet's scroll down though a little bit, and we're gonna come down to a section here where using the name My New Project that we had up above on line five, we have the opportunity to call out materializations based on folders.\n\nRemember that example folder that we had? We deleted it. It's no longer really a part of our project, but that's what this particular file was already stood up to do. This was calling out that anything in the example folder, unless otherwise specified, would be materialized as a view. Now view happens to be our default materialization, so it's somewhat redundant to place it here, but it is extremely clear. Well, let's change this for us a little bit. Can you imagine if we did something like this?\n\nThat everything that happens to be in our marts folder should be materialized instead as a table.\n\nThat would be a great way for us to set up where as there are tens or even hundreds of models under March, that they would all be materialized as a table per this configuration.\n\nNow I have to admit, I'm not entirely sure I like the name my new project that we're utilizing down here, And I want to update this, but to be able to do it, we first need to come back up here to where this name configuration is called out, and let's change this to our particular project, Jaffle Shop.\n\nTake a quick note here, though, that the only allowed characters for these names are lowercase letters and underscores. So be sure when you type this, that it's chapel underscore shop. Now that we've clear set up that configuration for the name, we'll need to leverage it right down here.\n\nSo when we're constructing models out of our Jaffle shop and we're looking in specific folders, Marts will now be materialized as a table. You know, let's actually go for a little bit more clarity, and we'll line up again with our Marts folder, and let's put here staging.\n\nAlright.\n\nAnd let's set this up that everything under staging materializes as a view. Again, we're just being clear, even though view is the default materialization.\n\nNow let's go over here to dim customers.\n\nWe should no longer need this particular configuration. So I'm removing that and I'm saving that, but I really should check. Let's make sure that I'm getting the intended behavior. So let's come down here and I'll do a dbt run. And we've done a lot of work. Remember, we've removed the examples folder, so none of those models should show when I press enter right now. But we do still have our three models, stage all about customers, stage all about orders, and then dim customers.\n\nLet's see if that appears.\n\nWe should see our staging models built first and they are.\n\nAnd then finally, dim customers is constructed. But let's take a look and make sure these both right here should be views, but dim customers should still be constructed as a table. Let's verify that all of this is happening as expected.\n\nCome to the details on customers.\n\nWe see create or replace a view. Wonderful.\n\nLet's come to our stage orders. We'll look under our details, create or replace view. That's exactly what we were expecting. Let's come to dim customers and see what we find. Again, we'll come to details.\n\nCreate or replace a transient table. That's exactly what we configured in our d b t project yaml file.\n\nSo again, a quick recap. We utilized our dbt project yaml file, and we came down into the models configuration section of it. And for our project, Jaffle Shop, we were able to set project level configurations for our materialization strategy. And we use our folders that we imposed here for organization to be able to make it a very straightforward process. So we're in a very, very good place. We've actually accomplished quite a lot here through our folder structure, and we've made it very apparent what we want to happen. And the people that are working in the project can also find the models that they are needing to work with.\n\nFrankly, I guess you could say we have a self describing project, which is always beneficial.\n\nNow, let's go ahead and before we end this lesson, take a look up here at all of the changes that we've been doing. You can kinda see this up here in our version control section.\n\nEach of the items that we've been working on have been really kind of listing here one by one. We've added a Dim customers file. We've added these staging files. We've modified the m here. We've modified our project yaml file, and we've deleted these particular files completely out of our project.\n\nAll is well. All is working well. But you know what? I think it is time to commit our work. So let's go ahead and commit, and we'll add a message here, and we'll have a great place to to really walk off to our next lesson.\n\nWe'll commit those changes.\n\nThat'll ensure that all of this work is indeed a part of my branch in my git repository, and I'm ready to continue my work.","hasPart":[{"@type":"Clip","endOffset":201,"name":"Organizing the Project","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=8&wtime=0s"},{"@type":"Clip","endOffset":519,"name":"Project YAML Configuration","startOffset":201,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=8&wtime=201s"},{"@type":"Clip","endOffset":538,"name":"Project Self-Description","startOffset":519,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=8&wtime=519s"},{"@type":"Clip","endOffset":592,"name":"Version Control and Commit","startOffset":538,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/models-45min/building-your-first-model?page=8&wtime=538s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1264">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/bcfog9unby","@type":"VideoObject","duration":"PT2M39S","name":"C5-L2-what are sources explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/a41ec9c4b4fcc7190a9f640102b4334d50d819ae.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/bcfog9unby","uploadDate":"2023-11-20T17:30:06.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/531c48b642acad027ee792e67ef94b4326a8e254.m3u8","transcript":"In your analytics engineering workflow. You're always going to start with raw data in tables that is somehow brought into your warehouse or data platform through whatever means necessary. And so let's called those raw tables, let's just call those sources for now and consider this. In our models.\n\nSo far, we've been referring to those sources using a direct string, like raw.stripe.Payments. And so that works. That's how we reference database objects. However, consider what happens if we reconfigure our EL tools to instead put that in a different schema or change the name slightly to follow our style guide.\n\nThen wherever you have referenced those raw tables in your models, you now have to swap that out manually, and that can be super tedious and eat up a lot of time where you could otherwise be doing something more valuable for your team. So this is where sources in dbt come into play. Sources in dbt allow you to document those raw tables that have been brought in by your EL tool and put those in a YAML file where you referenced the database there in the schema, and then the string of their name. You can even add aliases to point to each particular table in that YAML file.\n\nThen in your models, instead of writing something like raw.stripe.payment, we use what's called the source function. This works a lot like the ref function that you learned about with models. So we might pass something like {{ source('stripe','payments') }}, and then that is creating a direct reference to that YAML file that we created earlier.\n\nAnd when we run dbt compile, or we compile our code, dbt is going to look at that YAML file and then replace that source function with the direct table reference. So if someone I'm working on the EL part of your pipeline changes something slightly, you can go into the YAML file, tweak it real quick, and then everything is back up. The other benefit of sources is that they will now show up in your lineage before configuring sources. Oh, you have our blue nodes in your DAG.\n\nAnd so with sources, you now have green nodes along the left side, that show you the full orchestration of data transformation from raw data, all the way up through those final fact/dim models. So all in all sources give you really two great superpowers. One of them is, uh, being able to configure your sources in one place and then make tiny changes there that persist into the rest of your project. And then also being able to see at a high level, the raw data that is powering all the modeling that you're doing with dbt.","hasPart":[{"@type":"Clip","endOffset":17,"name":"Introduction to Analytics Engineering Workflows","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=0s"},{"@type":"Clip","endOffset":40,"name":"Referencing Raw Data Sources","startOffset":17,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=17s"},{"@type":"Clip","endOffset":76,"name":"Challenges of Manual Reference Updates","startOffset":40,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=40s"},{"@type":"Clip","endOffset":97,"name":"Utilizing dbt Sources for Data Management","startOffset":76,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=76s"},{"@type":"Clip","endOffset":125,"name":"Compiling dbt and Source Functionality","startOffset":97,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=97s"},{"@type":"Clip","endOffset":158,"name":"Visualizing Data Lineage with Sources","startOffset":125,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=2&wtime=125s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1316">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/9l86c0h4ia","@type":"VideoObject","duration":"PT5M46S","name":"C5-L3-configure select from sources demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/45617edb631fa4aa4a8c8cf48d512675.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/9l86c0h4ia","uploadDate":"2023-11-20T17:30:12.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/f647f04a4ececcc951fae5e7dbcce0e074be606d.m3u8","transcript":"We've just learned about sources, and we are going to add them to a project to take advantage of the benefits and features it provides. As a recap, we've created three models, two staging models, the staging JAFFL shop customers model that's doing some light transformations, the staging JAFEL shop orders model that's also doing light transformations, and the dead customized model that's doing a few things.\n\nWhen we look at the lineage, we can see the three models, but we are not seeing the original sources that the staging these two staging models are referring to.\n\nWe can see this data is coming from rod dot jarfoshop dot orders.\n\nAnd when we go into Snowflake, we know there is a table or a view that it is pulling from. So if you look here, raw, shuffle shop, customers table, orders view. We would love this to be represented in the lineage.\n\nThis is where sources come in. So how do we add sources so we can see this in our lineage?\n\nIf you're not sure, always go to the documentation.\n\nOver here, this is how we add sources.\n\nIt tells us that we can create a YAML file under our models folder.\n\nSo let's do exactly that.\n\nIn DDT, we use a convention where we use underscore the name of the source that you are creating to underscore sources yml.\n\nGreat.\n\nAnd if you're never sure, you can come see our style guide over here.\n\nNow that this has been created, the YAML is going to be of this format.\n\nI'm just gonna go ahead this version.\n\nAlways two.\n\nThen you declare sources, and it's helping you over here the name. So the name is what you want the source to be called. So we'll call it JAFEL shop.\n\nThen you have to clear database, and the database that we're getting the table from is raw as we saw in Snowflake.\n\nThere's an optional option to have a schema. If you do not explicitly name the schema, DBT will use the name. So let's just be explicit about it.\n\nAnd then the next thing is to get the name of the tables. So we realize there are two tables that we're using. One is customers, and the other one is orders.\n\nThat was quite a bit of typing.\n\nThat worked, hopefully.\n\nSo let's save that.\n\nAnd that was successful because you could already see the lineage showing up over here.\n\nNow can we see the lineage here? Still can't see the lineage. This is because we have not added the sources anchor. So I'm gonna go into my stage models over here and replace this hard coded table reference with our source function.\n\nSo, again, go to our documentation, and it shows you how to do that.\n\nGives you an example of how you do that from replace this with the source macro.\n\nSo double curly brace, source.\n\nOpen that. The name of the source was Jafo shop, and the table that we want, we are in the customer staging model. So we say customers, then we save that.\n\nAnd now you can see that we can see our Jafo shop customer source. Great.\n\nDo the same thing in orders. If you are in dbt cloud, you can use the magic function shortcut underscore underscore source. Type it in. It fills in some templates for you, and you can type the name of the source and then the object name, which for this one is orders.\n\nYou save that.\n\nSee that our lineage is showing.\n\nJust out of curiosity, if we compile the code, we can still see that DBT is generating the raw SQL that we need.\n\nAnd so this is amazing because you are still getting the advantage of being able to specifically call your, tables or object names, but you've made it much more modular so that in the case that you need to change your database name in the future, you just have to make the change over here, and it will be reflected updated across your project.\n\nSo that's it. Sources, try it out, and let's keep on maturing and building our projects.","hasPart":[{"@type":"Clip","endOffset":36,"name":"Introduction to Sources","startOffset":1,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=1s"},{"@type":"Clip","endOffset":77,"name":"Understanding Lineage","startOffset":36,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=36s"},{"@type":"Clip","endOffset":119,"name":"Adding Sources for Lineage","startOffset":77,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=77s"},{"@type":"Clip","endOffset":135,"name":"Creating a YAML File for Sources","startOffset":119,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=119s"},{"@type":"Clip","endOffset":208,"name":"Format of the YAML File","startOffset":135,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=135s"},{"@type":"Clip","endOffset":218,"name":"Success in Adding Sources","startOffset":208,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=208s"},{"@type":"Clip","endOffset":267,"name":"Updating Stage Models","startOffset":218,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=218s"},{"@type":"Clip","endOffset":313,"name":"Verifying Lineage in Models","startOffset":267,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=267s"},{"@type":"Clip","endOffset":345,"name":"Benefits of Using Sources","startOffset":313,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=3&wtime=313s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1391">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/0b5wb17fmb","@type":"VideoObject","duration":"PT8M25S","name":"C5-L4-source freshness demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/8ae9dd7e1f0ba91a3e231c63ca114290.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/0b5wb17fmb","uploadDate":"2023-11-20T17:30:18.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/f822908d0fc0038fc58eaac6cf362bc608c762b6.m3u8","transcript":"We have declared our sources, and we're able to use the sources function to help define our lineage in our DAG.\n\nLet's see what else we can do now that we have our sources declared.\n\nIn our docs, we also see that we can calculate the freshness of our source data. Let's read a little bit more about that.\n\nTo do this, we need to add a freshness block and a loaded at field in our table.\n\nAnd this is what the syntax looks like.\n\nI would like to understand what these things mean, under freshness, what is count, what is period looks like, some time. Are those the only options? And then what is, the requirements of the lead polluted at field? This is where our docs are useful.\n\nI go to my docs.\n\nLet me search for freshness.\n\nThere we go.\n\nAnd, again, we have the templates of the schema.\n\nLet's see if we can find okay. Loaded at, a column name or expression that returns a time stamp indicating freshness.\n\nK. So it seems we need to have a column in our data that is a time stamp.\n\nAnd then count, okay, positive number, integer for the number of periods where a data source is considered fresh. And then period, it can be minute, hour, or day. So I understand what the expectations are.\n\nLet's see which field in our data we can apply this to.\n\nSo in Snowflake, when we go to raw, let's check out our objects, JAFL shop.\n\nSo customers.\n\nWhen we look at our columns, we do not have any column that is a time stamp type. Okay.\n\nWhat about orders?\n\nOkay. We do. So we can apply this to our orders object.\n\nLet's go back and let's copy this.\n\nAlright.\n\nGo back here under orders.\n\nPut it in. I remember we needed to add a loaded at field.\n\nSo let's grab that.\n\nWonder why they're doing this also at the top.\n\nLet's try this first.\n\nOkay. Let's save.\n\nAnd now to apply this, let's see.\n\nWe can use the dbt source freshness command. Alright.\n\nSo dbt source freshness.\n\nIt failed on orders.\n\nLet's see why it did that.\n\nSo telling us that it's an error. Let's read our error declaration again.\n\nIt's saying one as after a six hour period and error after a twelve hour period. Let's go into our column data, orders.\n\nIt is currently seven thirty where I am, and this was last on the eighth. And this was last, refreshed or loaded at six thirty the previous day.\n\nSo today is the ninth. This was loaded on the eighth. So according to what we've defined, this will definitely throw an error. Let us increase this, the counts to maybe twenty four hours. Save.\n\nRun this again, the v t source freshness.\n\nOkay. It's been successful, and it's throwing a warning.\n\nAnd it's basically telling us that it's been over six hours, and this is what we expected.\n\nYou have the option to use other period fields. So I can make this one day.\n\nOr and I can make this a little bit higher.\n\nI can say twenty four hours.\n\nLet's see. This should not throw any error or give us any warning. So I don't wanna see any error. Everything should be green, and we see that is what happens.\n\nGreat.\n\nBut what was it that they were doing over here? What if I want to apply, this freshness to multiple objects or tables? Do I have to do it individually?\n\nIt doesn't seem so. You can apply that at the schema level.\n\nSo let's copy that.\n\nLet's copy this information that we have from here.\n\nAnd then under schema.\n\nApply this.\n\nOkay.\n\nLet's save.\n\nWe're getting something failing in customers.\n\nSo let's look at that.\n\nAnd it's saying invalid identifier, e t l loaded at.\n\nThis makes sense. It is telling us that there is no time stamp field called ETL loaded at that it can use on the customers table. And remember, we saw this when we looked at our data, our columns in Snowflake.\n\nSo what do we do then? Does it mean that we can't apply this at a schema level?\n\nYou still can. You just have to make a change to the specific table that you cannot apply this to.\n\nAnd if you check out your docs, you see that you can declare freshness under the specific table as null.\n\nSo let's see that.\n\nSave.\n\nAnd we run this again, and we see that the configuration has only been applied to the orders, object and skipped the customers. So everything is successful.\n\nThere's so much more that you can read about in the docs.\n\nCheck out these related reference documents at the top. But, yes, that is source freshness.","hasPart":[{"@type":"Clip","endOffset":20,"name":"Introduction to Source Definition","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=0s"},{"@type":"Clip","endOffset":45,"name":"Exploring Freshness Calculation","startOffset":20,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=20s"},{"@type":"Clip","endOffset":85,"name":"Understanding Freshness Syntax","startOffset":45,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=45s"},{"@type":"Clip","endOffset":150,"name":"Data Exploration in Snowflake","startOffset":85,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=85s"},{"@type":"Clip","endOffset":200,"name":"Applying Freshness to Data","startOffset":150,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=150s"},{"@type":"Clip","endOffset":350,"name":"Troubleshooting Freshness Application","startOffset":200,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=200s"},{"@type":"Clip","endOffset":491,"name":"Applying Freshness at Schema Level","startOffset":350,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=350s"},{"@type":"Clip","endOffset":504,"name":"Exploring Additional Documentation","startOffset":491,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/sources-30min/understanding-sources?page=4&wtime=491s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1466">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/cz4pd1tey7","@type":"VideoObject","duration":"PT2M13S","name":"C6-L2-why testing","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/fee2e9ae57b2eab0b7487f3774523394.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/cz4pd1tey7","uploadDate":"2023-11-20T17:50:53.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/553b1f717e99d68fcb6ea100e740baee503284a7.m3u8","transcript":"Alright.\n\nIt's eight AM. I've got my coffee, got my water. I'm very excited to start the week working in data. Got my cool insulated mug. I am ready to go.\n\nOh. And the head of sales just sent me a message about a dashboard being broken.\n\nLooks like there's some missing data. I'm gonna dig in here.\n\nOkay.\n\nOh. Oh, dang. It looks like there's a missing payment method. I gotta fix this. Okay.\n\nLet's get into it. Alright. I'm gonna look in here and in there.\n\nCool. I'm\n\ngonna fix it up.\n\nOkay. Alright. My dashboard is all fixed and working, and the head of sales is good to go. Everything's set.\n\nBut now it's noon. Where did my morning go?\n\nLet's rewind a little bit. When I first built this dashboard, I made sure that all the transformations were working. I used my own select star queries to make sure that the data matched my own assertions.\n\nThis has worked for four weeks. There were no issues.\n\nAnd then suddenly this morning, it broke.\n\nThis is really frustrating. I\n\njust lost four hours of time. I was so excited to start working on some other projects.\n\nSo this is where dbt is really helpful.\n\ndbt allows you to quickly and easily scale data tests across your project and your analytics workflow so that you have coverage and then you can find when things break before anyone else does.\n\nIn development, you can use these data tests to make sure that as you're coding and writing SQL, it produces\n\nexactly what you want. And in production, you can set it up to alert you when a data test fails so that you can be the first person to figure out when something didn't go quite as planned, then you can fix it. Whatever dashboard might be broken, it can be fixed before anyone else would even notice.\n\nData tests let you level up your analytics engineering workflow, particularly by giving you coverage so that you can trust your code and then everyone else can trust your data. Let's get into it.","hasPart":[{"@type":"Clip","endOffset":38,"name":"Starting the Day","startOffset":1,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=2&wtime=1s"},{"@type":"Clip","endOffset":75,"name":"Dashboard Breakdown","startOffset":38,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=2&wtime=38s"},{"@type":"Clip","endOffset":102,"name":"Introducing dbt","startOffset":75,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=2&wtime=75s"},{"@type":"Clip","endOffset":132,"name":"Data Quality and Testing","startOffset":102,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=2&wtime=102s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1542">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/o6v887vi7l","@type":"VideoObject","duration":"PT4M18S","name":"C6-L3-what is testing explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/5409cea99bbcd8b23528feac2abe7191.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/o6v887vi7l","uploadDate":"2023-11-20T17:52:44.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/dd566e9ab25167209957658ee0d1c6471171b2d7.m3u8","transcript":"Data tests in analytics engineering are assertions that you have about your data. It's critical that these assertions are true so that whatever decisions are being made on those final models can be trusted.\n\nThis gives people the confidence that the data that they're looking at is in fact reliable.\n\nYou're probably already doing this in your data career.\n\nIt might look like exporting a CSV, opening a file in Excel, and then creating maybe a check column to make sure that the values across multiple columns meet your assertions.\n\nIt could be that after your table has materialized, you're running a a select distinct query against that to make sure that you've captured all of the payment methods in a particular column.\n\nIt could also be just scrolling through the table to make sure that it meets your assertions and maybe trying to catch a little bug here or there.\n\nThis data testing mindset is crucial to making sure that you can trust your data and stand behind its quality.\n\nHowever, it's particularly difficult to scale that across your project.\n\nYou can't always download a CSV and then run a check against it manually. It's just not gonna work when you have hundreds of thousands of models.\n\nThat's where data testing in dbt comes in.\n\ndbt's data tests are run with the command dbt test and that will run all of the data tests in your project against the latest materialization of your models.\n\nYou can construct these data tests in development.\n\nSo maybe you write a model and then you write a data test against that model. You can make sure that the transformation code does what you expect and that the underlying data fits your assertions at the time of development.\n\nThis gives you as the dbt developer confidence to merge that into your main or master branch and then run that in production.\n\nAnd once you're running that code in production, the data test configuration or the writing of your data tests is in that same code base.\n\nYou can continue to run those assertions as often as the models are being refreshed.\n\nThis gives you the confidence that those models feeding important dashboards can be trusted for your team.\n\nSo let's dive into some of the specifics.\n\nThere are two main classifications of data tests in dbt.\n\nThese are singular and generic.\n\nSingular data tests as the name implies are very specific and are applied to probably one maybe two models.\n\nThey assert something really specific about the logic in that particular model.\n\nThis is not something that you'd want to use across multiple models. We'll touch on that a little bit later.\n\nSo singular data tests are something one off that you want to write really specifically for maybe a really important revenue dashboard.\n\nThe other classification of data tests are generic data tests.\n\nThese are the highly scalable types of data tests.\n\nRather than writing the logic out, you're just actually writing a couple lines of YAML code and that applies a data test to a particular model or column.\n\nThere are four types of generic data tests that come with dbt.\n\nThese are unique, not null, accepted values, and relationships.\n\nThese four are really easy to apply in your project right away.\n\nWe recommend using unique and not null on your primary keys to make sure that you don't produce any breaking joints downstream or any fan outs as you try to build things downstream.\n\nSo we have singular and generic as those two classifications of data tests. And in that generic data test column, you have these four with dbt, but there are packages that you can explore that have a ton of testing that a lot of different organizations use. And you can even write your own custom generic data tests. We're gonna need a little bit more learning around Jinja and macros to be able to touch on that, so we can't touch on that quite yet. But once you get your dbt fundamentals badge, check out our Jinja and Macros course at courses dot get dbt dot com.\n\nSo we'll step back for a moment.\n\nData testing in dbt allows you to take that same data testing mindset that you already have and scale it in development.\n\nThen you can also scale that in deployment so that you can trust your data on a daily and a weekly basis. You can focus on getting good sleep and then also building something net new rather than fixing something that you've just found out broke through a Slack message.","hasPart":[{"@type":"Clip","endOffset":69,"name":"Introduction to Data Testing and Analytics Engineering","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=3&wtime=0s"},{"@type":"Clip","endOffset":124,"name":"Data Testing in dbt","startOffset":69,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=3&wtime=69s"},{"@type":"Clip","endOffset":176,"name":"Classification of Data Tests in dbt","startOffset":124,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=3&wtime=124s"},{"@type":"Clip","endOffset":232,"name":"Types of Generic Data Tests","startOffset":176,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=3&wtime=176s"},{"@type":"Clip","endOffset":257,"name":"Scaling Data Testing in Development and Deployment","startOffset":232,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=3&wtime=232s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1617">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/0fxhj3lpkj","@type":"VideoObject","duration":"PT7M15S","name":"C6-L4-generic tests demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/ca93f585828f7c6d96e15bb1d1a81bd94532f9f9.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/0fxhj3lpkj","uploadDate":"2023-11-20T17:52:51.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/0c619613f5b5e08c3a960aac27260b281cd9f50e.m3u8","transcript":"As we just heard, data testing is a critically important part of a healthy and mature dbt project.\n\nWithout data testing, there's no way for analytics engineers to know that the datasets they deliver to their stakeholders are both correct and high quality.\n\nThe most basic type of data tests in dbt are called generic tests.\n\nThese data tests are simple, parameterized queries that can be applied broadly throughout your project to make assertions about your data products.\n\ndbt ships with four of these generic data tests, and these are an excellent place to start to familiarize yourself with how data testing in dbt works.\n\nThe four data tests that are built into dbt are unique, not_null, accepted_values, and relationships.\n\nUnique asserts that every value in a column is, in fact, unique.\n\nNot_null asserts that every value in a column is not_null.\n\nAccepted_values asserts that every value in a column exists in a predefined list.\n\nRelationships asserts that every value in a column exists in the column of another table to maintain referential integrity.\n\nLet's take a look back at one of our models in our project, stg_jaffle_shop__customers\n\nAnd let's preview this.\n\nIn the preview, you can see that there is an ID column referring to the customer ID.\n\nWe would expect this column to be both unique and not_null because it represents an individual customer in our Jaffle Shop data.\n\nLet's formalize these assertions by adding a data test to this column.\n\nIn order to do so, we're gonna create a new YAML file for this Jaffle Shop folder.\n\nSo let's create a new file named stage Jaffle Shop dot yaml.\n\nInside of here, I'm going to configure a models block to configure and describe the models in my project.\n\nAnd in particular, I am going to start with a stage customers model.\n\nUnderneath the model, I can add a columns block.\n\nAnd under the columns block, I will define our ID column, which is the customer ID that we saw in the previous screen beneath that we can configure our data tests And here, I'm going to pass in the name of the two data tests that I would like to use, unique and not_null.\n\nI'll save this.\n\nNow, how do I tell if I configured my data test correctly?\n\nI'm going to do that by going to my command line and typing in dbt test dash dash select stage JAFFL shop customers, and I'll hit enter.\n\nIn the run details, we'll be able to see that each of these data tests are configured as individual nodes, they'll run, and we can see that we have a successful run for each.\n\nLet's go into this not_null test and click on the details button.\n\nIf we scroll down, we can actually see our compiled SQL query here.\n\nWhen we execute the dbt test command, dbt will translate these assertions into simple select SQL statements that can run against the warehouse.\n\nIn dbt, data tests are configured to return the set of errors.\n\nFor this example, to test whether the column is not_null, the data test will run this query that returns rows from this model where the id is null.\n\nIf the query returns any rows to violate the assertion that our data test makes, then dbt is going to know to trigger the error message.\n\nLet's keep going here. Let's take a look at stage Jaffle Shop orders as well.\n\nIn stage Jaffle Shop orders, we have our order ID which is our primary key. We're gonna wanna make the same assertions that we made on the customer ID field to make sure that this column is both unique and not_null.\n\nWe can also see a status column here.\n\nOur stakeholders have told us to warn them that if we ever see a status that is not returned, completed, or any other status in this column including return pending. If we go back over to our stage. Jaffle shop. Yml file we can configure a new model block by adding to this list of models.\n\nWe'll add a new name and then the name of the second staging model here. Stage Jaffle Shop orders.\n\nThen we'll add a new columns block, also named ID, and then we can add the data tests unique and not_null.\n\nWe're also going to configure an accepted_values test on the status column.\n\nThis data test accepts the values argument.\n\nOur list of values were shipped, completed, and returned pending.\n\nLet's save this, and now let's run our data tests for this model.\n\nThis time we will write dbt test dash dash select stg_jaffle_shop__orders.\n\nThis time, we'll see that we have all three of these tests here that are running, and it looks like we have an error on our accepted_values data test.\n\nLet's figure out why this data test is failing.\n\nWe're going to take a look in the details, and here I can see my compiled query.\n\nLet's grab all of this, copy it, and paste it into a new statement tab. Then we'll hit preview to run this query.\n\nThis will show us the values that we have missed within our list.\n\nIt looks like we have two other values, returned and placed.\n\nIf we add these to our accepted_values data test, it should pass this time.\n\nThen I'll save it.\n\nThen I'll rerun my last command, and we should expect to see three passing data tests here.\n\nGreat.\n\nNow we have three passing data tests on our orders table.\n\nPerfect.","hasPart":[{"@type":"Clip","endOffset":79,"name":"Introduction to Data Testing in dbt","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=0s"},{"@type":"Clip","endOffset":244,"name":"Configuring Data Tests for Jaffle Shop Customers","startOffset":79,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=79s"},{"@type":"Clip","endOffset":270,"name":"Understanding Data Test Configuration in dbt","startOffset":244,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=244s"},{"@type":"Clip","endOffset":382,"name":"Configuring Data Tests for Jaffle Shop Orders","startOffset":270,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=270s"},{"@type":"Clip","endOffset":427,"name":"Troubleshooting Data Test Failures","startOffset":382,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=382s"},{"@type":"Clip","endOffset":434,"name":"Conclusion","startOffset":427,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=4&wtime=427s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1692">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/inff7df9k2","@type":"VideoObject","duration":"PT4M6S","name":"C6-L5-singular tests demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/e49f1d93d667ef2dfec617ff2e0fa72f.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/inff7df9k2","uploadDate":"2023-11-20T17:52:56.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/66b0556c755e2348bd503a29f982f771b9e46928.m3u8","transcript":"In our last video, we learned how to apply generic data tests to many models in our dbt project by declaring test blocks in our YAML files, like these. This is not the only way to apply data tests to our models. dbt also supports data\n\ntesting of specific models with custom SQL scripts known as singular data tests. These are most useful when there is a specific attribute of a particular model that we want to make an assertion about, but it doesn't neatly fit into the basic types of data tests that dbt\n\nships with.\n\nLet's take a look at our staged payments model here coming from our Stripe data. We can see that for each order, there can be multiple payments. For example, order_id 5 here has two payments, which are payment_id 5 and\n\n6. We want to be able to assert that the total order amount is positive for every order in our data.\n\nIn order to make this assertion, I'm going to start by creating a new SQL file in our tests directory. So let's go to the test directory here and create a new file. I'm going to call this file assert_stg_payments_amount_is_positive.sql. This data test will be a SQL statement, so it needs to be a do SQL file, and let's hit create.\n\nThe first thing we need to do is make a reference to the dbt model that we want to apply a\n\ndata test to. So I'm going to do that with a select star from my ref, which is stg_stripe_payments. So I'm going to do that in my CTE at the top of this SQL file. This will be with payments as, and then select star from ref,\n\nand then the name of my model, which is stg_stripe__payment .\n\nNext, we need to remember that dbt data tests are configured to fail when the query written detects records that violate the assertion we're making about our data. If we want to assert that for every order in our stg_stripe__payment model, we have a positive total payment amount. We need to write a query that detects rows where we actually get a negative value for our total payment amount. So let's write that query.\n\nLet's say, select order_id and then we want a sum of the amount field, and let's name that total_amount. This will be from our CTE, named\n\nPayments. And then, we need to group by order_id. Finally, let's do a having total_amount is less than zero.\n\nSo, we're detecting for orders where the total amount is negative, which violates our assertion that none of these should be negative. This is how dbt is going to know to apply this data test. Let's go ahead and run this data test on this model with our selection syntax as we have done previously. This will be dbt test --select and then our model name stg_stripe__payment.\n\nGreat. So there's our data test. We can look at the details here. In the details, we can see the query that we wrote.\n\nwhich is asserting that all orders have a positive total amount. And you can see that this is wrapped in the standard counting behavior to understand if there are any violations of that assertion, like we saw in the generic data testing section as well.","hasPart":[{"@type":"Clip","endOffset":17,"name":"Introduction to Testing in","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=0s"},{"@type":"Clip","endOffset":35,"name":"Singular Testing with Custom SQL Scripts","startOffset":17,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=17s"},{"@type":"Clip","endOffset":51,"name":"Understanding the Data Model","startOffset":35,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=35s"},{"@type":"Clip","endOffset":96,"name":"Creating a New SQL File for Assertion","startOffset":51,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=51s"},{"@type":"Clip","endOffset":118,"name":"Referencing the Model and Writing the Query","startOffset":96,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=96s"},{"@type":"Clip","endOffset":170,"name":"Writing the Query to Detect Negative Values","startOffset":118,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=118s"},{"@type":"Clip","endOffset":245,"name":"Running the Test","startOffset":170,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=5&wtime=170s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1767">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/h5q5908w1h","@type":"VideoObject","duration":"PT3M12S","name":"C6-L6-testing sources demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/5edf9f99e4d7b45e5709a034fcad0fde.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/h5q5908w1h","uploadDate":"2023-11-20T17:53:00.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/7b44ef994b088acbcf89a980be0d89cc253f6dc9.m3u8","transcript":"\n\nIn addition to testing the models in our project, we can also apply the dbt data testing framework directly to our source data.\n\nWhile applying data tests to our models helps us understand whether the assertions we make about our models are true, applying data tests directly to our sources can give us confidence that the raw data we're building on conforms to our expectations as well.\n\nData tests on sources are configured exactly the same way that data tests are applied to models.\n\nWe can do that either in the YAML configuration files where we declared the sources like here or in custom SQL files in our test directory in our project over here.\n\nFor now I'm going to apply a couple primary key data tests in our source YAML file where we declared our Jaffle Shop data sources.\n\nSo that's over here in src_jaffle_shop.yml\n\nOn both the customers and the orders tables, I'm going to add the primary key data tests for the ID column in each as they should both be unique and not_null.\n\nLet's go ahead and add the columns block here underneath the customers table key.\n\nThe name of that column that we want to test is ID.\n\nThen we want to add the data tests unique and not_null\n\nThat's because the ID column is the primary key for this customer's table in our jaffle shop source.\n\nLet's do the same thing for our orders table.\n\nLet's actually just copy this right underneath the orders block here.\n\nGreat. Now we have added both of our primary key data tests to our sources.\n\nTo see if these data tests were applied correctly, let's pull up the command bar here.\n\nTo try out these specific source data tests, I'm going to run the command dbt test dash dash select source to indicate that we're testing sources.\n\nThen I'll add a colon and then my source name, which in this case is jaffle_shop\n\nLet's hit enter here. And while that's running, just so you see the source name, it is on line four.\n\nOkay. So we see four data tests here, and they've all passed.\n\nLet's take one more look in the details here.\n\nThis data test is making sure that our customer ID is not_null.\n\nWe can click on the details and we can see that the SQL looks just as we would expect.\n\nThe SQL is finding every record where the ID is null and counting the number of records there. It didn't find any so our not_null data test has passed on our source. Awesome.","hasPart":[{"@type":"Clip","endOffset":31,"name":"Introduction to dbt Testing Framework","startOffset":1,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=6&wtime=1s"},{"@type":"Clip","endOffset":95,"name":"Applying Primary Key Tests to Source Data","startOffset":31,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=6&wtime=31s"},{"@type":"Clip","endOffset":192,"name":"Running Source Tests with dbt","startOffset":95,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=6&wtime=95s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1842">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/oxtflzhaw4","@type":"VideoObject","duration":"PT8M22S","name":"C6-L7-dbt build command explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/6f34276633636eb2cdbaae957ace7bc3.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/oxtflzhaw4","uploadDate":"2023-11-20T17:53:08.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/ac9c03c5c4f51314b3340d9e9878e2332e08938b.m3u8","transcript":"\n\nAt this point, we've created models in our dbt project.\n\nWe've defined our sources, and we've added data tests to both our models and to our sources.\n\nWe might have a project that looks something like this. Here's a sample tag where we can see in green our source notes, and\n\nin blue, we can see all the models that are built on top of our sources.\n\nWe can see in this case, we have two staging models, one called stage jaffle shop orders and one called stage Jaffle Shop customers.\n\nEach staging model is built on top of a single source, and they contain the same level of detail.\n\nThen we have some downstream models as well.\n\nWe've got a dim customers model, which is going to be joining these two staging models together. And then we might have an add customers model, which is going to be doing some aggregations on top of the dim customers model.\n\nSo far, when we've been developing, we've been running the command dbt run to create all of our models and then the command dbt test to apply data test to all of our models and to apply\n\ndata test to our sources.\n\nMaybe we added some selection syntax in there, but in general, we've been separating our commands of dbt run and dbt test.\n\nNow this has some pretty big implications for when we get into deployment later on, but I wanted to introduce a new way of running our commands by essentially combining dbt run and test together.\n\nThis new way is going to be our dbt build command, which is what this section is all about.\n\nBut for now, let's focus on dbt run and dbt test, and really understand what they're doing.\n\nLet's imagine as we're developing in the IDE, we first run the command dbt run to create all of our models in our warehouse.\n\nWhen that's done, we run the dbt test command to apply all of our data tests all based on our sample tag.\n\nSo here's what would happen.\n\nIt's going to run our first set of models, and in this case, that's our stage customers and stage orders models.\n\nOnce those are complete, DBT is going to run the next set of models, and it'll continue doing that in DAG order.\n\nSo it's going to run dim customers and then add customers, etcetera, until it runs all the models in your project.\n\nOnce all those models have been run, which implies they've been created in your warehouse, then we're finally adding our data tests.\n\nIf we have data tests on our sources, those would come first with the dbt test command because we're still going in DAG order.\n\nThen it's going to run data tests on our first set of models, and in this case, that's our staging models.\n\nThen it'll run data tests on dim customers, the next set, and it's going to continue in DAG order until it finishes.\n\nSo what happens if a data test fails on an early model?\n\nWell, if a data test fails on stage customers, we have a problem because we already ran all of our models first.\n\nThat downstream model, dim customers, and ad customers already got created\n\nand were already built on top of the staging model that had failing data.\n\nWe can see that this could be a pretty big problem, especially if that failing record is due to maybe an issue with a primary key. We can't switch up the order of our commands here.\n\nWe can't do a dbt test before a dbt run because the data test is going to apply data tests to the models as they exist in your warehouse, and we first have to run them in order to get them to exist in the warehouse. So we have a problem with this method.\n\nThe new ish method of combining these commands is the dbt build command.\n\nNow it adds a couple of extra complexities, but right now we're going to focus on what it does to run our models and to perform our data tests.\n\nWith the dbt build command, the difference is it's going to go in DAG order, but it's going to combine all of our commands, including dbt run and dbt test, and follow our models in DAG order.\n\nSo the first thing it will do is apply data tests to our sources.\n\nAssuming those data tests pass, then it's going to run our first set of models and then apply data tests to our first set of models.\n\nAssuming everything is successful again at this point, it's going to do the same at the next layer.\n\nSo it'll run this set of models, in this case, dim customers, and then it will apply data tests to dim customers, and then it's gonna run add customers, and then it'll apply data test to add customers,\n\nso on and so forth.\n\nSo now what happens if a data test fails on an early model?\n\nThis time, our downstream model is not going to run if our data test fails in an early stage customer's model because that happened before this downstream model ran. The data test failure would cause our job to halt. Now this is gonna be a pretty big deal when we get to deployment later on because we're going to be ensuring that we're not building our downstream marts on top of models that have failing data tests.\n\nSo let's take a demo of this command in DBT cloud.\n\nSo we can see dim customers here at the end of my lineage.\n\nIf I were to do the dbt build command, the first thing it's going to do is run any data test that I have on these sources here, and then it's going to continue going layer by layer, running our models, and then applying data tests to them.\n\nIt'll run these staging models and apply data tests on these staging models, and then it'll run fact orders and apply data tests on fact orders. And then it'll finally get to running and then running data tests on dim customers.\n\nSo we can do this\n\nwith the command dbt build and with our usual selection syntax.\n\nOr instead of writing all that out, I could just hit this drop down here that says build and select the build this model plus upstream and hit that.\n\nSo let's do that and see what it comes up with.\n\nSo we can see that it applies the usual selection syntax that we're used to. The plus sign indicating upstream ancestors and dim customers indicating the model that we wanna build after all of its upstream ancestors.\n\nAnd let's scan through the results here.\n\nSo it did run a data test, two data tests actually, on all of my\n\nsources almost immediately.\n\nAt the same time, it was able to run this view stage payments because stage payments does not depend on any sources that have data tests.\n\nAfter it ran data tests on my sources, it ran their corresponding staging models.\n\nIt also ran and applied the data tests that are on those staging models even in accepted values and in not null and in relationships, all kinds of data tests.\n\nAnd then finally, it built fact orders and dim customers in my warehouse, but it didn't apply any data tests because I did not assign any. So just to make it extra clear, I want to show you what happens if we had a failing test in the stage orders model. So I'm going to navigate to my stage JaffleShop dot yaml file and I'm going to add a failing test to the order staging model.\n\nA data test that I know is going to fail is adding a unique data test to this status column.\n\nI know that this data test is gonna fail. So we saved this, and now let's rerun our command.\n\nLet's go back to Dim customers, click the build button, and let's click build this model plus upstream and take a look at what it does. Now I know that this is going to make the data test fail this time. And because we're using the build command, once this data test fails on my staging model, DBT will skip any downstream models, and it will halt the rest of my job or in this case the rest of my command.\n\nWe can see here this failing data test, it returned five failing results and downstream of it were fact orders and dim customers.\n\nSo those did not get run because there was a data test that failed upstream of those two models.\n\nSo we can see why using the dbt build command can be a powerful way to ensure that we're both running and applying data tests to our models, but also making sure that we're not building downstream models on top of maybe some staging models or anything else upstream that has issues with failing data tests.","hasPart":[{"@type":"Clip","endOffset":17,"name":"Introduction to dbt Project","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=0s"},{"@type":"Clip","endOffset":60,"name":"Structure of the dbt Project","startOffset":17,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=17s"},{"@type":"Clip","endOffset":184,"name":"Implications of Running dbt Commands","startOffset":60,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=60s"},{"@type":"Clip","endOffset":269,"name":"Introduction of dbt Build Command","startOffset":184,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=184s"},{"@type":"Clip","endOffset":340,"name":"Demonstration of dbt Build Command in dbt Cloud","startOffset":269,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=269s"},{"@type":"Clip","endOffset":378,"name":"Results of Running dbt Build Command","startOffset":340,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=340s"},{"@type":"Clip","endOffset":501,"name":"Running dbt Build Command with Failing Test","startOffset":378,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/tests-30min/building-tests?page=7&wtime=378s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1917">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/fx7usdu659","@type":"VideoObject","duration":"PT1M48S","name":"C7-L2-why is documentation important explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/0c1577191e47af95b714caa4e126a52a.jpg?image_crop_resized=640x337","embedUrl":"https://fast.wistia.net/embed/iframe/fx7usdu659","uploadDate":"2023-11-20T18:33:58.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/75ebda52115c66f0204c3f5aeafc17a35c293f76.m3u8","transcript":"Hi. My name is Beth Hipple. I'm a manager of technical instruction at dbt Labs. Let's dive into documentation.\n\nThink back to the last time you onboarded to an organization.\n\nWere you able to onboard quickly and contribute to your team? Or was it really challenging to find the answers to the questions that you had? If you were able to onboard quickly and you could find all the answers that you had, your team probably documented their workflows very well. But if it was really challenging and you had to constantly Slack message people, send emails, jump on Zoom calls, then you should probably consider leveling up your documentation on your team.\n\nIn analytics, this is often a really important part. We want users and developers to be able to answer their own questions. Things like, what does this data mean? How is this field being calculated?\n\nThe issue though, is that this documentation is often separated from the code itself.\n\nIf you have to consider your time in developing the code and documenting the code, which one's going to win? Probably the development of the code. So dbt is considered this, and we've put the development process and the documentation process in the same interface.\n\nDocumentation in dbt is done in yaml files right where we develop our models, so that we don't have to go to a separate repository.\n\nThese then can be served up in a very user friendly interface, and it doesn't require the user to have any coding knowledge to be able to answer their own questions.\n\nSo you don't have to answer another Slack message or email or jump on a Zoom call to answer those questions. They'll be able to self serve.\n\nThis is how documentation can level up your workflow.","hasPart":[{"@type":"Clip","endOffset":7,"name":"Introduction","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=0s"},{"@type":"Clip","endOffset":41,"name":"The Importance of Documentation","startOffset":7,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=7s"},{"@type":"Clip","endOffset":54,"name":"Documentation in Analytics","startOffset":41,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=41s"},{"@type":"Clip","endOffset":60,"name":"Separation of Documentation from Code","startOffset":54,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=54s"},{"@type":"Clip","endOffset":77,"name":"Integration of Development and Documentation in dbt","startOffset":60,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=60s"},{"@type":"Clip","endOffset":86,"name":"Documentation in dbt","startOffset":77,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=77s"},{"@type":"Clip","endOffset":94,"name":"User-Friendly Interface for Documentation","startOffset":86,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=86s"},{"@type":"Clip","endOffset":104,"name":"Self-Service Documentation","startOffset":94,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=94s"},{"@type":"Clip","endOffset":107,"name":"Conclusion","startOffset":104,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=2&wtime=104s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_1993">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/7ud9josi7e","@type":"VideoObject","duration":"PT2M37S","name":"C7-L3-what is documentation explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/5b15220bdc6870a15b52aa47e507806c.jpg?image_crop_resized=640x337","embedUrl":"https://fast.wistia.net/embed/iframe/7ud9josi7e","uploadDate":"2023-11-20T18:34:54.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/7f0d4ab6f9cab36929c7fcc7fd00364bca3cc873.m3u8","transcript":"Let's dive into dbt's documentation.\n\nThis documentation can be viewed by anybody with a read only license or a developer license in dbt cloud, And we can use this documentation to answer questions really quickly about our modeling or our sources, other aspects about our dbt project. And we can pass that information along to our stakeholders so they can answer questions for themselves very easily, like where is this data coming from? What does this field mean? How is it being calculated?\n\nThere are a few ways that this is done. One of them is with our dbt DAG.\n\nIn our documentation, we can see the dependencies between our models and our sources, and we can see exactly where source is coming from all the way through to our final models.\n\nAnd this is done not by typing in, hey, this model depends on this model and letting dbt know very manually. It's done based on the code that we've already written in our project using our ref macro and our source macro to build those dependencies between our models and building dependencies between source and a model.\n\nAnd all of this is being rendered in your documentation based off of that code. The other level of documentation is at the model level or the source level, being able to say, this is what this table is. This is what the grain of this table is, and sharing that information with the rest of your team. We can also document at the column level in a model or a source to indicate what a specific field means or to say this is how how this is being calculated.\n\nSo we can answer questions like, what does order status mean? What does return pending mean? With our documentation, we can answer that question very easily.\n\nThe way we document isn't to just log out of dbt and log into some other application. We're able to do that documentation right in dbt where we're developing our code.\n\nSo we've written our SQL in dbt, and then we can go over to our yaml files and create that documentation for the model that we just created. So that way, we can give that information to others on our team, or we can do ourselves a favor and say, right as we've done this development work, what we've done, what does this field mean, what does this calculation here.\n\nAnd rather than in six months looking at your code and having no idea what it's doing.\n\nSo it's really powerful to do all of this in the same place.\n\nAnd if you want to give any of your own input, it's really easy to do in DBT.","hasPart":[{"@type":"Clip","endOffset":31,"name":"Introduction to dbt's Documentation","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=3&wtime=0s"},{"@type":"Clip","endOffset":68,"name":"Utilizing dbt DAG for Documentation","startOffset":31,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=3&wtime=31s"},{"@type":"Clip","endOffset":96,"name":"Model and Source Level Documentation","startOffset":68,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=3&wtime=68s"},{"@type":"Clip","endOffset":107,"name":"Answering Questions with Documentation","startOffset":96,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=3&wtime=96s"},{"@type":"Clip","endOffset":156,"name":"Documenting in dbt","startOffset":107,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=3&wtime=107s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2069">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/77ncfzo4j4","@type":"VideoObject","duration":"PT5M46S","name":"C7-L4-writing documentation and doc blocks demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/e880313fd8661a66bafaec65429b7a96.jpg?image_crop_resized=640x324","embedUrl":"https://fast.wistia.net/embed/iframe/77ncfzo4j4","uploadDate":"2023-11-20T18:35:00.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/d66594478619980c4b936a9aee86935771310ad3.m3u8","transcript":"Let's dive into writing documentation and Doc Blocks.\n\nSo in my project, I have several models here that we've created previously. We have our Staged Jaffle Shop Customers and Staged Jaffle ShopOrders.\n\nI want to document both of these models, so let's go ahead and open up our schema YAML file here, and we've already done some work previously by adding tests to our YAML file.\n\nHere, this is where we're going to add our documentation as well. So again, this is the beauty of having our documentation written in the same place where we are writing our tests alongside our models.\n\nSo here, we can add descriptions to our models underneath our model name. So in a YAML file, let's go ahead and create a new line under our model name. We'll add description here. When I'm at this level, the staging level, I think about my target audience and who I'm writing this documentation for.\n\nSo here, probably, I'm writing this for other developers.\n\nSo as a developer, what is some information that I might want to know about this model?\n\nMaybe the grain of the table would be helpful. So let's go ahead and put one unique customer per row.\n\nSo let's similarly add a description to our staged Appleshop orders model, and we'll put one order per row. Not only can we add descriptions at the model level, but we can do so at the column level. So underneath customer ID, we'll add description.\n\nAnd here, customer ID is my primary key. So So that is important information for my developers to know. So we'll put primary key as our description.\n\nSimilarly, under order ID, we'll add description and indicate that this is also the primary key.\n\nI also have my status column here. And so what might I want to know about my Status column? Well, I have all of these different values in my Status column, and so maybe I want to understand what each of these values mean.\n\nJust like we did before, we could add a description line underneath our status column, and I could type out a sentence describing each of my statuses.\n\nHowever, that's going to be a really long description in my YAML file, and so maybe I want a more organized way to write my documentation.\n\nThis is where doc blocks come in. Doc blocks are written in separate markdown files in my project and referenced here in my YAML file.\n\nSo in our Jaffle shop folder, let's go ahead and create another file, and we'll call this Jaffle shop docs.\n\nMd. So again, this is going to be a markdown file. So we'll create this.\n\nTo start, I need to open up my doc block, and I do so with a curly bracket and a percent and the word docs. We need to give our doc block a name, so I'm going to call this order status.\n\nAnd then I need my percent sign here to close that out.\n\nWhenever I'm creating a doc block, I need to make sure that I also have my ending of the doc block. So in this case, we'll have percent curly percent again and the word end docs, and we'll close that out with another percent in a curly.\n\nSo in between these two sets of curly brackets, we're going to add our documentation.\n\nI already have my documentation written out elsewhere, so I'm going to go ahead and just paste that in here.\n\nExcellent. So now I have a table where all of my statuses have a definition, a description.\n\nAnd so let's go ahead and save this, and down below I can see a preview of my markdown.\n\nSo this is rendered correctly so I know that my syntax here is correct.\n\nNow I need to tell dbt to associate this documentation with my status column here in my yaml file.\n\nSo where we have description underneath the status column, we're going to add a connection to that doc block. So here we'll do quotes, double curlies, the word doc, parentheses, and then our doc block name.\n\nNote that the name of our doc block, the name that we put here inside our doc macro, is going to be the name that we've given the doc block at the top. We can have multiple doc blocks per markdown file, so we need a way to indicate which specific doc block we are wanting to connect to our status.\n\nSo we're not going to put the name of the file, rather the name of the doc block itself.\n\nSo now dbt understands that my status column is going to be associated with the description that I have here in my markdown file.\n\nLet's go ahead and save this, and let's commit and sync our changes. So we added descriptions to stage jaffle shop customers and stage jaffle shop orders.\n\nSo we've successfully added descriptions to both of our staging models and our columns.","hasPart":[{"@type":"Clip","endOffset":4,"name":"Introduction to Documentation and Doc Blocks","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=0s"},{"@type":"Clip","endOffset":39,"name":"Documenting Models in YAML File","startOffset":4,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=4s"},{"@type":"Clip","endOffset":146,"name":"Adding Descriptions to Models","startOffset":39,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=39s"},{"@type":"Clip","endOffset":165,"name":"Using Doc Blocks for Organized Documentation","startOffset":146,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=146s"},{"@type":"Clip","endOffset":199,"name":"Creating a Doc Block Markdown File","startOffset":165,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=165s"},{"@type":"Clip","endOffset":230,"name":"Structuring a Doc Block","startOffset":199,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=199s"},{"@type":"Clip","endOffset":258,"name":"Writing Documentation in Doc Block","startOffset":230,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=230s"},{"@type":"Clip","endOffset":315,"name":"Connecting Doc Block to YAML File","startOffset":258,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=258s"},{"@type":"Clip","endOffset":346,"name":"Finalizing Model Descriptions","startOffset":315,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=4&wtime=315s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2144">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/r14gas6ape","@type":"VideoObject","duration":"PT2M44S","name":"C7-L5-documenting sources demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/073627d2fcf152b67b315eea26258161.jpg?image_crop_resized=640x324","embedUrl":"https://fast.wistia.net/embed/iframe/r14gas6ape","uploadDate":"2023-11-20T18:35:04.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/d1a6215be6be5a3523bdaef1fe3dc516c0f45761.m3u8","transcript":"Let's add descriptions to our sources. So previously, we added documentation to our models and some columns in those models. We can also document at the source level. So let's pop into our sources.\n\nYml file, and here we can document from one layer above our source tables at the source level. So here, JavaShop is our source name, and that is going to represent our database and our schema. So I'm going to indicate some information about my database my schema. So this is going to have a description again here, and this is going to be a clone of a Postgres application database.\n\nPerfect.\n\nSo we have a description at the source level. We can also add descriptions at the individual source table level. So underneath customers here, we'll go ahead and add a description.\n\nAnd here, I'm going to indicate that this is raw customer data.\n\nIt's important to add raw here because that indicates to all of my other developers that this is untransformed data. So let's go ahead and do the same thing under our orders table, and we'll say a raw orders data.\n\nExcellent. So not only can we document at the overall source level and the source table level, we can also document at the column level. So here, let's go ahead and add a column to our customer source in the YAML file. So here we'll put columns, name, and then ID.\n\nNote that I'm putting ID here and not customer ID.\n\nSo if I look at my stage, JavaScript customers file, I can see that the original column was called ID, and we renamed that to customer ID. So in my YAML file, when I'm referencing that column, I need to make sure that it's the original source column.\n\nSo here, we'll put a description, and here, our ID is going to be the primary key for customers data.\n\nExcellent. Let's go ahead and save our file here and commit and sync our changes. So we added descriptions to Jaffle shop sources.\n\nAnd so now we successfully added descriptions at the source level, at the source table level, and the column level in our sources.","hasPart":[{"@type":"Clip","endOffset":14,"name":"Adding Descriptions to Sources","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=5&wtime=0s"},{"@type":"Clip","endOffset":50,"name":"Documenting at the Source Level","startOffset":14,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=5&wtime=14s"},{"@type":"Clip","endOffset":87,"name":"Documenting at the Individual Source Table Level","startOffset":50,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=5&wtime=50s"},{"@type":"Clip","endOffset":155,"name":"Documenting at the Column Level","startOffset":87,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=5&wtime=87s"},{"@type":"Clip","endOffset":164,"name":"Summary of Descriptions Added","startOffset":155,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=5&wtime=155s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2219">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/0tojdeuccs","@type":"VideoObject","duration":"PT5M56S","name":"C7-L6-generate and view documentation demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/ad9d327a66c5c86dc1fe8830b1ec00c9.jpg?image_crop_resized=640x324","embedUrl":"https://fast.wistia.net/embed/iframe/0tojdeuccs","uploadDate":"2023-11-20T18:35:11.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/2775d684129196da4754143cd057439f9320dab9.m3u8","transcript":"Let's dive into viewing the documentation we've added to our project. So a quick recap of what I already have in my project. So in my models directory, I have a staging folder. And here, I have two YAML files, one of which describes my sources and configures those, as well as my models where I have testing and documentation.\n\nThen I have my models here, Sage, Jappleshop customers and Sage, Jappleshop orders, as well as my Stripe folder and my Margs folder.\n\nSo we've added a lot of things in our project, and now I'm ready to generate my documentation site. So the documentation that we've created in our project, we're going to be able to render that into a separate site that we can use to explore our project and to check on different aspects about our lineage and other elements. So let's go ahead and run this command, dbt docs generate.\n\nAnd here in dev, that's going to generate my documentation by parsing through my project, looking at all of my YAML files to find all of those description lines that we added, as well as looking in my data platform for my target tables to look at my data types for my columns and collect all of that information there.\n\nSo now that we've run that command, at the top of my version control center, I have this little book. And now this is clickable. And so we can go ahead and open a new tab here with our documentation site.\n\nLet's take a look at some of the features here. In the bottom right hand corner, there's this little blue circle, and this is going to have my lineage for my project, my DAG.\n\nHere at the bottom, we have different filters that we could apply to this lineage.\n\nSo just like how we can select specific resources in our commands when we're running our project, we can use the same syntax to select elements from our project here. So maybe I really just want to look at fact orders. I don't really care about the other stuff. So I'm going to say, let's look at everything that's upstream from fact orders and everything that is downstream.\n\nSo here, we can type that out, update our graph, and the rest of the things that aren't a part of this data pipeline have gone away. You can imagine when you have a really large project, this functionality is really beneficial.\n\nLet's take a look at some of the other features of our Docs site. So if we go over here let me move this out of the way. We have our sources split out into JackleShop and Stripe. If I go into my sources JackleShop folder and I look at my customers model, we can see the descriptions that we've added here for our overall, table as well as descriptions for our column ID. We get some other information at the top here. We haven't talked about tags, but know that you can tag your sources and your models, and those would show up here for you, as well as other metadata about our source, specifically the size, when it was last modified, our row count, all of those elements here.\n\nIf I look into my projects, I can see that I have three different things here, one of which being Jappleshop.\n\nThis is going to have my models directory that's following a similar format to what we would see in our file explorer in dbt cloud. If I go into my staging folder and I look at Japel shop, let's take a look at our orders model.\n\nSo here, staged Jappleshop orders, we see similar information at the top where, again, we don't have any tags, but we would see those here if we did, as well as some other information, the materialization of this model, the language that it's written in, and the relation. So my database schema and the name of my resource.\n\nWe see the description that we added in our YAML file, one order per row. We also see the description for our order ID primary key. In our status column here, this looks a little wonky, but if I click into this, it shows me that whole table that we created in our markdown file. So we can see this displayed really nicely in our documentation site.\n\nSome additional information that we get are tests that we've put on our columns. So here the unique and not null test on our order ID, since that's our primary key, that is showing up here. And if I collapse this, we can see the accepted values test showing up here in our status column.\n\nSome other information that we get is what is referenced by this model.\n\nSo what is downstream of staged Appleshop orders? So here, this model is being referenced by FactOrders, and if we toggle into Test, we can see all of the tests that are associated with this model.\n\nIf we scroll down a little bit further, we see DependsOn. So what is upstream from this model? What does this model depend on? It depends on my order's source. So if I double click into this, this will bring me back to my order's source.\n\nIf I scroll down to the bottom, we can see our code. So this is what we would find in dbt cloud in my SQL file for my model. And if I click compiled, this shows me exactly what is being sent to my data platform to create this model in the target schema.\n\nSo all of this information here is available to anybody who has a developer license or a read only license in dbt and gives us rich information about our project.\n\nIn the next section, we'll look at deployment, and we'll look at how documentation can get created during jobs, as well as some other ways that we can document and view our project with dbt explorer.","hasPart":[{"@type":"Clip","endOffset":22,"name":"Introduction to Project Documentation","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=0s"},{"@type":"Clip","endOffset":60,"name":"Project Structure and Content","startOffset":22,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=22s"},{"@type":"Clip","endOffset":81,"name":"Generating Documentation","startOffset":60,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=60s"},{"@type":"Clip","endOffset":95,"name":"Accessing the Documentation Site","startOffset":81,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=81s"},{"@type":"Clip","endOffset":133,"name":"Exploring Features of the Documentation Site","startOffset":95,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=95s"},{"@type":"Clip","endOffset":147,"name":"Filtering and Graph Update","startOffset":133,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=133s"},{"@type":"Clip","endOffset":193,"name":"Exploring Additional Features","startOffset":147,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=147s"},{"@type":"Clip","endOffset":214,"name":"Viewing Sources and Models","startOffset":193,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=193s"},{"@type":"Clip","endOffset":259,"name":"Exploring Model Details","startOffset":214,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=214s"},{"@type":"Clip","endOffset":277,"name":"Column Tests and References","startOffset":259,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=259s"},{"@type":"Clip","endOffset":296,"name":"Referenced Information and Dependencies","startOffset":277,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=277s"},{"@type":"Clip","endOffset":313,"name":"Upstream and Downstream Dependencies","startOffset":296,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=296s"},{"@type":"Clip","endOffset":330,"name":"Viewing Code and Compilation","startOffset":313,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=313s"},{"@type":"Clip","endOffset":342,"name":"Accessibility of Project Information","startOffset":330,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=330s"},{"@type":"Clip","endOffset":355,"name":"Upcoming: Deployment and Additional Documentation","startOffset":342,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/documentation-30min/documentation-basics?page=6&wtime=342s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2294">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/knt4tlg3g3","@type":"VideoObject","duration":"PT2M29S","name":"C8-L2-what is deployment explainer","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/ed2025c5cda941db5c87cb5897f5a614a262f139.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/knt4tlg3g3","uploadDate":"2023-11-20T19:18:48.000Z","description":"a dbtsandbox video","contentUrl":"https://embed-ssl.wistia.com/deliveries/b31b9d5198b876c3930aee463b84467f32e1259f.m3u8","transcript":"All right. Let's talk about deployment in dbt. We've referred to this a couple times throughout the course, but really want to give a clear definition here. So when you deploy your dbt project or put dbt into production, you are running a set of commands and dbt on a schedule to power your business.\n\nTo give some context to that. So far we've only been working in development. I've been working on a development branch, maybe it's add customer model. I've also been working in development schema, which is dbt_kcoapman and then I've been running ad hoc, um, dbt run dbt test as I need them in development in the IDE.\n\nDeployment is going to be a little different deployment, has a dedicated production branch. And so that might be main or master. Usually it's one of those two, the default branch set by your get provider and then also in a dedicated production schema. So that should not be dbt_kcoapman.\n\nThat should be something like dbt_prod or internally we just use the schema analytics. I think that's partly because it'll be like first alphabetically in the list of schemas. And that is what revenue, marketing, finance can all trust to be where they find the tables that they need to make decisions. And the third piece is.\n\nYou get to choose which commands you want to run on a schedule it's not baked in that you only run dbt run, um, or the cadence isn't built in into this can only be run weekly. You have the opportunity to set a weekly cadence. I want to run dbt, run dbt tests. Um, and I can get him get a little bit more advanced in there with model selection, syntax.\n\nUm, but you can have that just run automatically whenever your business needs it to be. And so what that allows you to do is have production, be the single source of truth in that dedicated schema on that dedicated branch. And then in a separate development environment like we've been working in so far, I can tinker around. I can change things, break things, without breaking things in production that the rest of my company is relying on.\n\nAnd so stepping back a little bit, before we get into the nuances of deployment, it's going to happen on a dedicated branch. Usually your default branch. It's also going to happen in a dedicated production schema, like dbt_production. And then it is a set of commands that you decide to run on a schedule.\n\nSo with that in the next couple of videos, we'll dive into some of the nuances there and the best practices for running dbt in production.","potentialAction":{"@type":"SeekToAction","target":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=2&wtime={seek_to_second_number}","startOffset-input":"required name=seek_to_second_number"}}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2346">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/g3yvcowvar","@type":"VideoObject","duration":"PT4M55S","name":"C8-L3-set up first dbt cloud job demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/3dbd5960ee6f9e2b83312070e93b150d.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/g3yvcowvar","uploadDate":"2023-11-20T19:19:06.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/a755cbe5eea510ed836465af128288c45daa5c82.m3u8","transcript":"At this point, you've likely created some models, configured your sources, set up your tests, and written your documentation for your project.\n\nOnce you've done that in your developer interface, you're going to want to merge all that code into main so that the code you've worked on is in your main branch and will run when you run a job. You'll make sure to do that by clicking our get button on the top left.\n\nIn this video, you'll learn how to run the code in your main branch on a schedule by creating and running your first dbt cloud job.\n\nI'm going to go to this menu up top and hit deploy, and then I'll click on environments.\n\nYou'll notice that you and I both already have a development environment. This is built by default when you make a new DPC cloud project.\n\nI want to deploy my production code, and I want this environment to be for building my pipelines. So I'm going to create a new deployment environment, and I'll click this create environment button right here.\n\nYou can see that this environment has already been automatically made as a deployment environment because you could only have one development environment, and we already had one. I want this environment to be for my production code, so I'll name this production.\n\nDown here, I can set my deployment type. Again, this deployment environment is not for general use, so I don't wanna select general. It's for building my production pipelines, so I'm selecting production.\n\nDown here is where I would select my dbt version. This is inherited from my dev environment. And if I wanted to, I could select only run on a custom branch. I don't want to select this because I want the code on my main branch to run.\n\nFurther down, we have our deployment connection section. This is where we specify what data warehouse we're using. And even further down, we have our deployment credentials.\n\nI could enter something in username like mbaird, if that's my username to access Snowflake. In this case, though, I'd recommend using something else, like setting up a service account or a service user that specifically has permissions on your production schema or production database where you actually want to write your code. I'm going to keep this pretty simple and just write everything I have to the analytics schema.\n\nAnd I already have a production snowflake user called dbt prod. If you want this project to be something you would actually use in production, I would recommend creating those separate users. But if you're just learning dbt right now and you just want to practice, feel free to use whatever your personal credentials are down here.\n\nOkay. Great. I've entered my username and password. And now I can scroll up, and I can hit save.\n\nNow that I have my production environment made, I'll create a new job in my production environment.\n\nI'll go and hit this create job button.\n\nAnd now I'm given the option to make a deploy job or a continuous integration job. Because I want to run my code on a schedule and not run my code whenever a PR is submitted, I'm selecting deploy job.\n\nI'll give it a self explanatory name like daily job since I want this job to run on a daily schedule. The description here should describe what the job is. So I'll write production job that runs on daily cadence. Under environment, I'll make sure that I'm selecting the production environment that I just made.\n\nAnd further down here are my execution settings.\n\nThis is where you can pass whatever dbt commands you'd like. So we could put something in here like dbt dbt run, dbt test, dbt seed, whatever it might be. In this case, I'm going to keep things simple and leave it as just dbt build, which does a lot of really great things for me. It will run and test all of my models in DAG order. Very helpful. Further down are some other commands you can select, like generate docs on run, which automatically generates documentation for when the job runs. And we also have run source freshness, which enables the dbt source freshness command as the first step of this job.\n\nI'm selecting both of these. Even further down, we can select our triggers. This is how we'll trigger the job. I want this job to run on a schedule, and not just when another job completes.\n\nSo I'm going to select run on schedule. I want this job to run every day of the week. So every day of the week down here is already selected, and I want to set my timing to specific hours. Let's say that I want this job to run at nine every day.\n\nSo I'll make sure to put nine.\n\nMake sure you're paying attention to your time zones. Great. Now that I've done all that, I can scroll up, and I can hit save. And I've just created a DBT cloud","hasPart":[{"@type":"Clip","endOffset":22,"name":"Setting Up the Project","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=3&wtime=0s"},{"@type":"Clip","endOffset":29,"name":"Merging Code into Main Branch","startOffset":22,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=3&wtime=22s"},{"@type":"Clip","endOffset":174,"name":"Deploying and Creating Environments","startOffset":29,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=3&wtime=29s"},{"@type":"Clip","endOffset":295,"name":"Creating a New Job","startOffset":174,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=3&wtime=174s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2422">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/f7gv62iyg7","@type":"VideoObject","duration":"PT3M57S","name":"C8-L4-review dbt cloud job demo","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/b6c81af25eddfeb6128e805ac8302f43.jpg?image_crop_resized=640x400","embedUrl":"https://fast.wistia.net/embed/iframe/f7gv62iyg7","uploadDate":"2023-11-20T19:19:13.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/d53e34d3deefd2bc5cb4502ad93070e49e36d7ac.m3u8","transcript":"In this video, I'm going to show you how to review your jobs. You can see all of the jobs you've run by going to the Deploy drop down menu up here and selecting Run History.\n\nHere, I have a list of all the jobs that I've run. If I click on one, I'll click on the first one, then I can see more details about what happened when the job was executed.\n\nWe can take a look at some of the run steps here, and the first three are automatic for all jobs in dbtCloud.\n\nThe first one is cloning the Git repository.\n\nBy default, this will be your main branch. Next is connecting to your warehouse with whatever connection profile you specified in the environment this job is running in And last is invoking dbt deps, which will install all of your packages if you have any Next is everything that you specified.\n\nFor example, I made sure to run a source freshness, which we can see failed and gave us a warning because we had two models without any fresh data.\n\nAfter that, it ran our dbt build, which we can see, was successful with one error.\n\nAnd that error was we failed an accepted values test. Clicking on any of these individual execution steps will allow us to see what happened in them.\n\nI clicked on my dbt build drop down menu. We can see that it built out again all of our models, tested all of our models, and we can also see exactly where it failed. In general, clicking on these logs is something that you're going to want to do anytime there's any unexpected failure that happens in your run. Down here, you can see that I invoked dbt docs generate.\n\nIf I scroll up, we can see even more information about when this job ran. We can see how long this job spent in queue, the amount of time it took to run each individual step, and the total amount of time that this run took.\n\nWe also have this really great lineage tab, which shows you your lineage, and this really great model timing tab, which will show you how long each model took to build. Models that take a very long time to build are potential warning signs that you need to refactor your project. Nothing here took too long to build, though, so I don't have too much to be worried about.\n\nIf I can highlight down here, you see I just zoomed in on these sections here. I can move this little box around.\n\nI can elongate it, shorten it if I want to.\n\nAnd that way, you can make sure you're looking at whatever part of your project you wanna be looking at. If I click on the sources tab up here, this will take me to a site where I can see the source freshness of each of my sources. I can click on the drop down menus here, and I can see where I had some stale data. If I go back to just our overview, we can also see how our run was scheduled.\n\nHere it says trigger, and then it says triggered manually. That's because I triggered this job manually.\n\nWe also have our commit SHA and the environment that this job ran in.\n\nI also have this button here that I can click to view the documentation that I generated on my run.\n\nIf I go back to our model timing tab, if I highlight a model, I can click view and explore. Dbt explorer is an enterprise plan only feature that lets you generate and view the full picture of your project all in one place. I'll click this now.\n\nIt brought us to the lineage for the model stage customers.\n\nThat was the model I was hovering over.\n\nIf I wanted to see how my jobs are running, I can go to this performance button right here. Now I can see how many times my models have been executed, the longest they've taken to execute, and my most failed models.","hasPart":[{"@type":"Clip","endOffset":27,"name":"Introduction to Job Review","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=0s"},{"@type":"Clip","endOffset":96,"name":"Job Execution Steps","startOffset":27,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=27s"},{"@type":"Clip","endOffset":113,"name":"Job Run Details","startOffset":96,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=96s"},{"@type":"Clip","endOffset":147,"name":"Lineage and Model Timing","startOffset":113,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=113s"},{"@type":"Clip","endOffset":172,"name":"Project Navigation and Viewing","startOffset":147,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=147s"},{"@type":"Clip","endOffset":196,"name":"Job Scheduling and Environment","startOffset":172,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=172s"},{"@type":"Clip","endOffset":236,"name":"Exploring dbt Explorer","startOffset":196,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=4&wtime=196s"}]}</script><script class="w-json-ld" type="application/ld+json" id="w-json-ldwistia_2497">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/ynl1hilcdf","@type":"VideoObject","duration":"PT5M22S","name":"fun-c8-l5-dbt explorer overview","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/22fc1f5b29d0f6c0e726b69bcb9f439b84c6ec4d.jpg?image_crop_resized=640x360","embedUrl":"https://fast.wistia.net/embed/iframe/ynl1hilcdf","uploadDate":"2024-07-16T20:04:33.000Z","description":"a dbtproduction video","contentUrl":"https://embed-ssl.wistia.com/deliveries/c24b8f571f00f4cda30c211eac360296fbf44535.m3u8","transcript":"At this point, you have a job running a production, building the models, running the tests, and generating the documentation that you built developing in dbt. The next thing I want to show you is a quick tour of dbt Explorer. You'll find this on the left hand side where you see the compass. And here is dbt Explorer.\n\nFirst thing I want to show you. My favorite part about dbt Explorer is the project lineage. This is the DAG that you built while working development. And so I can see the full lineage of my project.\n\nI can see sources here on the left. And then the downstream. Building of models all with dependencies, they're indicated by arrows. Another cool part of that is I can jump into lenses and actually jump into materialization type and it labels the materialization type on each of these.\n\nI can see the status base off the last run. Modeling layer. Was it staging or was it marts? And I can even see the test status there.\n\nDid the test pass, did they fail? Unknown. If there's no tests in place. We'll have the X here to go back to our homepage of Explorer.\n\nFew things over here, underneath project details. I can see performance and I can see my most executed models. Longest model executions. Most failed models.\n\nSo it looks like my first dbt model failed a hundred percent of the time. So I might want to look at that. I scroll up. I can go to recommendations and at a very high level, I can see what's the test coverage and what is the documentation coverage of my project.\n\nI can then also see much more granular recommendations down here. Where I see. I'm missing a primary key tests on stage stripe payments. Also one in fact orders also one on dim customers, so I can jump into development and make those changes.\n\nIf you want to dig into individual resources, you have three ways to get there. You can go to resources and look at models, sources, tests. You can go to file tree and actually navigate based off the file tree you built in development, or you can even go to database and look at the. underlying.\n\ndatabase objects that a dbt is aware of or is constructing. So I could go into analytics and see. All the things that my project is building in production. I'm gonna go back to resources and let's take a look at models, sources, and tests.\n\nIf I click on models. I can see all sorts of different things, just at a high level view. I can see my row count is a hundred here for dim_customers. Let's take a look at actually.\n\nstg_jaffle_shop_customers actually want to go there. And so immediately off the bat, I get one step up one step back. In terms of my lineage, it's nice to know where this is coming from and where it's going. If I want to change how far up and down that's going, I can click full lineage and then change my selectors here.\n\nI'm going to keep it simple and come back here though. I can see the description I wrote in documentation here, the tests, and that can see a few more details that are either in my dbt project or are pulled from my underlying data platform. If I scroll up and go to code, I can see the pure dbt code here, or I can see the pure compiled SQL here. Depending on who's viewing this, that could be particularly helpful.\n\nThen underneath the columns, I'll automatically see all the columns on the final output of this model. And I can see customer ID, first name, last name. I can see what tests are run on those. And then if you open this up, you can actually see column level lineage here.\n\nI can see upstream from stg_jaffle_shop_customers. The customer ID column is coming from the ID column on the jaffle_shop.customer source. And then that same column is being passed downstream to a dim customers.\n\nAs it passed through, you'll see even these little markers, this was a rename of the same exact column there. And then we'll see this as a pass through of the same column name there. We saw some performance at a high level earlier. You can also see performance on the model level, so I can see the jobs that it's included in.\n\nI can see the last run execution time. I can see the time, count, tests, how those tests are doing and that I can even see recommendations on the model level. If there's anything I should improve to follow our best practices for dbt project structure. If I see a model that I want to change, I can even click this open in IDE button.\n\nAnd that will take me to the develop interface where I can open a branch, edit that model, make a commit and merge that into main. Let's take a look at sources. I'll see right here, all my sources at the source level, not the table level just yet. And I can see what is the status of those sources.\n\nI can click in. I can see the description that I wrote in development. I can click into actual source tables here. I get that same lineage in a very similar overview that we saw with models.\n\nI see a description here that I wrote in development. Some more details. And then I can go to columns. I get that same column level lineage here.\n\nI see that's being passed upstream, downstream. I can see status. And see the lineage there as well. I can even go to recommendations.\n\nIt looks like I don't have any recommendations here at the moment. Final part. I want to show you is tests. You can see the different tests on each resource that you have as you build out your project.\n\nThis will be quite a bit longer, hopefully if your data quality is top of mind. And so you even have the search bar here where I can look for something like. dim_customers and go find the model that I'm looking for. And while you're searching you can also.\n\nFilter based off what you're actually looking for, whether it's tests, sources, models, and these other resources that you'll learn about in a future advanced course. And so with that, I'll bring you back to the overview here. That is a quick tour of dbt Explorer.","hasPart":[{"@type":"Clip","endOffset":15,"name":"Introduction to dbt Explorer","startOffset":0,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=0s"},{"@type":"Clip","endOffset":57,"name":"Project Lineage and Visualization","startOffset":15,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=15s"},{"@type":"Clip","endOffset":80,"name":"Project Details and Performance","startOffset":57,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=57s"},{"@type":"Clip","endOffset":110,"name":"Recommendations and Development","startOffset":80,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=80s"},{"@type":"Clip","endOffset":124,"name":"Exploring Database Objects","startOffset":110,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=110s"},{"@type":"Clip","endOffset":172,"name":"Model Details and Lineage","startOffset":124,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=124s"},{"@type":"Clip","endOffset":218,"name":"Column Details and Lineage","startOffset":172,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=172s"},{"@type":"Clip","endOffset":238,"name":"Model Level Performance and Recommendations","startOffset":218,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=218s"},{"@type":"Clip","endOffset":254,"name":"Editing Models in IDE","startOffset":238,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=238s"},{"@type":"Clip","endOffset":281,"name":"Source Details and Lineage","startOffset":254,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=254s"},{"@type":"Clip","endOffset":321,"name":"Test Recommendations","startOffset":281,"url":"https://learn.getdbt.com/learn/course/dbt-fundamentals/deployment-30min/understanding-deployment?page=5&wtime=281s"}]}</script>
  <title>dbt Fundamentals - Course Feedback | dbt Learn</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link href="https://d36ai2hkxl16us.cloudfront.net/v3/dist/9720-862f34a4412603408896.css" media="all" rel="stylesheet">
  <link href="https://d36ai2hkxl16us.cloudfront.net/v3/dist/5338-01f7cd02e3b19f997b0d.css" media="all" rel="stylesheet">


    <meta id="meta-description" name="description" content="dbt Learn online learning classes">

    <link rel="shortcut icon" href="https://d36ai2hkxl16us.cloudfront.net/thoughtindustries/image/upload/a_exif,c_fit,t_ti_favicon_v4/v1/course-uploads/6ed554fb-fedc-4719-a40d-8b22e0a22aee/bl9zu91dyzc2-dbt-bit.png">

      <link id="appearance-stylesheet" rel="stylesheet" href="/appearance/company/c6172976-35b3-4815-81f9-c601eeb09ebc--5eb8262a03--v2.css"><link id="course-appearance-stylesheet" rel="stylesheet" href="/appearance/course/0f32846e-7ea4-4ed1-b963-03824a0d6886--9196c91a63--v2.css">

  <script async="" src="https://www.googletagmanager.com/gtm.js?id=GTM-P3CKCJ3"></script><script>
window.dataLayer = window.dataLayer || [];
</script>

<script> <src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P3CKCJ3');</script>
<!-- End Google Tag Manager -->

<!--<link href='https://use.typekit.net/jcm4wrc.css' rel='stylesheet' />-->
<link href="https://use.typekit.net/kvb8avc.css" rel="stylesheet">

<!-- Partner SSO login button -->
<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>

<meta property="og:image" content="https://www.getdbt.com/img/site-meta/facebook.png">


      <script nonce="pdjt0h2ssw7rq7hrjh5e1c1e" src="https://www.googletagmanager.com/gtag/js?id=G-D34XLK9ZGZ"></script>
      <script nonce="pdjt0h2ssw7rq7hrjh5e1c1e">
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        window.gtag('js', new Date());

        window.gtag('config', 'G-D34XLK9ZGZ');
      </script>



  <script nonce="pdjt0h2ssw7rq7hrjh5e1c1e">!(window.CSS && window.CSS.supports && window.CSS.supports('--a', 0)) && document.write('<script src="https://d36ai2hkxl16us.cloudfront.net/css-vars-ponyfill-ti.2.4.2.min.js"><\/script><script nonce="pdjt0h2ssw7rq7hrjh5e1c1e">cssVars({silent: false});<\/script>');</script>
<meta class="foundation-data-attribute-namespace"><meta class="foundation-mq-xxlarge"><meta class="foundation-mq-xlarge-only"><meta class="foundation-mq-xlarge"><meta class="foundation-mq-large-only"><meta class="foundation-mq-large"><meta class="foundation-mq-medium-only"><meta class="foundation-mq-medium"><meta class="foundation-mq-small-only"><meta class="foundation-mq-small"><style></style><style>a:focus{outline:0 !important;box-shadow:none !important;};</style><style>button:focus{outline:0 !important;box-shadow:none !important;};</style><style>.btn:focus{outline:0 !important;box-shadow:none !important;};</style><style>.directional__nav a:focus .directional__nav__button{outline:0;box-shadow:none;};</style><style>.learner__sidebar__expandables .expandable-sidebar__link:focus .expandable-sidebar__toggle {outline:0;box-shadow:none;};</style><script src="https://cdn.cookielaw.org/scripttemplates/202407.2.0/otBannerSdk.js" async="" type="text/javascript"></script><style id="onetrust-style">#onetrust-banner-sdk .onetrust-vendors-list-handler{cursor:pointer;color:#1f96db;font-size:inherit;font-weight:bold;text-decoration:none;margin-left:5px}#onetrust-banner-sdk .onetrust-vendors-list-handler:hover{color:#1f96db}#onetrust-banner-sdk:focus{outline:2px solid #000;outline-offset:-2px}#onetrust-banner-sdk a:focus{outline:2px solid #000}#onetrust-banner-sdk #onetrust-accept-btn-handler,#onetrust-banner-sdk #onetrust-reject-all-handler,#onetrust-banner-sdk #onetrust-pc-btn-handler{outline-offset:1px}#onetrust-banner-sdk.ot-bnr-w-logo .ot-bnr-logo{height:64px;width:64px}#onetrust-banner-sdk .ot-tcf2-vendor-count.ot-text-bold{font-weight:bold}#onetrust-banner-sdk .ot-close-icon,#onetrust-pc-sdk .ot-close-icon,#ot-sync-ntfy .ot-close-icon{background-size:contain;background-repeat:no-repeat;background-position:center;height:12px;width:12px}#onetrust-banner-sdk .powered-by-logo,#onetrust-banner-sdk .ot-pc-footer-logo a,#onetrust-pc-sdk .powered-by-logo,#onetrust-pc-sdk .ot-pc-footer-logo a,#ot-sync-ntfy .powered-by-logo,#ot-sync-ntfy .ot-pc-footer-logo a{background-size:contain;background-repeat:no-repeat;background-position:center;height:25px;width:152px;display:block;text-decoration:none;font-size:.75em}#onetrust-banner-sdk .powered-by-logo:hover,#onetrust-banner-sdk .ot-pc-footer-logo a:hover,#onetrust-pc-sdk .powered-by-logo:hover,#onetrust-pc-sdk .ot-pc-footer-logo a:hover,#ot-sync-ntfy .powered-by-logo:hover,#ot-sync-ntfy .ot-pc-footer-logo a:hover{color:#565656}#onetrust-banner-sdk h3 *,#onetrust-banner-sdk h4 *,#onetrust-banner-sdk h6 *,#onetrust-banner-sdk button *,#onetrust-banner-sdk a[data-parent-id] *,#onetrust-pc-sdk h3 *,#onetrust-pc-sdk h4 *,#onetrust-pc-sdk h6 *,#onetrust-pc-sdk button *,#onetrust-pc-sdk a[data-parent-id] *,#ot-sync-ntfy h3 *,#ot-sync-ntfy h4 *,#ot-sync-ntfy h6 *,#ot-sync-ntfy button *,#ot-sync-ntfy a[data-parent-id] *{font-size:inherit;font-weight:inherit;color:inherit}#onetrust-banner-sdk .ot-hide,#onetrust-pc-sdk .ot-hide,#ot-sync-ntfy .ot-hide{display:none !important}#onetrust-banner-sdk button.ot-link-btn:hover,#onetrust-pc-sdk button.ot-link-btn:hover,#ot-sync-ntfy button.ot-link-btn:hover{text-decoration:underline;opacity:1}#onetrust-pc-sdk .ot-sdk-row .ot-sdk-column{padding:0}#onetrust-pc-sdk .ot-sdk-container{padding-right:0}#onetrust-pc-sdk .ot-sdk-row{flex-direction:initial;width:100%}#onetrust-pc-sdk [type=checkbox]:checked,#onetrust-pc-sdk [type=checkbox]:not(:checked){pointer-events:initial}#onetrust-pc-sdk [type=checkbox]:disabled+label::before,#onetrust-pc-sdk [type=checkbox]:disabled+label:after,#onetrust-pc-sdk [type=checkbox]:disabled+label{pointer-events:none;opacity:.7}#onetrust-pc-sdk #vendor-list-content{transform:translate3d(0, 0, 0)}#onetrust-pc-sdk li input[type=checkbox]{z-index:1}#onetrust-pc-sdk li .ot-checkbox label{z-index:2}#onetrust-pc-sdk li .ot-checkbox input[type=checkbox]{height:auto;width:auto}#onetrust-pc-sdk li .host-title a,#onetrust-pc-sdk li .ot-host-name a,#onetrust-pc-sdk li .accordion-text,#onetrust-pc-sdk li .ot-acc-txt{z-index:2;position:relative}#onetrust-pc-sdk input{margin:3px .1ex}#onetrust-pc-sdk .pc-logo,#onetrust-pc-sdk .ot-pc-logo{height:60px;width:180px;background-position:center;background-size:contain;background-repeat:no-repeat;display:inline-flex;justify-content:center;align-items:center}#onetrust-pc-sdk .pc-logo img,#onetrust-pc-sdk .ot-pc-logo img{max-height:100%;max-width:100%}#onetrust-pc-sdk .screen-reader-only,#onetrust-pc-sdk .ot-scrn-rdr,.ot-sdk-cookie-policy .screen-reader-only,.ot-sdk-cookie-policy .ot-scrn-rdr{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}#onetrust-pc-sdk.ot-fade-in,.onetrust-pc-dark-filter.ot-fade-in,#onetrust-banner-sdk.ot-fade-in{animation-name:onetrust-fade-in;animation-duration:400ms;animation-timing-function:ease-in-out}#onetrust-pc-sdk.ot-hide{display:none !important}.onetrust-pc-dark-filter.ot-hide{display:none !important}#ot-sdk-btn.ot-sdk-show-settings,#ot-sdk-btn.optanon-show-settings{color:#68b631;border:1px solid #68b631;height:auto;white-space:normal;word-wrap:break-word;padding:.8em 2em;font-size:.8em;line-height:1.2;cursor:pointer;-moz-transition:.1s ease;-o-transition:.1s ease;-webkit-transition:1s ease;transition:.1s ease}#ot-sdk-btn.ot-sdk-show-settings:hover,#ot-sdk-btn.optanon-show-settings:hover{color:#fff;background-color:#68b631}.onetrust-pc-dark-filter{background:rgba(0,0,0,.5);z-index:2147483646;width:100%;height:100%;overflow:hidden;position:fixed;top:0;bottom:0;left:0}@keyframes onetrust-fade-in{0%{opacity:0}100%{opacity:1}}.ot-cookie-label{text-decoration:underline}@media only screen and (min-width: 426px)and (max-width: 896px)and (orientation: landscape){#onetrust-pc-sdk p{font-size:.75em}}#onetrust-banner-sdk .banner-option-input:focus+label{outline:1px solid #000;outline-style:auto}.category-vendors-list-handler+a:focus,.category-vendors-list-handler+a:focus-visible{outline:2px solid #000}#onetrust-pc-sdk .ot-userid-title{margin-top:10px}#onetrust-pc-sdk .ot-userid-title>span,#onetrust-pc-sdk .ot-userid-timestamp>span{font-weight:700}#onetrust-pc-sdk .ot-userid-desc{font-style:italic}#onetrust-pc-sdk .ot-host-desc a{pointer-events:initial}#onetrust-pc-sdk .ot-ven-hdr>p a{position:relative;z-index:2;pointer-events:initial}#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info a,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info a{margin-right:auto}#onetrust-pc-sdk .ot-pc-footer-logo img{width:136px;height:16px}#onetrust-pc-sdk .ot-pur-vdr-count{font-weight:400;font-size:.7rem;padding-top:3px;display:block}#onetrust-banner-sdk .ot-optout-signal,#onetrust-pc-sdk .ot-optout-signal{border:1px solid #32ae88;border-radius:3px;padding:5px;margin-bottom:10px;background-color:#f9fffa;font-size:.85rem;line-height:2}#onetrust-banner-sdk .ot-optout-signal .ot-optout-icon,#onetrust-pc-sdk .ot-optout-signal .ot-optout-icon{display:inline;margin-right:5px}#onetrust-banner-sdk .ot-optout-signal svg,#onetrust-pc-sdk .ot-optout-signal svg{height:20px;width:30px;transform:scale(0.5)}#onetrust-banner-sdk .ot-optout-signal svg path,#onetrust-pc-sdk .ot-optout-signal svg path{fill:#32ae88}#onetrust-consent-sdk .ot-general-modal{overflow:hidden;position:fixed;margin:0 auto;top:50%;left:50%;width:40%;padding:1.5rem;max-width:575px;min-width:575px;z-index:2147483647;border-radius:2.5px;transform:translate(-50%, -50%)}#onetrust-consent-sdk .ot-signature-health-group{margin-top:1rem;padding-left:1.25rem;padding-right:1.25rem;margin-bottom:.625rem;width:calc(100% - 2.5rem)}#onetrust-consent-sdk .ot-signature-health-group .ot-signature-health-form{gap:.5rem}#onetrust-consent-sdk .ot-signature-health .ot-signature-health-form{width:70%;gap:.35rem}#onetrust-consent-sdk .ot-signature-health .ot-signature-input{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}#onetrust-consent-sdk .ot-signature-health .ot-signature-subtitle{font-size:1.125rem}#onetrust-consent-sdk .ot-signature-health .ot-signature-group-title{font-size:1.25rem;font-weight:bold}#onetrust-consent-sdk .ot-signature-health,#onetrust-consent-sdk .ot-signature-health-group{display:flex;flex-direction:column;gap:1rem}#onetrust-consent-sdk .ot-signature-health .ot-signature-cont,#onetrust-consent-sdk .ot-signature-health-group .ot-signature-cont{display:flex;flex-direction:column;gap:.25rem}#onetrust-consent-sdk .ot-signature-health .ot-signature-paragraph,#onetrust-consent-sdk .ot-signature-health-group .ot-signature-paragraph{margin:0;line-height:20px;font-size:max(14px,.875rem)}#onetrust-consent-sdk .ot-signature-health .ot-health-signature-error,#onetrust-consent-sdk .ot-signature-health-group .ot-health-signature-error{color:#4d4d4d;font-size:min(12px,.75rem)}#onetrust-consent-sdk .ot-signature-health .ot-signature-buttons-cont,#onetrust-consent-sdk .ot-signature-health-group .ot-signature-buttons-cont{margin-top:max(.75rem,2%);gap:1rem;display:flex;justify-content:flex-end}#onetrust-consent-sdk .ot-signature-health .ot-signature-button,#onetrust-consent-sdk .ot-signature-health-group .ot-signature-button{flex:1;height:auto;color:#fff;cursor:pointer;line-height:1.2;min-width:125px;font-weight:600;font-size:.813em;border-radius:2px;padding:12px 10px;white-space:normal;word-wrap:break-word;word-break:break-word;background-color:#68b631;border:2px solid #68b631}#onetrust-consent-sdk .ot-signature-health .ot-signature-button.reject,#onetrust-consent-sdk .ot-signature-health-group .ot-signature-button.reject{background-color:#fff}#onetrust-consent-sdk .ot-input-field-cont{display:flex;flex-direction:column;gap:.5rem}#onetrust-consent-sdk .ot-input-field-cont .ot-signature-input{width:65%}#onetrust-consent-sdk .ot-signature-health-form{display:flex;flex-direction:column}#onetrust-consent-sdk .ot-signature-health-form .ot-signature-label{margin-bottom:0;line-height:20px;font-size:max(14px,.875rem)}@media only screen and (max-width: 600px){#onetrust-consent-sdk .ot-general-modal{min-width:100%}#onetrust-consent-sdk .ot-signature-health .ot-signature-health-form{width:100%}#onetrust-consent-sdk .ot-input-field-cont .ot-signature-input{width:100%}}#onetrust-banner-sdk,#onetrust-pc-sdk,#ot-sdk-cookie-policy,#ot-sync-ntfy{font-size:16px}#onetrust-banner-sdk *,#onetrust-banner-sdk ::after,#onetrust-banner-sdk ::before,#onetrust-pc-sdk *,#onetrust-pc-sdk ::after,#onetrust-pc-sdk ::before,#ot-sdk-cookie-policy *,#ot-sdk-cookie-policy ::after,#ot-sdk-cookie-policy ::before,#ot-sync-ntfy *,#ot-sync-ntfy ::after,#ot-sync-ntfy ::before{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}#onetrust-banner-sdk div,#onetrust-banner-sdk span,#onetrust-banner-sdk h1,#onetrust-banner-sdk h2,#onetrust-banner-sdk h3,#onetrust-banner-sdk h4,#onetrust-banner-sdk h5,#onetrust-banner-sdk h6,#onetrust-banner-sdk p,#onetrust-banner-sdk img,#onetrust-banner-sdk svg,#onetrust-banner-sdk button,#onetrust-banner-sdk section,#onetrust-banner-sdk a,#onetrust-banner-sdk label,#onetrust-banner-sdk input,#onetrust-banner-sdk ul,#onetrust-banner-sdk li,#onetrust-banner-sdk nav,#onetrust-banner-sdk table,#onetrust-banner-sdk thead,#onetrust-banner-sdk tr,#onetrust-banner-sdk td,#onetrust-banner-sdk tbody,#onetrust-banner-sdk .ot-main-content,#onetrust-banner-sdk .ot-toggle,#onetrust-banner-sdk #ot-content,#onetrust-banner-sdk #ot-pc-content,#onetrust-banner-sdk .checkbox,#onetrust-pc-sdk div,#onetrust-pc-sdk span,#onetrust-pc-sdk h1,#onetrust-pc-sdk h2,#onetrust-pc-sdk h3,#onetrust-pc-sdk h4,#onetrust-pc-sdk h5,#onetrust-pc-sdk h6,#onetrust-pc-sdk p,#onetrust-pc-sdk img,#onetrust-pc-sdk svg,#onetrust-pc-sdk button,#onetrust-pc-sdk section,#onetrust-pc-sdk a,#onetrust-pc-sdk label,#onetrust-pc-sdk input,#onetrust-pc-sdk ul,#onetrust-pc-sdk li,#onetrust-pc-sdk nav,#onetrust-pc-sdk table,#onetrust-pc-sdk thead,#onetrust-pc-sdk tr,#onetrust-pc-sdk td,#onetrust-pc-sdk tbody,#onetrust-pc-sdk .ot-main-content,#onetrust-pc-sdk .ot-toggle,#onetrust-pc-sdk #ot-content,#onetrust-pc-sdk #ot-pc-content,#onetrust-pc-sdk .checkbox,#ot-sdk-cookie-policy div,#ot-sdk-cookie-policy span,#ot-sdk-cookie-policy h1,#ot-sdk-cookie-policy h2,#ot-sdk-cookie-policy h3,#ot-sdk-cookie-policy h4,#ot-sdk-cookie-policy h5,#ot-sdk-cookie-policy h6,#ot-sdk-cookie-policy p,#ot-sdk-cookie-policy img,#ot-sdk-cookie-policy svg,#ot-sdk-cookie-policy button,#ot-sdk-cookie-policy section,#ot-sdk-cookie-policy a,#ot-sdk-cookie-policy label,#ot-sdk-cookie-policy input,#ot-sdk-cookie-policy ul,#ot-sdk-cookie-policy li,#ot-sdk-cookie-policy nav,#ot-sdk-cookie-policy table,#ot-sdk-cookie-policy thead,#ot-sdk-cookie-policy tr,#ot-sdk-cookie-policy td,#ot-sdk-cookie-policy tbody,#ot-sdk-cookie-policy .ot-main-content,#ot-sdk-cookie-policy .ot-toggle,#ot-sdk-cookie-policy #ot-content,#ot-sdk-cookie-policy #ot-pc-content,#ot-sdk-cookie-policy .checkbox,#ot-sync-ntfy div,#ot-sync-ntfy span,#ot-sync-ntfy h1,#ot-sync-ntfy h2,#ot-sync-ntfy h3,#ot-sync-ntfy h4,#ot-sync-ntfy h5,#ot-sync-ntfy h6,#ot-sync-ntfy p,#ot-sync-ntfy img,#ot-sync-ntfy svg,#ot-sync-ntfy button,#ot-sync-ntfy section,#ot-sync-ntfy a,#ot-sync-ntfy label,#ot-sync-ntfy input,#ot-sync-ntfy ul,#ot-sync-ntfy li,#ot-sync-ntfy nav,#ot-sync-ntfy table,#ot-sync-ntfy thead,#ot-sync-ntfy tr,#ot-sync-ntfy td,#ot-sync-ntfy tbody,#ot-sync-ntfy .ot-main-content,#ot-sync-ntfy .ot-toggle,#ot-sync-ntfy #ot-content,#ot-sync-ntfy #ot-pc-content,#ot-sync-ntfy .checkbox{font-family:inherit;font-weight:normal;-webkit-font-smoothing:auto;letter-spacing:normal;line-height:normal;padding:0;margin:0;height:auto;min-height:0;max-height:none;width:auto;min-width:0;max-width:none;border-radius:0;border:none;clear:none;float:none;position:static;bottom:auto;left:auto;right:auto;top:auto;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;white-space:normal;background:none;overflow:visible;vertical-align:baseline;visibility:visible;z-index:auto;box-shadow:none}#onetrust-banner-sdk label:before,#onetrust-banner-sdk label:after,#onetrust-banner-sdk .checkbox:after,#onetrust-banner-sdk .checkbox:before,#onetrust-pc-sdk label:before,#onetrust-pc-sdk label:after,#onetrust-pc-sdk .checkbox:after,#onetrust-pc-sdk .checkbox:before,#ot-sdk-cookie-policy label:before,#ot-sdk-cookie-policy label:after,#ot-sdk-cookie-policy .checkbox:after,#ot-sdk-cookie-policy .checkbox:before,#ot-sync-ntfy label:before,#ot-sync-ntfy label:after,#ot-sync-ntfy .checkbox:after,#ot-sync-ntfy .checkbox:before{content:"";content:none}#onetrust-banner-sdk .ot-sdk-container,#onetrust-pc-sdk .ot-sdk-container,#ot-sdk-cookie-policy .ot-sdk-container{position:relative;width:100%;max-width:100%;margin:0 auto;padding:0 20px;box-sizing:border-box}#onetrust-banner-sdk .ot-sdk-column,#onetrust-banner-sdk .ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-column,#onetrust-pc-sdk .ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-column,#ot-sdk-cookie-policy .ot-sdk-columns{width:100%;float:left;box-sizing:border-box;padding:0;display:initial}@media(min-width: 400px){#onetrust-banner-sdk .ot-sdk-container,#onetrust-pc-sdk .ot-sdk-container,#ot-sdk-cookie-policy .ot-sdk-container{width:90%;padding:0}}@media(min-width: 550px){#onetrust-banner-sdk .ot-sdk-container,#onetrust-pc-sdk .ot-sdk-container,#ot-sdk-cookie-policy .ot-sdk-container{width:100%}#onetrust-banner-sdk .ot-sdk-column,#onetrust-banner-sdk .ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-column,#onetrust-pc-sdk .ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-column,#ot-sdk-cookie-policy .ot-sdk-columns{margin-left:4%}#onetrust-banner-sdk .ot-sdk-column:first-child,#onetrust-banner-sdk .ot-sdk-columns:first-child,#onetrust-pc-sdk .ot-sdk-column:first-child,#onetrust-pc-sdk .ot-sdk-columns:first-child,#ot-sdk-cookie-policy .ot-sdk-column:first-child,#ot-sdk-cookie-policy .ot-sdk-columns:first-child{margin-left:0}#onetrust-banner-sdk .ot-sdk-two.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-two.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-two.ot-sdk-columns{width:13.3333333333%}#onetrust-banner-sdk .ot-sdk-three.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-three.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-three.ot-sdk-columns{width:22%}#onetrust-banner-sdk .ot-sdk-four.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-four.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-four.ot-sdk-columns{width:30.6666666667%}#onetrust-banner-sdk .ot-sdk-eight.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-eight.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-eight.ot-sdk-columns{width:65.3333333333%}#onetrust-banner-sdk .ot-sdk-nine.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-nine.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-nine.ot-sdk-columns{width:74%}#onetrust-banner-sdk .ot-sdk-ten.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-ten.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-ten.ot-sdk-columns{width:82.6666666667%}#onetrust-banner-sdk .ot-sdk-eleven.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-eleven.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-eleven.ot-sdk-columns{width:91.3333333333%}#onetrust-banner-sdk .ot-sdk-twelve.ot-sdk-columns,#onetrust-pc-sdk .ot-sdk-twelve.ot-sdk-columns,#ot-sdk-cookie-policy .ot-sdk-twelve.ot-sdk-columns{width:100%;margin-left:0}}#onetrust-banner-sdk h1,#onetrust-banner-sdk h2,#onetrust-banner-sdk h3,#onetrust-banner-sdk h4,#onetrust-banner-sdk h5,#onetrust-banner-sdk h6,#onetrust-pc-sdk h1,#onetrust-pc-sdk h2,#onetrust-pc-sdk h3,#onetrust-pc-sdk h4,#onetrust-pc-sdk h5,#onetrust-pc-sdk h6,#ot-sdk-cookie-policy h1,#ot-sdk-cookie-policy h2,#ot-sdk-cookie-policy h3,#ot-sdk-cookie-policy h4,#ot-sdk-cookie-policy h5,#ot-sdk-cookie-policy h6{margin-top:0;font-weight:600;font-family:inherit}#onetrust-banner-sdk h1,#onetrust-pc-sdk h1,#ot-sdk-cookie-policy h1{font-size:1.5rem;line-height:1.2}#onetrust-banner-sdk h2,#onetrust-pc-sdk h2,#ot-sdk-cookie-policy h2{font-size:1.5rem;line-height:1.25}#onetrust-banner-sdk h3,#onetrust-pc-sdk h3,#ot-sdk-cookie-policy h3{font-size:1.5rem;line-height:1.3}#onetrust-banner-sdk h4,#onetrust-pc-sdk h4,#ot-sdk-cookie-policy h4{font-size:1.5rem;line-height:1.35}#onetrust-banner-sdk h5,#onetrust-pc-sdk h5,#ot-sdk-cookie-policy h5{font-size:1.5rem;line-height:1.5}#onetrust-banner-sdk h6,#onetrust-pc-sdk h6,#ot-sdk-cookie-policy h6{font-size:1.5rem;line-height:1.6}@media(min-width: 550px){#onetrust-banner-sdk h1,#onetrust-pc-sdk h1,#ot-sdk-cookie-policy h1{font-size:1.5rem}#onetrust-banner-sdk h2,#onetrust-pc-sdk h2,#ot-sdk-cookie-policy h2{font-size:1.5rem}#onetrust-banner-sdk h3,#onetrust-pc-sdk h3,#ot-sdk-cookie-policy h3{font-size:1.5rem}#onetrust-banner-sdk h4,#onetrust-pc-sdk h4,#ot-sdk-cookie-policy h4{font-size:1.5rem}#onetrust-banner-sdk h5,#onetrust-pc-sdk h5,#ot-sdk-cookie-policy h5{font-size:1.5rem}#onetrust-banner-sdk h6,#onetrust-pc-sdk h6,#ot-sdk-cookie-policy h6{font-size:1.5rem}}#onetrust-banner-sdk p,#onetrust-pc-sdk p,#ot-sdk-cookie-policy p{margin:0 0 1em 0;font-family:inherit;line-height:normal}#onetrust-banner-sdk a,#onetrust-pc-sdk a,#ot-sdk-cookie-policy a{color:#565656;text-decoration:underline}#onetrust-banner-sdk a:hover,#onetrust-pc-sdk a:hover,#ot-sdk-cookie-policy a:hover{color:#565656;text-decoration:none}#onetrust-banner-sdk .ot-sdk-button,#onetrust-banner-sdk button,#onetrust-pc-sdk .ot-sdk-button,#onetrust-pc-sdk button,#ot-sdk-cookie-policy .ot-sdk-button,#ot-sdk-cookie-policy button{margin-bottom:1rem;font-family:inherit}#onetrust-banner-sdk .ot-sdk-button,#onetrust-banner-sdk button,#onetrust-pc-sdk .ot-sdk-button,#onetrust-pc-sdk button,#ot-sdk-cookie-policy .ot-sdk-button,#ot-sdk-cookie-policy button{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:.9em;font-weight:400;line-height:38px;letter-spacing:.01em;text-decoration:none;white-space:nowrap;background-color:rgba(0,0,0,0);border-radius:2px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}#onetrust-banner-sdk .ot-sdk-button:hover,#onetrust-banner-sdk :not(.ot-leg-btn-container)>button:not(.ot-link-btn):hover,#onetrust-banner-sdk :not(.ot-leg-btn-container)>button:not(.ot-link-btn):focus,#onetrust-pc-sdk .ot-sdk-button:hover,#onetrust-pc-sdk :not(.ot-leg-btn-container)>button:not(.ot-link-btn):hover,#onetrust-pc-sdk :not(.ot-leg-btn-container)>button:not(.ot-link-btn):focus,#ot-sdk-cookie-policy .ot-sdk-button:hover,#ot-sdk-cookie-policy :not(.ot-leg-btn-container)>button:not(.ot-link-btn):hover,#ot-sdk-cookie-policy :not(.ot-leg-btn-container)>button:not(.ot-link-btn):focus{color:#333;border-color:#888;opacity:.7}#onetrust-banner-sdk .ot-sdk-button:focus,#onetrust-banner-sdk :not(.ot-leg-btn-container)>button:focus,#onetrust-pc-sdk .ot-sdk-button:focus,#onetrust-pc-sdk :not(.ot-leg-btn-container)>button:focus,#ot-sdk-cookie-policy .ot-sdk-button:focus,#ot-sdk-cookie-policy :not(.ot-leg-btn-container)>button:focus{outline:2px solid #000}#onetrust-banner-sdk .ot-sdk-button.ot-sdk-button-primary,#onetrust-banner-sdk button.ot-sdk-button-primary,#onetrust-banner-sdk input[type=submit].ot-sdk-button-primary,#onetrust-banner-sdk input[type=reset].ot-sdk-button-primary,#onetrust-banner-sdk input[type=button].ot-sdk-button-primary,#onetrust-pc-sdk .ot-sdk-button.ot-sdk-button-primary,#onetrust-pc-sdk button.ot-sdk-button-primary,#onetrust-pc-sdk input[type=submit].ot-sdk-button-primary,#onetrust-pc-sdk input[type=reset].ot-sdk-button-primary,#onetrust-pc-sdk input[type=button].ot-sdk-button-primary,#ot-sdk-cookie-policy .ot-sdk-button.ot-sdk-button-primary,#ot-sdk-cookie-policy button.ot-sdk-button-primary,#ot-sdk-cookie-policy input[type=submit].ot-sdk-button-primary,#ot-sdk-cookie-policy input[type=reset].ot-sdk-button-primary,#ot-sdk-cookie-policy input[type=button].ot-sdk-button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}#onetrust-banner-sdk .ot-sdk-button.ot-sdk-button-primary:hover,#onetrust-banner-sdk button.ot-sdk-button-primary:hover,#onetrust-banner-sdk input[type=submit].ot-sdk-button-primary:hover,#onetrust-banner-sdk input[type=reset].ot-sdk-button-primary:hover,#onetrust-banner-sdk input[type=button].ot-sdk-button-primary:hover,#onetrust-banner-sdk .ot-sdk-button.ot-sdk-button-primary:focus,#onetrust-banner-sdk button.ot-sdk-button-primary:focus,#onetrust-banner-sdk input[type=submit].ot-sdk-button-primary:focus,#onetrust-banner-sdk input[type=reset].ot-sdk-button-primary:focus,#onetrust-banner-sdk input[type=button].ot-sdk-button-primary:focus,#onetrust-pc-sdk .ot-sdk-button.ot-sdk-button-primary:hover,#onetrust-pc-sdk button.ot-sdk-button-primary:hover,#onetrust-pc-sdk input[type=submit].ot-sdk-button-primary:hover,#onetrust-pc-sdk input[type=reset].ot-sdk-button-primary:hover,#onetrust-pc-sdk input[type=button].ot-sdk-button-primary:hover,#onetrust-pc-sdk .ot-sdk-button.ot-sdk-button-primary:focus,#onetrust-pc-sdk button.ot-sdk-button-primary:focus,#onetrust-pc-sdk input[type=submit].ot-sdk-button-primary:focus,#onetrust-pc-sdk input[type=reset].ot-sdk-button-primary:focus,#onetrust-pc-sdk input[type=button].ot-sdk-button-primary:focus,#ot-sdk-cookie-policy .ot-sdk-button.ot-sdk-button-primary:hover,#ot-sdk-cookie-policy button.ot-sdk-button-primary:hover,#ot-sdk-cookie-policy input[type=submit].ot-sdk-button-primary:hover,#ot-sdk-cookie-policy input[type=reset].ot-sdk-button-primary:hover,#ot-sdk-cookie-policy input[type=button].ot-sdk-button-primary:hover,#ot-sdk-cookie-policy .ot-sdk-button.ot-sdk-button-primary:focus,#ot-sdk-cookie-policy button.ot-sdk-button-primary:focus,#ot-sdk-cookie-policy input[type=submit].ot-sdk-button-primary:focus,#ot-sdk-cookie-policy input[type=reset].ot-sdk-button-primary:focus,#ot-sdk-cookie-policy input[type=button].ot-sdk-button-primary:focus{color:#fff;background-color:#1eaedb;border-color:#1eaedb}#onetrust-banner-sdk input[type=text],#onetrust-pc-sdk input[type=text],#ot-sdk-cookie-policy input[type=text]{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}#onetrust-banner-sdk input[type=text],#onetrust-pc-sdk input[type=text],#ot-sdk-cookie-policy input[type=text]{-webkit-appearance:none;-moz-appearance:none;appearance:none}#onetrust-banner-sdk input[type=text]:focus,#onetrust-pc-sdk input[type=text]:focus,#ot-sdk-cookie-policy input[type=text]:focus{border:1px solid #000;outline:0}#onetrust-banner-sdk label,#onetrust-pc-sdk label,#ot-sdk-cookie-policy label{display:block;margin-bottom:.5rem;font-weight:600}#onetrust-banner-sdk input[type=checkbox],#onetrust-pc-sdk input[type=checkbox],#ot-sdk-cookie-policy input[type=checkbox]{display:inline}#onetrust-banner-sdk ul,#onetrust-pc-sdk ul,#ot-sdk-cookie-policy ul{list-style:circle inside}#onetrust-banner-sdk ul,#onetrust-pc-sdk ul,#ot-sdk-cookie-policy ul{padding-left:0;margin-top:0}#onetrust-banner-sdk ul ul,#onetrust-pc-sdk ul ul,#ot-sdk-cookie-policy ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}#onetrust-banner-sdk li,#onetrust-pc-sdk li,#ot-sdk-cookie-policy li{margin-bottom:1rem}#onetrust-banner-sdk th,#onetrust-banner-sdk td,#onetrust-pc-sdk th,#onetrust-pc-sdk td,#ot-sdk-cookie-policy th,#ot-sdk-cookie-policy td{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}#onetrust-banner-sdk button,#onetrust-pc-sdk button,#ot-sdk-cookie-policy button{margin-bottom:1rem;font-family:inherit}#onetrust-banner-sdk .ot-sdk-container:after,#onetrust-banner-sdk .ot-sdk-row:after,#onetrust-pc-sdk .ot-sdk-container:after,#onetrust-pc-sdk .ot-sdk-row:after,#ot-sdk-cookie-policy .ot-sdk-container:after,#ot-sdk-cookie-policy .ot-sdk-row:after{content:"";display:table;clear:both}#onetrust-banner-sdk .ot-sdk-row,#onetrust-pc-sdk .ot-sdk-row,#ot-sdk-cookie-policy .ot-sdk-row{margin:0;max-width:none;display:block}#onetrust-banner-sdk{box-shadow:0 0 18px rgba(0,0,0,.2)}#onetrust-banner-sdk.otFlat{position:fixed;z-index:2147483645;bottom:0;right:0;left:0;background-color:#fff;max-height:90%;overflow-x:hidden;overflow-y:auto}#onetrust-banner-sdk.otFlat.top{top:0px;bottom:auto}#onetrust-banner-sdk.otRelFont{font-size:1rem}#onetrust-banner-sdk>.ot-sdk-container{overflow:hidden}#onetrust-banner-sdk::-webkit-scrollbar{width:11px}#onetrust-banner-sdk::-webkit-scrollbar-thumb{border-radius:10px;background:#c1c1c1}#onetrust-banner-sdk{scrollbar-arrow-color:#c1c1c1;scrollbar-darkshadow-color:#c1c1c1;scrollbar-face-color:#c1c1c1;scrollbar-shadow-color:#c1c1c1}#onetrust-banner-sdk #onetrust-policy{margin:1.25em 0 .625em 2em;overflow:hidden}#onetrust-banner-sdk #onetrust-policy .ot-gv-list-handler{float:left;font-size:.82em;padding:0;margin-bottom:0;border:0;line-height:normal;height:auto;width:auto}#onetrust-banner-sdk #onetrust-policy-title{font-size:1.2em;line-height:1.3;margin-bottom:10px}#onetrust-banner-sdk #onetrust-policy-text{clear:both;text-align:left;font-size:.88em;line-height:1.4}#onetrust-banner-sdk #onetrust-policy-text *{font-size:inherit;line-height:inherit}#onetrust-banner-sdk #onetrust-policy-text a{font-weight:bold;margin-left:5px}#onetrust-banner-sdk #onetrust-policy-title,#onetrust-banner-sdk #onetrust-policy-text{color:dimgray;float:left}#onetrust-banner-sdk #onetrust-button-group-parent{min-height:1px;text-align:center}#onetrust-banner-sdk #onetrust-button-group{display:inline-block}#onetrust-banner-sdk #onetrust-accept-btn-handler,#onetrust-banner-sdk #onetrust-reject-all-handler,#onetrust-banner-sdk #onetrust-pc-btn-handler{background-color:#68b631;color:#fff;border-color:#68b631;margin-right:1em;min-width:125px;height:auto;white-space:normal;word-break:break-word;word-wrap:break-word;padding:12px 10px;line-height:1.2;font-size:.813em;font-weight:600}#onetrust-banner-sdk #onetrust-pc-btn-handler.cookie-setting-link{background-color:#fff;border:none;color:#68b631;text-decoration:underline;padding-left:0;padding-right:0}#onetrust-banner-sdk .onetrust-close-btn-ui{width:44px;height:44px;background-size:12px;border:none;position:relative;margin:auto;padding:0}#onetrust-banner-sdk .banner_logo{display:none}#onetrust-banner-sdk.ot-bnr-w-logo .ot-bnr-logo{position:absolute;top:50%;transform:translateY(-50%);left:0px}#onetrust-banner-sdk.ot-bnr-w-logo #onetrust-policy{margin-left:65px}#onetrust-banner-sdk .ot-b-addl-desc{clear:both;float:left;display:block}#onetrust-banner-sdk #banner-options{float:left;display:table;margin-right:0;margin-left:1em;width:calc(100% - 1em)}#onetrust-banner-sdk .banner-option-input{cursor:pointer;width:auto;height:auto;border:none;padding:0;padding-right:3px;margin:0 0 10px;font-size:.82em;line-height:1.4}#onetrust-banner-sdk .banner-option-input *{pointer-events:none;font-size:inherit;line-height:inherit}#onetrust-banner-sdk .banner-option-input[aria-expanded=true]~.banner-option-details{display:block;height:auto}#onetrust-banner-sdk .banner-option-input[aria-expanded=true] .ot-arrow-container{transform:rotate(90deg)}#onetrust-banner-sdk .banner-option{margin-bottom:12px;margin-left:0;border:none;float:left;padding:0}#onetrust-banner-sdk .banner-option:first-child{padding-left:2px}#onetrust-banner-sdk .banner-option:not(:first-child){padding:0;border:none}#onetrust-banner-sdk .banner-option-header{cursor:pointer;display:inline-block}#onetrust-banner-sdk .banner-option-header :first-child{color:dimgray;font-weight:bold;float:left}#onetrust-banner-sdk .banner-option-header .ot-arrow-container{display:inline-block;border-top:6px solid rgba(0,0,0,0);border-bottom:6px solid rgba(0,0,0,0);border-left:6px solid dimgray;margin-left:10px;vertical-align:middle}#onetrust-banner-sdk .banner-option-details{display:none;font-size:.83em;line-height:1.5;padding:10px 0px 5px 10px;margin-right:10px;height:0px}#onetrust-banner-sdk .banner-option-details *{font-size:inherit;line-height:inherit;color:dimgray}#onetrust-banner-sdk .ot-arrow-container,#onetrust-banner-sdk .banner-option-details{transition:all 300ms ease-in 0s;-webkit-transition:all 300ms ease-in 0s;-moz-transition:all 300ms ease-in 0s;-o-transition:all 300ms ease-in 0s}#onetrust-banner-sdk .ot-dpd-container{float:left}#onetrust-banner-sdk .ot-dpd-title{margin-bottom:10px}#onetrust-banner-sdk .ot-dpd-title,#onetrust-banner-sdk .ot-dpd-desc{font-size:.88em;line-height:1.4;color:dimgray}#onetrust-banner-sdk .ot-dpd-title *,#onetrust-banner-sdk .ot-dpd-desc *{font-size:inherit;line-height:inherit}#onetrust-banner-sdk.ot-iab-2 #onetrust-policy-text *{margin-bottom:0}#onetrust-banner-sdk.ot-iab-2 .onetrust-vendors-list-handler{display:block;margin-left:0;margin-top:5px;clear:both;margin-bottom:0;padding:0;border:0;height:auto;width:auto}#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group button{display:block}#onetrust-banner-sdk.ot-close-btn-link{padding-top:25px}#onetrust-banner-sdk.ot-close-btn-link #onetrust-close-btn-container{top:15px;transform:none;right:15px}#onetrust-banner-sdk.ot-close-btn-link #onetrust-close-btn-container button{padding:0;white-space:pre-wrap;border:none;height:auto;line-height:1.5;text-decoration:underline;font-size:.69em}#onetrust-banner-sdk #onetrust-policy-text,#onetrust-banner-sdk .ot-dpd-desc,#onetrust-banner-sdk .ot-b-addl-desc{font-size:.813em;line-height:1.5}#onetrust-banner-sdk .ot-dpd-desc{margin-bottom:10px}#onetrust-banner-sdk .ot-dpd-desc>.ot-b-addl-desc{margin-top:10px;margin-bottom:10px;font-size:1em}@media only screen and (max-width: 425px){#onetrust-banner-sdk #onetrust-close-btn-container{position:absolute;top:6px;right:2px}#onetrust-banner-sdk #onetrust-policy{margin-left:0;margin-top:3em}#onetrust-banner-sdk #onetrust-button-group{display:block}#onetrust-banner-sdk #onetrust-accept-btn-handler,#onetrust-banner-sdk #onetrust-reject-all-handler,#onetrust-banner-sdk #onetrust-pc-btn-handler{width:100%}#onetrust-banner-sdk .onetrust-close-btn-ui{top:auto;transform:none}#onetrust-banner-sdk #onetrust-policy-title{display:inline;float:none}#onetrust-banner-sdk #banner-options{margin:0;padding:0;width:100%}}@media only screen and (min-width: 426px)and (max-width: 896px){#onetrust-banner-sdk #onetrust-close-btn-container{position:absolute;top:0;right:0}#onetrust-banner-sdk #onetrust-policy{margin-left:1em;margin-right:1em}#onetrust-banner-sdk .onetrust-close-btn-ui{top:10px;right:10px}#onetrust-banner-sdk:not(.ot-iab-2) #onetrust-group-container{width:95%}#onetrust-banner-sdk.ot-iab-2 #onetrust-group-container{width:100%}#onetrust-banner-sdk.ot-bnr-w-logo #onetrust-button-group-parent{padding-left:50px}#onetrust-banner-sdk #onetrust-button-group-parent{width:100%;position:relative;margin-left:0}#onetrust-banner-sdk #onetrust-button-group button{display:inline-block}#onetrust-banner-sdk #onetrust-button-group{margin-right:0;text-align:center}#onetrust-banner-sdk .has-reject-all-button #onetrust-pc-btn-handler{float:left}#onetrust-banner-sdk .has-reject-all-button #onetrust-reject-all-handler,#onetrust-banner-sdk .has-reject-all-button #onetrust-accept-btn-handler{float:right}#onetrust-banner-sdk .has-reject-all-button #onetrust-button-group{width:calc(100% - 2em);margin-right:0}#onetrust-banner-sdk .has-reject-all-button #onetrust-pc-btn-handler.cookie-setting-link{padding-left:0px;text-align:left}#onetrust-banner-sdk.ot-buttons-fw .ot-sdk-three button{width:100%;text-align:center}#onetrust-banner-sdk.ot-buttons-fw #onetrust-button-group-parent button{float:none}#onetrust-banner-sdk.ot-buttons-fw #onetrust-pc-btn-handler.cookie-setting-link{text-align:center}}@media only screen and (min-width: 550px){#onetrust-banner-sdk .banner-option:not(:first-child){border-left:1px solid #d8d8d8;padding-left:25px}}@media only screen and (min-width: 425px)and (max-width: 550px){#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group,#onetrust-banner-sdk.ot-iab-2 #onetrust-policy,#onetrust-banner-sdk.ot-iab-2 .banner-option{width:100%}#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group #onetrust-accept-btn-handler,#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group #onetrust-reject-all-handler,#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group #onetrust-pc-btn-handler{width:100%}#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group #onetrust-accept-btn-handler,#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group #onetrust-reject-all-handler{float:left}}@media only screen and (min-width: 769px){#onetrust-banner-sdk #onetrust-button-group{margin-right:30%}#onetrust-banner-sdk #banner-options{margin-left:2em;margin-right:5em;margin-bottom:1.25em;width:calc(100% - 7em)}}@media only screen and (min-width: 897px)and (max-width: 1023px){#onetrust-banner-sdk.vertical-align-content #onetrust-button-group-parent{position:absolute;top:50%;left:75%;transform:translateY(-50%)}#onetrust-banner-sdk #onetrust-close-btn-container{top:50%;margin:auto;transform:translate(-50%, -50%);position:absolute;padding:0;right:0}#onetrust-banner-sdk #onetrust-close-btn-container button{position:relative;margin:0;right:-22px;top:2px}}@media only screen and (min-width: 1024px){#onetrust-banner-sdk #onetrust-close-btn-container{top:50%;margin:auto;transform:translate(-50%, -50%);position:absolute;right:0}#onetrust-banner-sdk #onetrust-close-btn-container button{right:-12px}#onetrust-banner-sdk #onetrust-policy{margin-left:2em}#onetrust-banner-sdk.vertical-align-content #onetrust-button-group-parent{position:absolute;top:50%;left:60%;transform:translateY(-50%)}#onetrust-banner-sdk .ot-optout-signal{width:50%}#onetrust-banner-sdk.ot-iab-2 #onetrust-policy-title{width:50%}#onetrust-banner-sdk.ot-iab-2 #onetrust-policy-text,#onetrust-banner-sdk.ot-iab-2 :not(.ot-dpd-desc)>.ot-b-addl-desc{margin-bottom:1em;width:50%;border-right:1px solid #d8d8d8;padding-right:1rem}#onetrust-banner-sdk.ot-iab-2 #onetrust-policy-text{margin-bottom:0;padding-bottom:1em}#onetrust-banner-sdk.ot-iab-2 :not(.ot-dpd-desc)>.ot-b-addl-desc{margin-bottom:0;padding-bottom:1em}#onetrust-banner-sdk.ot-iab-2 .ot-dpd-container{width:45%;padding-left:1rem;display:inline-block;float:none}#onetrust-banner-sdk.ot-iab-2 .ot-dpd-title{line-height:1.7}#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group-parent{left:auto;right:4%;margin-left:0}#onetrust-banner-sdk.ot-iab-2 #onetrust-button-group button{display:block}#onetrust-banner-sdk:not(.ot-iab-2) #onetrust-button-group-parent{margin:auto;width:30%}#onetrust-banner-sdk:not(.ot-iab-2) #onetrust-group-container{width:60%}#onetrust-banner-sdk #onetrust-button-group{margin-right:auto}#onetrust-banner-sdk #onetrust-accept-btn-handler,#onetrust-banner-sdk #onetrust-reject-all-handler,#onetrust-banner-sdk #onetrust-pc-btn-handler{margin-top:1em}}@media only screen and (min-width: 890px){#onetrust-banner-sdk.ot-buttons-fw:not(.ot-iab-2) #onetrust-button-group-parent{padding-left:3%;padding-right:4%;margin-left:0}#onetrust-banner-sdk.ot-buttons-fw:not(.ot-iab-2) #onetrust-button-group{margin-right:0;margin-top:1.25em;width:100%}#onetrust-banner-sdk.ot-buttons-fw:not(.ot-iab-2) #onetrust-button-group button{width:100%;margin-bottom:5px;margin-top:5px}#onetrust-banner-sdk.ot-buttons-fw:not(.ot-iab-2) #onetrust-button-group button:last-of-type{margin-bottom:20px}}@media only screen and (min-width: 1280px){#onetrust-banner-sdk:not(.ot-iab-2) #onetrust-group-container{width:55%}#onetrust-banner-sdk:not(.ot-iab-2) #onetrust-button-group-parent{width:44%;padding-left:2%;padding-right:2%}#onetrust-banner-sdk:not(.ot-iab-2).vertical-align-content #onetrust-button-group-parent{position:absolute;left:55%}}
        #onetrust-consent-sdk #onetrust-banner-sdk {background-color: #FFFFFF;}
            #onetrust-consent-sdk #onetrust-policy-title,
                    #onetrust-consent-sdk #onetrust-policy-text,
                    #onetrust-consent-sdk .ot-b-addl-desc,
                    #onetrust-consent-sdk .ot-dpd-desc,
                    #onetrust-consent-sdk .ot-dpd-title,
                    #onetrust-consent-sdk #onetrust-policy-text *:not(.onetrust-vendors-list-handler),
                    #onetrust-consent-sdk .ot-dpd-desc *:not(.onetrust-vendors-list-handler),
                    #onetrust-consent-sdk #onetrust-banner-sdk #banner-options *,
                    #onetrust-banner-sdk .ot-cat-header,
                    #onetrust-banner-sdk .ot-optout-signal
                    {
                        color: #262a38;
                    }
            #onetrust-consent-sdk #onetrust-banner-sdk .banner-option-details {
                    background-color: #eff2f3;}
             #onetrust-consent-sdk #onetrust-banner-sdk a[href],
                    #onetrust-consent-sdk #onetrust-banner-sdk a[href] font,
                    #onetrust-consent-sdk #onetrust-banner-sdk .ot-link-btn
                        {
                            color: #047377;
                        }#onetrust-consent-sdk #onetrust-accept-btn-handler,
                         #onetrust-banner-sdk #onetrust-reject-all-handler {
                            background-color: #047377;border-color: #047377;
                color: #FFFFFF;
            }
            #onetrust-consent-sdk #onetrust-banner-sdk *:focus,
            #onetrust-consent-sdk #onetrust-banner-sdk:focus {
               outline-color: #262a38;
               outline-width: 1px;
            }
            #onetrust-consent-sdk #onetrust-pc-btn-handler,
            #onetrust-consent-sdk #onetrust-pc-btn-handler.cookie-setting-link {
                color: #047377; border-color: #047377;
                background-color:
                #ffffff;
            }#onetrust-consent-sdk #onetrust-banner-sdk :focus, #onetrust-consent-sdk #onetrust-banner-sdk:focus {
    outline: none;
}@keyframes ot-slide-in-left{from{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}to{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@keyframes ot-slide-in-right{from{-webkit-transform:translate3d(100%, 0, 0);transform:translate3d(100%, 0, 0)}to{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@keyframes ot-slide-out-left{from{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}to{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}}@keyframes ot-slide-out-right{from{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}to{-webkit-transform:translate3d(100%, 0, 0);transform:translate3d(100%, 0, 0)}}#onetrust-pc-sdk.otPcPanel.ot-slide-out-right{-webkit-animation-name:ot-slide-out-right;animation-name:ot-slide-out-right}#onetrust-pc-sdk.otPcPanel.ot-slide-in-left{-webkit-animation-name:ot-slide-in-left;animation-name:ot-slide-in-left}#onetrust-pc-sdk.otPcPanel.ot-slide-in-right{-webkit-animation-name:ot-slide-in-right;animation-name:ot-slide-in-right}#onetrust-pc-sdk.otPcPanel.ot-slide-out-left{-webkit-animation-name:ot-slide-out-left;animation-name:ot-slide-out-left}@media print,(prefers-reduced-motion){.ot-animated{-webkit-animation:initial !important;animation:initial !important;-webkit-transition:none !important;transition:none !important}#onetrust-pc-sdk.otPcPanel.ot-slide-out-left{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}#onetrust-pc-sdk.otPcPanel.ot-slide-out-right{-webkit-transform:translate3d(100%, 0, 0);transform:translate3d(100%, 0, 0)}}#onetrust-pc-sdk{position:fixed;z-index:2147483647;bottom:0;left:0;background-color:#fff;max-width:480px;min-width:480px;height:100%;-webkit-box-shadow:0px 2px 10px -3px #999;-moz-box-shadow:0px 2px 10px -3px #999;box-shadow:0px 2px 10px -3px #999}#onetrust-pc-sdk.otRelFont{font-size:1rem}#onetrust-pc-sdk.otPcPanel.right,#onetrust-pc-sdk.otPcPanel[dir=rtl]{right:0;left:auto}#onetrust-pc-sdk.otPcPanel.right-rtl[dir=rtl]{left:0;right:auto}#onetrust-pc-sdk.otPcPanel.ot-animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both}#onetrust-pc-sdk #close-pc-btn-handler.ot-close-icon{background-color:rgba(0,0,0,0);border:none}#onetrust-pc-sdk .ot-optout-signal{margin-top:.625rem}#onetrust-pc-sdk .ot-pc-scrollbar::-webkit-scrollbar-track{margin-right:20px}#onetrust-pc-sdk .ot-pc-scrollbar::-webkit-scrollbar{width:11px}#onetrust-pc-sdk .ot-pc-scrollbar::-webkit-scrollbar-thumb{border-radius:10px;background:#d8d8d8}#onetrust-pc-sdk .ot-pc-scrollbar{scrollbar-arrow-color:#d8d8d8;scrollbar-darkshadow-color:#d8d8d8;scrollbar-face-color:#d8d8d8;scrollbar-shadow-color:#d8d8d8}#onetrust-pc-sdk.ot-ftr-stacked .ot-pc-refuse-all-handler{margin-bottom:0px}#onetrust-pc-sdk.ot-ftr-stacked #ot-pc-content{bottom:160px}#onetrust-pc-sdk.ot-ftr-stacked .ot-pc-footer button{width:100%;max-width:none}#onetrust-pc-sdk.ot-ftr-stacked #ot-lst-cnt{max-height:84%}#onetrust-pc-sdk #ot-addtl-venlst .ot-arw-cntr,#onetrust-pc-sdk #ot-addtl-venlst .ot-plus-minus,#onetrust-pc-sdk .ot-hide-tgl{visibility:hidden}#onetrust-pc-sdk #ot-addtl-venlst .ot-arw-cntr *,#onetrust-pc-sdk #ot-addtl-venlst .ot-plus-minus *,#onetrust-pc-sdk .ot-hide-tgl *{visibility:hidden}#onetrust-pc-sdk .ot-pc-header{height:39px;border-bottom:1px solid #e9e9e9;padding:10px 0 10px 25px}#onetrust-pc-sdk .ot-pc-logo{height:40px;width:120px}#onetrust-pc-sdk .ot-close-icon{float:right;height:10px;width:10px;margin-top:10px;margin-right:5px}#onetrust-pc-sdk #ot-pc-content,#onetrust-pc-sdk #ot-pc-lst{position:absolute;top:60px;bottom:104px}#onetrust-pc-sdk #ot-pc-content{padding-left:2px;padding-right:10px;margin-left:23px;margin-right:7px;width:calc(100% - 42px);overflow-y:auto}#onetrust-pc-sdk #ot-pc-lst{width:100%}#onetrust-pc-sdk .ot-pc-footer{position:absolute;bottom:0px;width:100%;max-height:160px;border-top:1px solid #d8d8d8}#onetrust-pc-sdk .ot-pc-footer button{margin-top:19px}#onetrust-pc-sdk .ot-btn-container{text-align:left;margin-left:25px;margin-right:25px}#onetrust-pc-sdk .ot-btn-container button{min-width:calc(50% - 5px)}#onetrust-pc-sdk .ot-pc-footer-logo{padding-left:25px;height:30px;background:#f4f4f4;text-align:right}#onetrust-pc-sdk .ot-pc-footer-logo a{display:inline-block;margin-top:5px;margin-right:10px}#onetrust-pc-sdk.otPcPanel[dir=rtl] .ot-pc-footer-logo{direction:rtl}#onetrust-pc-sdk.otPcPanel[dir=rtl] .ot-pc-footer-logo a{margin-right:25px}#onetrust-pc-sdk button{display:inline-block;font-size:.75em;letter-spacing:.08em;max-width:394px;padding:12px 30px;line-height:1;word-break:break-word;word-wrap:break-word;white-space:normal;font-weight:bold;height:auto}#onetrust-pc-sdk button:hover,#onetrust-pc-sdk button:focus{color:#fff;border-color:#68b631}#onetrust-pc-sdk .ot-link-btn{padding:0;margin-bottom:0;border:0;font-weight:normal;line-height:normal;width:auto;height:auto}#onetrust-pc-sdk #accept-recommended-btn-handler{margin-right:10px;margin-bottom:25px}#onetrust-pc-sdk .ot-pc-refuse-all-handler{margin-right:5px}#onetrust-pc-sdk .ot-tgl{float:right;position:relative;z-index:1}#onetrust-pc-sdk .ot-tgl input:checked+.ot-switch .ot-switch-nob{background-color:#468254;border:1px solid #fff}#onetrust-pc-sdk .ot-tgl input:checked+.ot-switch .ot-switch-nob:before{-webkit-transform:translateX(21px);-ms-transform:translateX(21px);transform:translateX(21px);background-color:#fff}#onetrust-pc-sdk .ot-tgl input:focus+.ot-switch .ot-switch-nob{box-shadow:0 0 1px #2196f3;outline-style:auto !important;outline-width:1px !important}#onetrust-pc-sdk .ot-switch{position:relative;display:inline-block;width:45px;height:25px;margin-bottom:0}#onetrust-pc-sdk .ot-switch-nob{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#767676;border:1px solid #ddd;transition:all .2s ease-in 0s;-moz-transition:all .2s ease-in 0s;-o-transition:all .2s ease-in 0s;-webkit-transition:all .2s ease-in 0s;border-radius:20px}#onetrust-pc-sdk .ot-switch-nob:before{position:absolute;content:"";height:18px;width:18px;bottom:3px;left:2px;background-color:#fff;-webkit-transition:.4s;transition:.4s;border-radius:20px}#onetrust-pc-sdk .ot-chkbox{z-index:1}#onetrust-pc-sdk .ot-chkbox input:checked~label::before{background-color:#3860be}#onetrust-pc-sdk .ot-chkbox input+label::after{content:none;color:#fff}#onetrust-pc-sdk .ot-chkbox input:checked+label::after{content:""}#onetrust-pc-sdk .ot-chkbox input:focus+label::before{outline-style:solid;outline-width:2px;outline-style:auto}#onetrust-pc-sdk .ot-chkbox label{position:relative;display:inline-block;cursor:pointer}#onetrust-pc-sdk .ot-chkbox label::before,#onetrust-pc-sdk .ot-chkbox label::after{position:absolute;content:"";display:inline-block;border-radius:3px}#onetrust-pc-sdk .ot-chkbox label::before{height:18px;width:18px;border:1px solid #3860be;left:0px}#onetrust-pc-sdk .ot-chkbox label::after{height:5px;width:9px;border-left:3px solid;border-bottom:3px solid;transform:rotate(-45deg);-o-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-webkit-transform:rotate(-45deg);left:4px;top:5px}#onetrust-pc-sdk .ot-label-txt{display:none}#onetrust-pc-sdk .ot-chkbox input,#onetrust-pc-sdk .ot-tgl input{position:absolute;opacity:0;width:0;height:0}#onetrust-pc-sdk .ot-arw-cntr{left:5px;float:right;position:relative;pointer-events:none}#onetrust-pc-sdk .ot-arw{width:16px;height:16px;margin-left:5px;color:dimgray;display:inline-block;vertical-align:middle;-webkit-transition:all 150ms ease-in 0s;-moz-transition:all 150ms ease-in 0s;-o-transition:all 150ms ease-in 0s;transition:all 150ms ease-in 0s}#onetrust-pc-sdk input:checked~.ot-acc-hdr .ot-arw,#onetrust-pc-sdk button[aria-expanded=true]~.ot-acc-hdr .ot-arw-cntr svg{transform:rotate(90deg);-o-transform:rotate(90deg);-ms-transform:rotate(90deg);-webkit-transform:rotate(90deg)}#onetrust-pc-sdk input[type=checkbox]:focus+.ot-acc-hdr{outline:1px solid #000}#onetrust-pc-sdk .ot-acc-hdr{display:inline-block;width:100%}#onetrust-pc-sdk #ot-fltr-modal .ot-label-txt{display:inline-block;font-size:.85em;color:dimgray}#onetrust-pc-sdk .ot-label-status{padding-left:5px;font-size:.75em;display:none}#onetrust-pc-sdk .ot-plus-minus{width:20px;height:20px;font-size:1.5em;position:relative;display:inline-block;margin-right:5px;top:3px}#onetrust-pc-sdk .ot-plus-minus span{position:absolute;background:#27455c;border-radius:1px}#onetrust-pc-sdk .ot-plus-minus span:first-of-type{top:25%;bottom:25%;width:10%;left:45%}#onetrust-pc-sdk .ot-plus-minus span:last-of-type{left:25%;right:25%;height:10%;top:45%}#onetrust-pc-sdk button[aria-expanded=true]~.ot-acc-hdr .ot-arw,#onetrust-pc-sdk button[aria-expanded=true]~.ot-acc-hdr .ot-plus-minus span:first-of-type,#onetrust-pc-sdk button[aria-expanded=true]~.ot-acc-hdr .ot-plus-minus span:last-of-type{transform:rotate(90deg)}#onetrust-pc-sdk button[aria-expanded=true]~.ot-acc-hdr .ot-plus-minus span:last-of-type{left:50%;right:50%}#onetrust-pc-sdk .ot-host-item,#onetrust-pc-sdk .ot-ven-item{padding-right:0}#onetrust-pc-sdk .ot-host-item .ot-plus-minus,#onetrust-pc-sdk .ot-ven-item .ot-plus-minus{float:left;margin-right:8px;margin-top:10px}#onetrust-pc-sdk .ot-ven-item ul{list-style:none inside;font-size:100%;margin:0}#onetrust-pc-sdk .ot-ven-item ul li{margin:0 !important;padding:0;border:none !important}#onetrust-pc-sdk .ot-hide-acc>button{pointer-events:none}#onetrust-pc-sdk .ot-hide-acc .ot-plus-minus>*,#onetrust-pc-sdk .ot-hide-acc .ot-arw-cntr>*{visibility:hidden}#onetrust-pc-sdk .ot-hide-acc .ot-acc-hdr{min-height:30px}#onetrust-pc-sdk #ot-pc-title,#onetrust-pc-sdk #ot-pc-desc,#onetrust-pc-sdk #ot-category-title,#onetrust-pc-sdk .ot-cat-header,#onetrust-pc-sdk .ot-cat-item p:last-of-type{color:dimgray}#onetrust-pc-sdk #ot-pc-title{margin-top:20px;margin-bottom:10px}#onetrust-pc-sdk #ot-pc-desc,#onetrust-pc-sdk .ot-cat-item p{font-size:.79em;line-height:1.4}#onetrust-pc-sdk #ot-pc-desc *,#onetrust-pc-sdk .ot-cat-item p *{font-size:inherit;line-height:inherit}#onetrust-pc-sdk #ot-category-title,#onetrust-pc-sdk #ot-pc-title{font-size:1.125em;line-height:1.2}#onetrust-pc-sdk #ot-pc-desc{clear:both;font-size:.813em;line-height:1.5;margin-bottom:25px}#onetrust-pc-sdk #ot-pc-desc *{font-size:inherit}#onetrust-pc-sdk #ot-pc-desc a{display:block;margin-top:5px;margin-bottom:5px}#onetrust-pc-sdk #ot-pc-desc li{padding:10px 0px}#onetrust-pc-sdk #ot-pc-desc,#onetrust-pc-sdk #accept-recommended-btn-handler,#onetrust-pc-sdk #ot-pc-title,#onetrust-pc-sdk #ot-category-title,#onetrust-pc-sdk .ot-cat-header{float:left}#onetrust-pc-sdk #ot-category-title{width:100%;text-align:left}#onetrust-pc-sdk #ot-pc-title,#onetrust-pc-sdk #ot-category-title,#onetrust-pc-sdk .ot-cat-header,#onetrust-pc-sdk #ot-lst-title,#onetrust-pc-sdk .ot-ven-hdr .ot-ven-name,#onetrust-pc-sdk .ot-always-active{font-weight:bold}#onetrust-pc-sdk a{color:#656565;cursor:pointer}#onetrust-pc-sdk a:hover{color:#3860be}#onetrust-pc-sdk .ot-always-active{float:right;color:#3860be;margin-top:-2px}#onetrust-pc-sdk .ot-cat-header,#onetrust-pc-sdk .ot-always-active{font-size:.88em;line-height:1.4;position:relative}#onetrust-pc-sdk .ot-cat-item{margin-top:25px;line-height:1.1}#onetrust-pc-sdk .ot-cat-item p:last-of-type{clear:both;padding-top:15px;margin:0}#onetrust-pc-sdk .ot-acc-txt p ul,#onetrust-pc-sdk .ot-cat-item ul,#onetrust-pc-sdk li.ot-subgrp p ul{margin:0px;list-style:disc;margin-left:15px}#onetrust-pc-sdk .ot-acc-txt p ul li,#onetrust-pc-sdk .ot-cat-item ul li,#onetrust-pc-sdk li.ot-subgrp p ul li{font-size:inherit;margin:5px 0 0 0;padding:0;border:none}#onetrust-pc-sdk .ot-subgrp-cntr{display:inline-block;width:100%}#onetrust-pc-sdk .ot-subgrp-cntr .ot-tgl-cntr{float:right}#onetrust-pc-sdk .ot-subgrp-cntr .ot-tgl-cntr.ot-always-active-subgroup{width:auto}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li p,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li h5{font-size:.813em;line-height:1.5;color:dimgray}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr{display:inline-block;width:100%;vertical-align:middle}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-txt{margin:0}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li{margin:10px 0 0 0;padding:0;border:none}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li p{clear:both;float:left;padding-top:10px;margin:0}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li h5{font-weight:bold;margin-bottom:0;float:left;position:relative;top:6px}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li.ot-subgrp{margin-left:20px;overflow:hidden}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li.ot-subgrp>p ul:first-child{padding-bottom:7.5px}#onetrust-pc-sdk ul.ot-subgrps{margin:0}#onetrust-pc-sdk .ot-hlst-cntr,#onetrust-pc-sdk .ot-vlst-cntr{margin-top:3px;overflow:hidden;clear:both;padding-left:2px;padding-bottom:2px}#onetrust-pc-sdk .ot-always-active-subgroup{width:auto;padding-left:0px !important;top:3px;position:relative}#onetrust-pc-sdk .category-vendors-list-handler,#onetrust-pc-sdk .category-vendors-list-handler+a,#onetrust-pc-sdk .category-host-list-handler{color:#3860be;margin-left:0;font-size:.813em;text-decoration:none;float:left;margin-top:5px}#onetrust-pc-sdk .category-vendors-list-handler:hover,#onetrust-pc-sdk .category-vendors-list-handler+a:hover,#onetrust-pc-sdk .category-host-list-handler:hover{text-decoration-line:underline}#onetrust-pc-sdk .category-vendors-list-handler+a{clear:none}#onetrust-pc-sdk .ot-vlst-cntr .ot-ext-lnk,#onetrust-pc-sdk .ot-ven-hdr .ot-ext-lnk{display:inline-block;height:13px;width:13px;background-repeat:no-repeat;margin-left:1px;margin-top:6px;cursor:pointer}#onetrust-pc-sdk .ot-ven-hdr .ot-ext-lnk{margin-bottom:-1px}#onetrust-pc-sdk .back-btn-handler{min-height:20px;font-size:1em;text-decoration:none}#onetrust-pc-sdk .back-btn-handler svg{width:12px;height:12px}#onetrust-pc-sdk .back-btn-handler:hover{opacity:.6}#onetrust-pc-sdk #ot-lst-title h3{word-break:break-word;word-wrap:break-word;margin-bottom:0;color:#656565;font-weight:bold;margin-left:15px;display:inline-block;font-size:1em}#onetrust-pc-sdk #ot-lst-title{margin-top:15px;font-size:1em}#onetrust-pc-sdk #ot-pc-hdr{display:inline-block;padding-left:27px;padding-right:17px;width:calc(100% - 44px)}#onetrust-pc-sdk #ot-pc-hdr input::placeholder{color:#d4d4d4;font-style:italic}#onetrust-pc-sdk #vendor-search-handler{height:31px;width:100%;border-radius:50px;font-size:.8em;padding-right:35px;padding-left:15px;float:left;margin-left:15px}#onetrust-pc-sdk #ot-lst-cnt{transform:translate3d(0, 0, 0);position:relative;padding-left:27px;margin-right:10px;margin-top:10px;width:calc(100% - 37px);top:0;bottom:70px;height:calc(100% - 94px);overflow-y:auto;overflow-x:hidden}#onetrust-pc-sdk #ot-pc-lst .ot-tgl-cntr{right:32px;position:absolute;margin-top:10px;height:20px}#onetrust-pc-sdk #ot-pc-lst:not(.ot-enbl-chr):not(.ot-hosts-ui) .ot-tgl-cntr{right:12px}#onetrust-pc-sdk #ot-sel-blk{position:sticky;position:-webkit-sticky;width:100%;display:inline-block;top:0;overflow:hidden;z-index:3}#onetrust-pc-sdk #ot-sel-blk p{font-size:.75em;color:#6b6b6b;margin:0;display:inline-block}#onetrust-pc-sdk .ot-enbl-chr>:not(.ot-hosts-ui) .ot-sel-all{padding-right:33px}#onetrust-pc-sdk .ot-enbl-chr .ot-hosts-ui .ot-sel-all{padding-right:23px}#onetrust-pc-sdk .ot-enbl-chr .ot-accordion-layout h4~.ot-tgl+.ot-tgl{right:105px}#onetrust-pc-sdk .ot-enbl-chr .ot-cat-item h5+.ot-tgl-cntr{padding-left:31px;padding-right:13px}#onetrust-pc-sdk #ot-pc-lst:not(.ot-enbl-chr) .ot-tgl-cntr .ot-arw-cntr,#onetrust-pc-sdk #ot-pc-lst:not(.ot-enbl-chr) .ot-tgl-cntr .ot-arw-cntr *{visibility:hidden}#onetrust-pc-sdk #ot-pc-content:not(.ot-enbl-chr) .ot-pli-hdr.ot-leg-border-color span:first-child{text-align:center}#onetrust-pc-sdk #ot-pc-content:not(.ot-enbl-chr) .ot-pli-hdr.ot-leg-border-color span:last-child{text-align:right}#onetrust-pc-sdk .ot-hosts-ui:not(.ot-enbl-chr) .ot-tgl-cntr{right:23px}#onetrust-pc-sdk .ot-hosts-ui #ot-sel-blk{width:100%}#onetrust-pc-sdk .ot-lst-subhdr{display:inline-block;width:100%;margin-top:10px}#onetrust-pc-sdk .ot-lst-subhdr svg{width:30px;height:30px;position:absolute;float:left;right:-15px}#onetrust-pc-sdk .ot-search-cntr{float:left;width:82%;position:relative}#onetrust-pc-sdk .ot-fltr-cntr{float:right;right:15px;position:relative}#onetrust-pc-sdk #filter-btn-handler{background-color:#3860be;border-radius:17px;display:inline-block;position:relative;width:32px;height:32px;-moz-transition:.1s ease;-o-transition:.1s ease;-webkit-transition:1s ease;transition:.1s ease;padding:0;margin:0}#onetrust-pc-sdk #filter-btn-handler:hover{opacity:.7}#onetrust-pc-sdk #filter-btn-handler svg{width:12px;margin:6px 10px 0 9px;display:block;height:12px;position:static;right:auto;top:auto}#onetrust-pc-sdk .ot-ven-link,#onetrust-pc-sdk .ot-ven-legclaim-link{color:#3860be;text-decoration:none;display:inline-block;margin-top:10px;transform:translate(0, 1%);-o-transform:translate(0, 1%);-ms-transform:translate(0, 1%);-webkit-transform:translate(0, 1%);z-index:2;position:relative;font-size:.75em}#onetrust-pc-sdk .ot-ven-link:hover,#onetrust-pc-sdk .ot-ven-legclaim-link:hover{text-decoration:underline}#onetrust-pc-sdk .ot-ven-link *,#onetrust-pc-sdk .ot-ven-legclaim-link *{font-size:inherit}#onetrust-pc-sdk .ot-ven-name{vertical-align:middle}#onetrust-pc-sdk .ot-ven-hdr,#onetrust-pc-sdk .ot-host-hdr{width:calc(100% - 165px);height:auto;float:left;text-align:left;word-break:break-word;word-wrap:break-word;vertical-align:middle;padding-bottom:2px;padding-left:2px}#onetrust-pc-sdk .ot-host-hdr{pointer-events:none;position:relative;z-index:1}#onetrust-pc-sdk .ot-host-hdr .ot-host-name{pointer-events:none}#onetrust-pc-sdk .ot-host-hdr a{pointer-events:initial}#onetrust-pc-sdk #ot-host-lst .ot-host-info{font-size:.7em;line-height:1.1}#onetrust-pc-sdk #ot-host-lst .ot-host-name,#onetrust-pc-sdk #ot-host-lst .ot-host-name a{color:dimgray;font-size:.81em;font-weight:bold;line-height:1.4;margin-bottom:5px;position:relative}#onetrust-pc-sdk #ot-host-lst .ot-host-name a,#onetrust-pc-sdk #ot-host-lst .ot-host-info a{font-size:1em}#onetrust-pc-sdk #ot-host-lst .ot-host-desc{width:100%;margin-bottom:5px}#onetrust-pc-sdk #ot-host-lst .ot-host-expand,#onetrust-pc-sdk #ot-host-lst .ot-host-desc{color:dimgray;font-size:.69em;line-height:1.4;float:left;font-weight:normal}#onetrust-pc-sdk #ot-host-lst .ot-host-hdr>a{text-decoration:underline;font-size:.69em;position:relative;z-index:2;float:left;margin-bottom:5px;line-height:1.4}#onetrust-pc-sdk #ot-host-lst .ot-host-expand{color:#3860be}#onetrust-pc-sdk #ot-host-lst .ot-host-expand *{font-size:inherit}#onetrust-pc-sdk .ot-host-opt{margin:0;font-size:inherit;display:inline-block;width:100%}#onetrust-pc-sdk .ot-host-opt .ot-host-info{border:none;font-size:.8em;color:dimgray;display:inline-block;width:calc(100% - 20px);padding:10px;margin-bottom:10px;background-color:#f8f8f8}#onetrust-pc-sdk .ot-host-opt .ot-host-info>div{overflow:auto}#onetrust-pc-sdk .ot-host-opt li>div div{font-size:.8em;padding:5px 0}#onetrust-pc-sdk .ot-host-opt li>div div:nth-child(1){width:30%;float:left}#onetrust-pc-sdk .ot-host-opt li>div div:nth-child(2){width:70%;float:left;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk #ot-ven-lst .ot-acc-hdr{overflow:hidden;cursor:pointer}#onetrust-pc-sdk .ot-ven-dets{border-radius:2px;margin-top:10px;background-color:#f8f8f8}#onetrust-pc-sdk .ot-ven-dets li:first-child p:first-child{border-top:none}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc:not(:first-child){border-top:1px solid #ddd !important}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc:nth-child(n+3) p{display:inline-block}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc:nth-child(n+3) p:nth-of-type(odd){width:30%}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc:nth-child(n+3) p:nth-of-type(even){width:50%;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc p,#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc h5{padding-top:5px;padding-bottom:5px;display:block}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc h5{display:inline-block}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc p:nth-last-child(-n+1){padding-bottom:10px}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc p:nth-child(-n+2):not(.disc-pur){padding-top:10px}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc .disc-pur-cont{display:inline}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc .disc-pur{position:relative;width:50% !important;word-break:break-word;word-wrap:break-word;left:calc(30% + 17px)}#onetrust-pc-sdk .ot-ven-dets .ot-ven-disc .disc-pur:nth-child(-n+1){position:static}#onetrust-pc-sdk .ot-ven-dets p,#onetrust-pc-sdk .ot-ven-dets h5,#onetrust-pc-sdk .ot-ven-dets span{font-size:.69em;text-align:left;vertical-align:middle;word-break:break-word;word-wrap:break-word;margin:0;padding-bottom:10px;padding-left:15px;color:#2e3644}#onetrust-pc-sdk .ot-ven-dets h5{padding-top:5px}#onetrust-pc-sdk .ot-ven-dets span{color:dimgray;padding:0;vertical-align:baseline}#onetrust-pc-sdk .ot-ven-dets .ot-ven-pur h5{border-top:1px solid #e9e9e9;border-bottom:1px solid #e9e9e9;padding-bottom:5px;margin-bottom:5px;font-weight:bold}#onetrust-pc-sdk #no-results{text-align:center;margin-top:30px;height:calc(100% - 300px);margin-left:27px}#onetrust-pc-sdk #no-results span{font-weight:bold}#onetrust-pc-sdk #no-results p{font-size:1em;color:#2e3644;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk #ot-fltr-modal{right:13px;top:87px;height:90%;max-height:370px;display:none;-moz-transition:.2s ease;-o-transition:.2s ease;-webkit-transition:2s ease;transition:.2s ease;opacity:1;position:absolute}#onetrust-pc-sdk #ot-fltr-cnt{z-index:2147483646;background-color:#fff;position:relative;height:100%;max-width:325px;border-radius:3px;padding-right:10px;padding-bottom:5px;-webkit-box-shadow:0px 0px 12px 2px #c7c5c7;-moz-box-shadow:0px 0px 12px 2px #c7c5c7;box-shadow:0px 0px 12px 2px #c7c5c7}#onetrust-pc-sdk .ot-fltr-scrlcnt{overflow-y:auto;overflow-x:hidden;clear:both;max-height:calc(100% - 60px)}#onetrust-pc-sdk #ot-anchor{border:12px solid rgba(0,0,0,0);display:none;position:absolute;z-index:2147483647;right:36px;top:75px;transform:rotate(45deg);-o-transform:rotate(45deg);-ms-transform:rotate(45deg);-webkit-transform:rotate(45deg);background-color:#fff;-webkit-box-shadow:-3px -3px 5px -2px #c7c5c7;-moz-box-shadow:-3px -3px 5px -2px #c7c5c7;box-shadow:-3px -3px 5px -2px #c7c5c7}#onetrust-pc-sdk .ot-fltr-btns{margin-left:15px}#onetrust-pc-sdk #filter-apply-handler{margin-right:15px}#onetrust-pc-sdk .ot-fltr-opt{margin-bottom:20px;margin-left:15px;width:75%}#onetrust-pc-sdk .ot-fltr-opt label{padding-left:30px}#onetrust-pc-sdk .ot-fltr-opt p{display:inline-block;margin:0;font-size:.9em;color:#2e3644}#onetrust-pc-sdk #ot-sel-blk .ot-chkbox{width:20px;height:20px;float:right}#onetrust-pc-sdk .line-through label::after,#onetrust-pc-sdk[dir=rtl] .line-through label::after{height:auto;border-left:0;transform:none;-o-transform:none;-ms-transform:none;-webkit-transform:none;left:5px;top:8px}#onetrust-pc-sdk #ot-selall-vencntr label,#onetrust-pc-sdk #ot-selall-adtlvencntr label,#onetrust-pc-sdk #ot-selall-hostcntr label,#onetrust-pc-sdk #ot-selall-licntr label,#onetrust-pc-sdk #ot-selall-gnvencntr label{position:relative;display:inline-block;width:20px;height:20px;margin:0}#onetrust-pc-sdk #ot-selall-vencntr input,#onetrust-pc-sdk #ot-selall-adtlvencntr input,#onetrust-pc-sdk #ot-selall-hostcntr input,#onetrust-pc-sdk #ot-selall-licntr input,#onetrust-pc-sdk #ot-selall-gnvencntr input{height:auto;width:auto;border-radius:0;font-size:initial;padding:0;float:none}#onetrust-pc-sdk #ot-ven-lst:first-child{border-top:1px solid #e2e2e2}#onetrust-pc-sdk #vdr-lst-dsc{font-size:.812em;line-height:1.5;padding:10px 15px 5px 15px}#onetrust-pc-sdk #close-pc-btn-handler{margin:0;float:right;height:44px;width:44px;background-size:10px}#onetrust-pc-sdk #close-pc-btn-handler svg{display:block}#onetrust-pc-sdk .ot-close-icon{padding:0;background-color:rgba(0,0,0,0);border:none}#onetrust-pc-sdk #clear-filters-handler{float:right;max-width:200px;margin-bottom:10px;text-decoration:none;margin-top:20px;font-weight:bold;color:#3860be;font-size:.9em;letter-spacing:normal;border:none;padding:1px}#onetrust-pc-sdk #clear-filters-handler:hover{color:#2285f7}#onetrust-pc-sdk #clear-filters-handler:focus{outline:#000 solid 1px}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item{position:relative;border-radius:1px;margin:0;padding:0;border:1px solid #d8d8d8;border-top:none;float:left;width:calc(100% - 2px)}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item:first-of-type{margin-top:10px;border-top:1px solid #d8d8d8}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item .ot-vlst-cntr:first-child{margin-top:15px}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item .ot-acc-grpdesc{font-size:.813em;line-height:1.5;padding-left:20px;padding-right:20px;width:calc(100% - 40px)}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item .ot-acc-grpdesc ul{padding-bottom:5px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-hdr{padding-top:11.5px;padding-bottom:11.5px;padding-left:20px;padding-right:15px;width:calc(100% - 35px);display:inline-block;position:relative;min-height:25px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-txt{width:100%;padding:0px}#onetrust-pc-sdk .ot-accordion-layout .ot-subgrp-cntr,#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpdesc+.ot-leg-btn-container{padding-left:20px;padding-right:16px;width:calc(100% - 36px)}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpdesc+.ot-leg-btn-container{margin-top:5px;margin-bottom:10px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpcntr{z-index:1;position:relative}#onetrust-pc-sdk .ot-accordion-layout input[type=checkbox]:checked~.ot-acc-txt.ot-acc-grpcntr{width:auto;padding-bottom:15px}#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header{float:none;font-size:.88em;color:#2e3644;margin:0;display:inline-block;height:auto;word-wrap:break-word;vertical-align:middle;min-height:inherit}#onetrust-pc-sdk .ot-accordion-layout .ot-vlst-cntr,#onetrust-pc-sdk .ot-accordion-layout .ot-hlst-cntr{padding-left:20px;width:calc(100% - 20px);display:inline-block;margin-top:0;padding-bottom:2px}#onetrust-pc-sdk .ot-accordion-layout h4~.ot-tgl,#onetrust-pc-sdk .ot-accordion-layout h4~.ot-always-active{right:16px}#onetrust-pc-sdk .ot-accordion-layout h4~.ot-tgl+.ot-tgl{right:88px}#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header+.ot-arw-cntr{right:10px;margin-top:-2px;left:auto}#onetrust-pc-sdk .ot-accordion-layout h4~.ot-tgl,#onetrust-pc-sdk .ot-accordion-layout h4~.ot-always-active,#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header+.ot-arw-cntr{position:absolute;top:50%;transform:translateY(-50%)}#onetrust-pc-sdk #ot-category-title{padding-bottom:10px}#onetrust-pc-sdk .ot-pli-hdr{color:#77808e;overflow:hidden;padding-top:7.5px;padding-bottom:7.5px;width:calc(100% - 2px);border-top-left-radius:3px;border-top-right-radius:3px}#onetrust-pc-sdk .ot-pli-hdr .ot-li-title{float:right;font-size:.813em}#onetrust-pc-sdk .ot-pli-hdr span:first-child{top:50%;transform:translateY(50%);max-width:80px}#onetrust-pc-sdk .ot-pli-hdr span:last-child{text-align:center;max-width:95px}#onetrust-pc-sdk .ot-pli-hdr.ot-leg-border-color{background-color:#f8f8f8;border:1px solid #e9e9e9}#onetrust-pc-sdk .ot-pli-hdr.ot-leg-border-color span:first-child{text-align:left;width:80px}#onetrust-pc-sdk .ot-subgrp>h5,#onetrust-pc-sdk .ot-cat-header{width:calc(100% - 130px);max-width:60%}#onetrust-pc-sdk .ot-pli-hdr~.ot-cat-item .ot-subgrp>h5,#onetrust-pc-sdk .ot-pli-hdr~.ot-cat-item .ot-cat-header{width:calc(100% - 145px)}#onetrust-pc-sdk .ot-pli-hdr~.ot-cat-item h5+.ot-tgl-cntr,#onetrust-pc-sdk .ot-pli-hdr~.ot-cat-item .ot-cat-header+.ot-tgl{padding-left:28px}#onetrust-pc-sdk .ot-acc-grpcntr .ot-acc-grpdesc{margin-bottom:5px}#onetrust-pc-sdk .ot-acc-grpcntr .ot-subgrp-cntr{border-top:1px solid #e9e9e9}#onetrust-pc-sdk .ot-acc-grpcntr .ot-subgrp-cntr ul.ot-subgrps li{margin-top:5px;margin-bottom:5px}#onetrust-pc-sdk .ot-acc-hdr .ot-arw-cntr+.ot-tgl,#onetrust-pc-sdk .ot-cat-item h4+.ot-tgl,#onetrust-pc-sdk .ot-acc-txt h4+.ot-tgl-cntr{padding-left:30px}#onetrust-pc-sdk .ot-sel-all-hdr,#onetrust-pc-sdk .ot-sel-all-chkbox{position:relative;display:inline-block;width:100%}#onetrust-pc-sdk .ot-sel-all-chkbox{z-index:1}#onetrust-pc-sdk .ot-li-hdr,#onetrust-pc-sdk .ot-consent-hdr{float:right;font-size:.813em;line-height:normal;text-align:center;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk .ot-li-hdr{max-width:100px;min-width:100px}#onetrust-pc-sdk .ot-consent-hdr{margin-right:5px;max-width:55px}#onetrust-pc-sdk .ot-ven-litgl+.ot-arw-cntr{margin-left:81px}#onetrust-pc-sdk .ot-sel-all{margin:0;position:relative;padding-right:13px;float:right}#onetrust-pc-sdk #ot-selall-hostcntr,#onetrust-pc-sdk #ot-selall-vencntr{right:20px;position:relative}#onetrust-pc-sdk #ot-selall-licntr{position:relative;right:79px}#onetrust-pc-sdk #ot-pc-lst #ot-ven-lst .ot-sel-all{position:relative;display:inline-block;width:20px;height:25px}#onetrust-pc-sdk #ot-pc-lst #ot-ven-lst .ot-sel-all label{position:absolute;padding:0;width:18px;height:18px}#onetrust-pc-sdk .ot-always-active-group .ot-cat-header{width:55%}#onetrust-pc-sdk .ot-leg-btn-container{display:inline-block;width:100%;margin-top:10px}#onetrust-pc-sdk .ot-leg-btn-container button{height:auto;padding:6.5px 8px;margin-bottom:0;letter-spacing:0;line-height:normal}#onetrust-pc-sdk .ot-leg-btn-container svg{display:none;height:14px;width:14px;padding-right:5px;vertical-align:sub}#onetrust-pc-sdk .ot-active-leg-btn{cursor:default;pointer-events:none}#onetrust-pc-sdk .ot-active-leg-btn svg{display:inline-block}#onetrust-pc-sdk .ot-remove-objection-handler{border:none;text-decoration:underline;padding:0;font-size:.82em;font-weight:600;line-height:1.4;padding-left:10px}#onetrust-pc-sdk .ot-obj-leg-btn-handler span{font-weight:bold;text-align:center;font-size:.91em;line-height:1.5}#onetrust-pc-sdk[dir=rtl] input~.ot-acc-hdr .ot-arw,#onetrust-pc-sdk[dir=rtl] #ot-back-arw{transform:rotate(180deg);-o-transform:rotate(180deg);-ms-transform:rotate(180deg);-webkit-transform:rotate(180deg)}#onetrust-pc-sdk[dir=rtl] input:checked~.ot-acc-hdr .ot-arw{transform:rotate(270deg);-o-transform:rotate(270deg);-ms-transform:rotate(270deg);-webkit-transform:rotate(270deg)}#onetrust-pc-sdk[dir=rtl] .ot-chkbox label::after{transform:rotate(45deg);-webkit-transform:rotate(45deg);-o-transform:rotate(45deg);-ms-transform:rotate(45deg);border-left:0;border-right:3px solid}#onetrust-pc-sdk[dir=rtl] .ot-lst-subhdr svg{right:0}#onetrust-pc-sdk .ot-ven-ctgl,#onetrust-pc-sdk .ot-ven-litgl,#onetrust-pc-sdk .ot-host-tgl,#onetrust-pc-sdk .ot-ven-gvctgl{position:relative;display:inline-block;width:20px;height:20px;margin-left:60px}#onetrust-pc-sdk .ot-ven-ctgl label,#onetrust-pc-sdk .ot-ven-litgl label,#onetrust-pc-sdk .ot-host-tgl label,#onetrust-pc-sdk .ot-ven-gvctgl label{position:absolute;width:20px;height:20px;margin:0}#onetrust-pc-sdk #ot-host-lst .ot-host-expand{clear:both;float:none;display:block}#onetrust-pc-sdk ul{list-style:none}#onetrust-pc-sdk ul li{position:relative;margin:0;padding:15px 15px 15px 15px;border-bottom:1px solid #e2e2e2}#onetrust-pc-sdk ul li h3,#onetrust-pc-sdk ul li h4{font-size:.75em;color:#656565;margin:0;height:auto;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk ul li p{margin:0;font-size:.7em}#onetrust-pc-sdk .ot-ven-item>button:focus,#onetrust-pc-sdk .ot-host-item>button:focus,#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item>button:focus,#onetrust-pc-sdk .ot-acc-cntr>button:focus{outline:#000 solid 2px}#onetrust-pc-sdk .ot-ven-item>button,#onetrust-pc-sdk .ot-host-item>button,#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item>button,#onetrust-pc-sdk .ot-acc-cntr>button{position:absolute;cursor:pointer;width:100%;height:100%;margin:0;top:0;left:0;z-index:1;max-width:none;border:none}#onetrust-pc-sdk .ot-ven-item>button[aria-expanded=false]~.ot-acc-txt,#onetrust-pc-sdk .ot-host-item>button[aria-expanded=false]~.ot-acc-txt,#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item>button[aria-expanded=false]~.ot-acc-txt,#onetrust-pc-sdk .ot-acc-cntr>button[aria-expanded=false]~.ot-acc-txt{margin-top:0;max-height:0;overflow:hidden;width:100%;transition:.25s ease-out;display:none}#onetrust-pc-sdk .ot-ven-item>button[aria-expanded=true]~.ot-acc-txt,#onetrust-pc-sdk .ot-host-item>button[aria-expanded=true]~.ot-acc-txt,#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item>button[aria-expanded=true]~.ot-acc-txt,#onetrust-pc-sdk .ot-acc-cntr>button[aria-expanded=true]~.ot-acc-txt{transition:.1s ease-in;width:auto;overflow:auto;display:block}#onetrust-pc-sdk .ot-host-item>button:focus{outline:0;border:2px solid #000}#onetrust-pc-sdk.ot-addtl-vendors .ot-enbl-chr #ot-selall-vencntr{right:0}#onetrust-pc-sdk.ot-addtl-vendors>:not(.ot-enbl-chr) #ot-selall-licntr{right:135px}#onetrust-pc-sdk.ot-addtl-vendors>:not(.ot-enbl-chr) #ot-selall-adtlvencntr,#onetrust-pc-sdk.ot-addtl-vendors>:not(.ot-enbl-chr) #ot-selall-gnvencntr{right:40px}#onetrust-pc-sdk.ot-addtl-vendors .ot-li-hdr{margin-right:15px}#onetrust-pc-sdk.ot-addtl-vendors #ot-selall-licntr{right:115px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) #ot-sel-blk{background-color:#f9f9fc;border:1px solid #e2e2e2;width:auto;padding-bottom:5px;padding-top:5px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-sel-all{padding-right:23px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) ul li{border:1px solid #e2e2e2;margin-bottom:10px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-sel-all-chkbox{float:right;width:auto;right:3px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-tgl-cntr{right:12px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-ven-ctgl{margin-left:75px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-ven-litgl+.ot-arw-cntr{margin-left:95px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) .ot-acc-cntr>.ot-acc-hdr{padding-top:10px;padding-bottom:10px}#onetrust-pc-sdk.ot-addtl-vendors #ot-lst-cnt:not(.ot-host-cnt) #ot-addtl-venlst .ot-tgl-cntr{right:32px}#onetrust-pc-sdk.ot-addtl-vendors #ot-ven-lst:first-child{border-top:none}#onetrust-pc-sdk.ot-addtl-vendors #ot-selall-vencntr{right:40px;position:absolute}#onetrust-pc-sdk #ot-selall-adtlvencntr,#onetrust-pc-sdk #ot-selall-gnvencntr{position:relative;right:20px}#onetrust-pc-sdk .ot-acc-cntr{position:relative;border-left:1px solid #e2e2e2;border-right:1px solid #e2e2e2;border-bottom:1px solid #e2e2e2}#onetrust-pc-sdk .ot-acc-cntr>.ot-acc-hdr{background-color:#f9f9fc;padding-left:15px;padding-top:5px;padding-bottom:5px;width:calc(100% - 15px)}#onetrust-pc-sdk .ot-acc-cntr>.ot-acc-hdr .ot-plus-minus{vertical-align:middle;top:auto}#onetrust-pc-sdk .ot-acc-cntr>.ot-acc-hdr .ot-arw-cntr{right:10px;left:auto}#onetrust-pc-sdk .ot-acc-cntr.ot-add-tech .ot-acc-hdr{padding:10px 0 10px 15px}#onetrust-pc-sdk .ot-acc-cntr>button[aria-expanded=true]~.ot-acc-hdr{border-bottom:1px solid #e2e2e2}#onetrust-pc-sdk .ot-acc-cntr>.ot-acc-txt{padding-left:10px;padding-right:10px;padding-top:10px;position:relative;z-index:1}#onetrust-pc-sdk .ot-acc-cntr .ot-addtl-venbox{display:none}#onetrust-pc-sdk .ot-vensec-title{font-size:.813em;vertical-align:middle;display:inline-block}#onetrust-pc-sdk.ot-close-btn-link #close-pc-btn-handler{border:none;height:auto;line-height:1.5;text-decoration:underline;font-size:.69em;background:none;right:15px;top:15px;width:auto;position:absolute;font-weight:normal}#onetrust-pc-sdk .ot-cat-header{float:left;font-weight:600;font-size:.875em;line-height:1.5;max-width:90%;vertical-align:middle}#onetrust-pc-sdk .ot-vnd-item>button:focus{outline:#000 solid 2px}#onetrust-pc-sdk .ot-vnd-item>button{position:absolute;cursor:pointer;width:100%;height:100%;margin:0;top:0;left:0;z-index:1;max-width:none;border:none}#onetrust-pc-sdk .ot-vnd-item>button[aria-expanded=false]~.ot-acc-txt{margin-top:0;max-height:0;opacity:0;overflow:hidden;width:100%;transition:.25s ease-out;display:none}#onetrust-pc-sdk .ot-vnd-item>button[aria-expanded=true]~.ot-acc-txt{transition:.1s ease-in;margin-top:10px;width:100%;overflow:auto;display:block}#onetrust-pc-sdk .ot-vnd-item>button[aria-expanded=true]~.ot-acc-grpcntr{width:auto;margin-top:0px;padding-bottom:10px}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item{position:relative;border-radius:2px;margin:0;padding:0;border:1px solid #d8d8d8;border-top:none;width:calc(100% - 2px);float:left}#onetrust-pc-sdk .ot-accordion-layout.ot-cat-item:first-of-type{margin-top:10px;border-top:1px solid #d8d8d8}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpdesc{padding-left:20px;padding-right:20px;width:calc(100% - 40px);font-size:.812em;margin-bottom:10px;margin-top:15px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpdesc>ul{padding-top:10px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpdesc>ul li{padding-top:0;line-height:1.5;padding-bottom:10px}#onetrust-pc-sdk .ot-accordion-layout div+.ot-acc-grpdesc{margin-top:5px}#onetrust-pc-sdk .ot-accordion-layout .ot-vlst-cntr:first-child{margin-top:10px}#onetrust-pc-sdk .ot-accordion-layout .ot-vlst-cntr:last-child,#onetrust-pc-sdk .ot-accordion-layout .ot-hlst-cntr:last-child{margin-bottom:5px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-hdr{padding-top:11.5px;padding-bottom:11.5px;padding-left:20px;padding-right:20px;width:calc(100% - 40px);display:inline-block}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-txt{width:100%;padding:0}#onetrust-pc-sdk .ot-accordion-layout .ot-subgrp-cntr{padding-left:20px;padding-right:15px;padding-bottom:0;width:calc(100% - 35px)}#onetrust-pc-sdk .ot-accordion-layout .ot-subgrp{padding-right:5px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-grpcntr{z-index:1;position:relative}#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header+.ot-arw-cntr{position:absolute;top:50%;transform:translateY(-50%);right:20px;margin-top:-2px}#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header+.ot-arw-cntr .ot-arw{width:15px;height:20px;margin-left:5px;color:dimgray}#onetrust-pc-sdk .ot-accordion-layout .ot-cat-header{float:none;color:#2e3644;margin:0;display:inline-block;height:auto;word-wrap:break-word;min-height:inherit}#onetrust-pc-sdk .ot-accordion-layout .ot-vlst-cntr,#onetrust-pc-sdk .ot-accordion-layout .ot-hlst-cntr{padding-left:20px;width:calc(100% - 20px);display:inline-block;margin-top:0;padding-bottom:2px}#onetrust-pc-sdk .ot-accordion-layout .ot-acc-hdr{position:relative;min-height:25px}#onetrust-pc-sdk .ot-accordion-layout h4~.ot-tgl,#onetrust-pc-sdk .ot-accordion-layout h4~.ot-always-active{position:absolute;top:50%;transform:translateY(-50%);right:20px}#onetrust-pc-sdk .ot-accordion-layout h4~.ot-tgl+.ot-tgl{right:95px}#onetrust-pc-sdk .ot-accordion-layout .category-vendors-list-handler,#onetrust-pc-sdk .ot-accordion-layout .category-vendors-list-handler+a{margin-top:5px}#onetrust-pc-sdk #ot-lst-cnt{margin-top:1rem;max-height:calc(100% - 96px)}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info-cntr{border:1px solid #d8d8d8;padding:.75rem 2rem;padding-bottom:0;width:auto;margin-top:.5rem}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info{margin-bottom:1rem;padding-left:.75rem;padding-right:.75rem;display:flex;flex-direction:column}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info[data-vnd-info-key*=DPOEmail]{border-top:1px solid #d8d8d8;padding-top:1rem}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info[data-vnd-info-key*=DPOLink]{border-bottom:1px solid #d8d8d8;padding-bottom:1rem}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info .ot-vnd-lbl{font-weight:bold;font-size:.85em;margin-bottom:.5rem}#onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info .ot-vnd-cnt{margin-left:.5rem;font-weight:500;font-size:.85rem}#onetrust-pc-sdk .ot-vs-list,#onetrust-pc-sdk .ot-vnd-serv{width:auto;padding:1rem 1.25rem;padding-bottom:0}#onetrust-pc-sdk .ot-vs-list .ot-vnd-serv-hdr-cntr,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-serv-hdr-cntr{padding-bottom:.75rem;border-bottom:1px solid #d8d8d8}#onetrust-pc-sdk .ot-vs-list .ot-vnd-serv-hdr-cntr .ot-vnd-serv-hdr,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-serv-hdr-cntr .ot-vnd-serv-hdr{font-weight:600;font-size:.95em;line-height:2;margin-left:.5rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item{border:none;margin:0;padding:0}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item button,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item button{outline:none;border-bottom:1px solid #d8d8d8}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item button[aria-expanded=true],#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item button[aria-expanded=true]{border-bottom:none}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item:first-child,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item:first-child{margin-top:.25rem;border-top:unset}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item:last-child,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item:last-child{margin-bottom:.5rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item:last-child button,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item:last-child button{border-bottom:none}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info-cntr,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info-cntr{border:1px solid #d8d8d8;padding:.75rem 1.75rem;padding-bottom:0;width:auto;margin-top:.5rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info{margin-bottom:1rem;padding-left:.75rem;padding-right:.75rem;display:flex;flex-direction:column}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info[data-vnd-info-key*=DPOEmail],#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info[data-vnd-info-key*=DPOEmail]{border-top:1px solid #d8d8d8;padding-top:1rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info[data-vnd-info-key*=DPOLink],#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info[data-vnd-info-key*=DPOLink]{border-bottom:1px solid #d8d8d8;padding-bottom:1rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info .ot-vnd-lbl,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info .ot-vnd-lbl{font-weight:bold;font-size:.85em;margin-bottom:.5rem}#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-vnd-info .ot-vnd-cnt,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info .ot-vnd-cnt{margin-left:.5rem;font-weight:500;font-size:.85rem}#onetrust-pc-sdk .ot-vs-list.ot-vnd-subgrp-cnt,#onetrust-pc-sdk .ot-vnd-serv.ot-vnd-subgrp-cnt{padding-left:40px}#onetrust-pc-sdk .ot-vs-list.ot-vnd-subgrp-cnt .ot-vnd-serv-hdr-cntr .ot-vnd-serv-hdr,#onetrust-pc-sdk .ot-vnd-serv.ot-vnd-subgrp-cnt .ot-vnd-serv-hdr-cntr .ot-vnd-serv-hdr{font-size:.8em}#onetrust-pc-sdk .ot-vs-list.ot-vnd-subgrp-cnt .ot-cat-header,#onetrust-pc-sdk .ot-vnd-serv.ot-vnd-subgrp-cnt .ot-cat-header{font-size:.8em}#onetrust-pc-sdk .ot-subgrp-cntr .ot-vnd-serv{margin-bottom:1rem;padding:1rem .95rem}#onetrust-pc-sdk .ot-subgrp-cntr .ot-vnd-serv .ot-vnd-serv-hdr-cntr{padding-bottom:.75rem;border-bottom:1px solid #d8d8d8}#onetrust-pc-sdk .ot-subgrp-cntr .ot-vnd-serv .ot-vnd-serv-hdr-cntr .ot-vnd-serv-hdr{font-weight:700;font-size:.8em;line-height:20px;margin-left:.82rem}#onetrust-pc-sdk .ot-subgrp-cntr .ot-cat-header{font-weight:700;font-size:.8em;line-height:20px}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-vnd-serv .ot-vnd-lst-cont .ot-accordion-layout .ot-acc-hdr div.ot-chkbox{margin-left:.82rem}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr{padding:.7rem 0;margin:0;display:flex;width:100%;align-items:center;justify-content:space-between}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr div:first-child,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr div:first-child,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr div:first-child,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr div:first-child,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr div:first-child,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr div:first-child,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr div:first-child{margin-left:.5rem}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr div:last-child,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr div:last-child,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr div:last-child,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr div:last-child,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr div:last-child,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr div:last-child,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr div:last-child{margin-right:.5rem;margin-left:.5rem}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-always-active,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-always-active{position:relative;right:unset;top:unset;transform:unset}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-plus-minus,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-plus-minus{top:0}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-arw-cntr,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-arw-cntr{float:none;top:unset;right:unset;transform:unset;margin-top:-2px;position:relative}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-cat-header,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-cat-header{flex:1;margin:0 .5rem}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-tgl,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-tgl{position:relative;transform:none;right:0;top:0;float:none}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-chkbox{position:relative;margin:0 .5rem}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox label,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-chkbox label{padding:0}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox label::before,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-chkbox label::before{position:relative}#onetrust-pc-sdk .ot-vs-config .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk ul.ot-subgrps .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk #ot-pc-lst .ot-vs-list .ot-vnd-item .ot-acc-hdr .ot-chkbox input,#onetrust-pc-sdk .ot-accordion-layout.ot-checkbox-consent .ot-acc-hdr .ot-chkbox input{position:absolute;cursor:pointer;width:100%;height:100%;opacity:0;margin:0;top:0;left:0;z-index:1}#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li.ot-subgrp .ot-acc-hdr h5.ot-cat-header,#onetrust-pc-sdk .ot-subgrp-cntr ul.ot-subgrps li.ot-subgrp .ot-acc-hdr h4.ot-cat-header{margin:0}#onetrust-pc-sdk .ot-vs-config .ot-subgrp-cntr ul.ot-subgrps li.ot-subgrp h5{top:0;line-height:20px}#onetrust-pc-sdk .ot-vs-list{display:flex;flex-direction:column;padding:0;margin:.5rem 4px}#onetrust-pc-sdk .ot-vs-selc-all{display:flex;padding:0;float:unset;align-items:center;justify-content:flex-start}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf{justify-content:flex-end}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf.ot-caret-conf .ot-sel-all-chkbox{margin-right:48px}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf .ot-sel-all-chkbox{margin:0;padding:0;margin-right:14px;justify-content:flex-end}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf #ot-selall-vencntr.ot-chkbox,#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf #ot-selall-vencntr.ot-tgl{display:inline-block;right:unset;width:auto;height:auto;float:none}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf #ot-selall-vencntr label{width:45px;height:25px}#onetrust-pc-sdk .ot-vs-selc-all .ot-sel-all-chkbox{margin-right:11px;margin-left:.75rem;display:flex;align-items:center}#onetrust-pc-sdk .ot-vs-selc-all .sel-all-hdr{margin:0 1.25rem;font-size:.812em;line-height:normal;text-align:center;word-break:break-word;word-wrap:break-word}#onetrust-pc-sdk .ot-vnd-list-cnt #ot-selall-vencntr.ot-chkbox{float:unset;right:0}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf.ot-caret-conf .ot-sel-all-chkbox{margin-right:.5rem}#onetrust-pc-sdk .ot-vs-selc-all.ot-toggle-conf .ot-sel-all-chkbox{margin-right:15px}#onetrust-pc-sdk #ot-sel-blk .ot-chkbox{right:unset}#onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-acc-hdr .ot-tgl{padding:0}#onetrust-pc-sdk .ot-vs-list{margin-top:.5rem}#onetrust-pc-sdk .ot-pgph-link{font-size:.813em;margin-top:5px;position:relative}#onetrust-pc-sdk .ot-pgph-link.ot-pgph-link-subgroup{margin-bottom:1rem}#onetrust-pc-sdk .ot-pgph-contr{margin:0 2.5rem}#onetrust-pc-sdk .ot-pgph-title{font-size:1.18rem;margin-bottom:2rem}#onetrust-pc-sdk .ot-pgph-desc{font-size:1rem;font-weight:400;margin-bottom:2rem;line-height:1.5rem}#onetrust-pc-sdk .ot-pgph-desc:not(:last-child):after{content:"";width:96%;display:block;margin:0 auto;padding-bottom:2rem;border-bottom:1px solid #e9e9e9}@media only screen and (max-width: 600px){#onetrust-pc-sdk{max-width:100%;min-width:100%}#onetrust-pc-sdk .ot-ftr-stacked button{width:100%}#onetrust-pc-sdk #ot-lst-cnt,#onetrust-pc-sdk #ot-pc-hdr{margin-top:0;padding:0 5px 0 10px;width:calc(100% - 25px)}}@media only screen and (max-width: 425px){#onetrust-pc-sdk.otPcPanel{left:0;min-width:100%;height:100%;top:0;border-radius:0}#onetrust-pc-sdk #ot-host-lst .ot-chkbox{margin-left:0}#onetrust-pc-sdk #ot-pc-content{margin:0 10px 0 20px}#onetrust-pc-sdk p{font-size:.7em}#onetrust-pc-sdk .ot-tgl-cntr{width:auto}#onetrust-pc-sdk #vendor-search-handler{font-size:1em}#onetrust-pc-sdk #ot-lst-cnt{height:calc(100% - 95px)}#onetrust-pc-sdk .ot-switch+p{max-width:80%}#onetrust-pc-sdk button{letter-spacing:.01em}#onetrust-pc-sdk .save-preference-btn-handler{margin-top:0}#onetrust-pc-sdk .ot-search-cntr{width:75%}}@media only screen and (max-width: 320px){#onetrust-pc-sdk #ot-fltr-cnt{margin-left:15px}}@media only screen and (max-width: 896px)and (max-height: 425px)and (orientation: landscape){#onetrust-pc-sdk{left:0;top:0;min-width:100%;height:100%;border-radius:0}#onetrust-pc-sdk .ot-pc-header{height:auto;min-height:20px}#onetrust-pc-sdk .ot-pc-header .ot-pc-logo{max-height:30px}#onetrust-pc-sdk .ot-pc-footer{max-height:60px;overflow-y:auto}#onetrust-pc-sdk #ot-pc-content,#onetrust-pc-sdk #ot-pc-lst{bottom:70px;height:auto !important}#onetrust-pc-sdk.ot-ftr-stacked #ot-pc-content{bottom:70px}#onetrust-pc-sdk button{letter-spacing:.02em}#onetrust-pc-sdk #ot-anchor{left:initial;right:50px}#onetrust-pc-sdk #ot-lst-title{margin-top:12px}#onetrust-pc-sdk #ot-lst-title *{font-size:inherit}#onetrust-pc-sdk #ot-pc-hdr input{margin-right:0;padding-right:45px}#onetrust-pc-sdk .ot-switch+p{max-width:85%}#onetrust-pc-sdk #ot-lst-cnt{max-height:none;overflow:initial}#onetrust-pc-sdk #ot-lst-cnt.no-results{height:auto}#onetrust-pc-sdk input{font-size:1em !important}#onetrust-pc-sdk p{font-size:.6em}#onetrust-pc-sdk #ot-pc-lst{overflow:auto}#onetrust-pc-sdk #ot-fltr-modal{width:100%;height:100%;max-height:none;top:0}#onetrust-pc-sdk #ot-sel-blk{position:static}#onetrust-pc-sdk #ot-fltr-cnt{height:250px;width:100%}#onetrust-pc-sdk.ot-shw-fltr #ot-anchor{display:none !important}#onetrust-pc-sdk.ot-shw-fltr #ot-pc-lst{height:100% !important;overflow:hidden;top:0px}#onetrust-pc-sdk.ot-shw-fltr #ot-fltr-cnt{margin:0;height:100%;padding:10px;top:0;width:calc(100% - 20px);position:absolute;right:0;left:0;max-width:none}#onetrust-pc-sdk.ot-shw-fltr .ot-fltr-scrlcnt{max-height:calc(100% - 65px)}}
            #onetrust-consent-sdk #onetrust-pc-sdk,
                #onetrust-consent-sdk #ot-search-cntr,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-switch.ot-toggle,
                #onetrust-consent-sdk #onetrust-pc-sdk ot-grp-hdr1 .checkbox,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-title:after
                ,#onetrust-consent-sdk #onetrust-pc-sdk #ot-sel-blk,
                        #onetrust-consent-sdk #onetrust-pc-sdk #ot-fltr-cnt,
                        #onetrust-consent-sdk #onetrust-pc-sdk #ot-anchor {
                    background-color: #FFFFFF;
                }
               
            #onetrust-consent-sdk #onetrust-pc-sdk h3,
                #onetrust-consent-sdk #onetrust-pc-sdk h4,
                #onetrust-consent-sdk #onetrust-pc-sdk h5,
                #onetrust-consent-sdk #onetrust-pc-sdk h6,
                #onetrust-consent-sdk #onetrust-pc-sdk p,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-ven-lst .ot-ven-opts p,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-desc,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-title,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-li-title,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-sel-all-hdr span,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-host-lst .ot-host-info,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-fltr-modal #modal-header,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-checkbox label span,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-lst #ot-sel-blk p,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-lst #ot-lst-title h3,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-lst .back-btn-handler p,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-lst .ot-ven-name,
                #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-lst #ot-ven-lst .consent-category,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-leg-btn-container .ot-inactive-leg-btn,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-label-status,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-chkbox label span,
                #onetrust-consent-sdk #onetrust-pc-sdk #clear-filters-handler,
                #onetrust-consent-sdk #onetrust-pc-sdk .ot-optout-signal
                {
                    color: #262a38;
                }
             #onetrust-consent-sdk #onetrust-pc-sdk .privacy-notice-link,
                    #onetrust-consent-sdk #onetrust-pc-sdk .ot-pgph-link,
                    #onetrust-consent-sdk #onetrust-pc-sdk .category-vendors-list-handler,
                    #onetrust-consent-sdk #onetrust-pc-sdk .category-vendors-list-handler + a,
                    #onetrust-consent-sdk #onetrust-pc-sdk .category-host-list-handler,
                    #onetrust-consent-sdk #onetrust-pc-sdk .ot-ven-link,
                    #onetrust-consent-sdk #onetrust-pc-sdk .ot-ven-legclaim-link,
                    #onetrust-consent-sdk #onetrust-pc-sdk #ot-host-lst .ot-host-name a,
                    #onetrust-consent-sdk #onetrust-pc-sdk #ot-host-lst .ot-acc-hdr .ot-host-expand,
                    #onetrust-consent-sdk #onetrust-pc-sdk #ot-host-lst .ot-host-info a,
                    #onetrust-consent-sdk #onetrust-pc-sdk #ot-pc-content #ot-pc-desc .ot-link-btn,
                    #onetrust-consent-sdk #onetrust-pc-sdk .ot-vnd-serv .ot-vnd-item .ot-vnd-info a,
                    #onetrust-consent-sdk #onetrust-pc-sdk #ot-lst-cnt .ot-vnd-info a
                    {
                        color: #047377;
                    }
            #onetrust-consent-sdk #onetrust-pc-sdk .category-vendors-list-handler:hover { text-decoration: underline;}
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-acc-grpcntr.ot-acc-txt,
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-acc-txt .ot-subgrp-tgl .ot-switch.ot-toggle
             {
                background-color: #eff2f3;
            }
             #onetrust-consent-sdk #onetrust-pc-sdk #ot-host-lst .ot-host-info,
                    #onetrust-consent-sdk #onetrust-pc-sdk .ot-acc-txt .ot-ven-dets
                            {
                                background-color: #eff2f3;
                            }
        #onetrust-consent-sdk #onetrust-pc-sdk
            button:not(#clear-filters-handler):not(.ot-close-icon):not(#filter-btn-handler):not(.ot-remove-objection-handler):not(.ot-obj-leg-btn-handler):not([aria-expanded]):not(.ot-link-btn),
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-leg-btn-container .ot-active-leg-btn {
                background-color: #047377;border-color: #047377;
                color: #FFFFFF;
            }
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-active-menu {
                border-color: #047377;
            }
            
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-leg-btn-container .ot-remove-objection-handler{
                background-color: transparent;
                border: 1px solid transparent;
            }
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-leg-btn-container .ot-inactive-leg-btn {
                background-color: #FFFFFF;
                color: #78808E; border-color: #78808E;
            }
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-tgl input:focus + .ot-switch, .ot-switch .ot-switch-nob, .ot-switch .ot-switch-nob:before,
            #onetrust-pc-sdk .ot-checkbox input[type="checkbox"]:focus + label::before,
            #onetrust-pc-sdk .ot-chkbox input[type="checkbox"]:focus + label::before {
                outline-color: #262a38;
                outline-width: 1px;
            }
            #onetrust-pc-sdk .ot-host-item > button:focus, #onetrust-pc-sdk .ot-ven-item > button:focus {
                border: 1px solid #262a38;
            }
            #onetrust-consent-sdk #onetrust-pc-sdk *:focus,
            #onetrust-consent-sdk #onetrust-pc-sdk .ot-vlst-cntr > a:focus {
               outline: 1px solid #262a38;
            }#onetrust-pc-sdk .ot-vlst-cntr .ot-ext-lnk,  #onetrust-pc-sdk .ot-ven-hdr .ot-ext-lnk{
                    background-image: url('https://cdn.cookielaw.org/logos/static/ot_external_link.svg');
                }
            .ot-sdk-cookie-policy{font-family:inherit;font-size:16px}.ot-sdk-cookie-policy.otRelFont{font-size:1rem}.ot-sdk-cookie-policy h3,.ot-sdk-cookie-policy h4,.ot-sdk-cookie-policy h6,.ot-sdk-cookie-policy p,.ot-sdk-cookie-policy li,.ot-sdk-cookie-policy a,.ot-sdk-cookie-policy th,.ot-sdk-cookie-policy #cookie-policy-description,.ot-sdk-cookie-policy .ot-sdk-cookie-policy-group,.ot-sdk-cookie-policy #cookie-policy-title{color:dimgray}.ot-sdk-cookie-policy #cookie-policy-description{margin-bottom:1em}.ot-sdk-cookie-policy h4{font-size:1.2em}.ot-sdk-cookie-policy h6{font-size:1em;margin-top:2em}.ot-sdk-cookie-policy th{min-width:75px}.ot-sdk-cookie-policy a,.ot-sdk-cookie-policy a:hover{background:#fff}.ot-sdk-cookie-policy thead{background-color:#f6f6f4;font-weight:bold}.ot-sdk-cookie-policy .ot-mobile-border{display:none}.ot-sdk-cookie-policy section{margin-bottom:2em}.ot-sdk-cookie-policy table{border-collapse:inherit}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy{font-family:inherit;font-size:1rem}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy h3,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy h4,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy h6,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy p,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy li,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy a,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy th,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-description,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-cookie-policy-group,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-title{color:dimgray}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-description{margin-bottom:1em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-subgroup{margin-left:1.5em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-description,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-cookie-policy-group-desc,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-table-header,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy a,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy span,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td{font-size:.9em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td span,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td a{font-size:inherit}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-cookie-policy-group{font-size:1em;margin-bottom:.6em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-cookie-policy-title{margin-bottom:1.2em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy>section{margin-bottom:1em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy th{min-width:75px}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy a,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy a:hover{background:#fff}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy thead{background-color:#f6f6f4;font-weight:bold}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-mobile-border{display:none}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy section{margin-bottom:2em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-subgroup ul li{list-style:disc;margin-left:1.5em}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-subgroup ul li h4{display:inline-block}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table{border-collapse:inherit;margin:auto;border:1px solid #d7d7d7;border-radius:5px;border-spacing:initial;width:100%;overflow:hidden}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table th,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table td{border-bottom:1px solid #d7d7d7;border-right:1px solid #d7d7d7}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table tr:last-child td{border-bottom:0px}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table tr th:last-child,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table tr td:last-child{border-right:0px}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table .ot-host,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table .ot-cookies-type{width:25%}.ot-sdk-cookie-policy[dir=rtl]{text-align:left}#ot-sdk-cookie-policy h3{font-size:1.5em}@media only screen and (max-width: 530px){.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) table,.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) thead,.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) tbody,.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) th,.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) td,.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) tr{display:block}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) thead tr{position:absolute;top:-9999px;left:-9999px}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) tr{margin:0 0 1em 0}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) tr:nth-child(odd),.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) tr:nth-child(odd) a{background:#f6f6f4}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) td{border:none;border-bottom:1px solid #eee;position:relative;padding-left:50%}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) td:before{position:absolute;height:100%;left:6px;width:40%;padding-right:10px}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) .ot-mobile-border{display:inline-block;background-color:#e4e4e4;position:absolute;height:100%;top:0;left:45%;width:2px}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) td:before{content:attr(data-label);font-weight:bold}.ot-sdk-cookie-policy:not(#ot-sdk-cookie-policy-v2) li{word-break:break-word;word-wrap:break-word}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table{overflow:hidden}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table td{border:none;border-bottom:1px solid #d7d7d7}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy thead,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy tbody,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy th,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy tr{display:block}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table .ot-host,#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table .ot-cookies-type{width:auto}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy tr{margin:0 0 1em 0}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td:before{height:100%;width:40%;padding-right:10px}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td:before{content:attr(data-label);font-weight:bold}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy li{word-break:break-word;word-wrap:break-word}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy thead tr{position:absolute;top:-9999px;left:-9999px;z-index:-9999}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table tr:last-child td{border-bottom:1px solid #d7d7d7;border-right:0px}#ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table tr:last-child td:last-child{border-bottom:0px}}
                
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy h5,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy h6,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy li,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy p,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy a,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy span,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy td,
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-description {
                        color: #262a38;
                    }
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy th {
                        color: #262a38;
                    }
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy .ot-sdk-cookie-policy-group {
                        color: #262a38;
                    }
                    
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy #cookie-policy-title {
                            color: #262a38;
                        }
                    
            
                    #ot-sdk-cookie-policy-v2.ot-sdk-cookie-policy table th {
                            background-color: #eff2f3;
                        }
                    
            .ot-floating-button__front{background-image:url('https://cdn.cookielaw.org/logos/static/ot_persistent_cookie.png')}</style><style id="wistia_228_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_23 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_23 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_23 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_23 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_283_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_232 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_232 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_232 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_232 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_343_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_292 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_292 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_292 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_292 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_418_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_344 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_344 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_344 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_344 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_493_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_419 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_419 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_419 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_419 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_568_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_494 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_494 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_494 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_494 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_657_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_569 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_569 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_569 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_569 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_732_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_658 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_658 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_658 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_658 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_808_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_733 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_733 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_733 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_733 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_883_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_809 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_809 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_809 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_809 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_959_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_884 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_884 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_884 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_884 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1034_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_960 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_960 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_960 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_960 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1109_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1035 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1035 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1035 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1035 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1185_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1110 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1110 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1110 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1110 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1260_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1186 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1186 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1186 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1186 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1312_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1261 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1261 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1261 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1261 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1387_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1313 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1313 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1313 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1313 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1462_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1388 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1388 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1388 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1388 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1538_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1463 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1463 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1463 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1463 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1613_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1539 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1539 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1539 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1539 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1688_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1614 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1614 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1614 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1614 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1763_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1689 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1689 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1689 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1689 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1838_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1764 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1764 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1764 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1764 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1913_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1839 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1839 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1839 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1839 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_1989_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1914 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1914 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1914 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1914 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2065_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_1990 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_1990 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_1990 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_1990 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2140_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2066 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2066 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2066 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2066 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2215_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2141 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2141 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2141 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2141 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2290_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2216 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2216 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2216 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2216 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2342_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2291 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2291 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2291 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2291 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2418_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2343 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2343 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2343 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2343 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2493_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2419 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2419 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2419 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2419 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><style id="wistia_2545_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_2494 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_2494 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_2494 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_2494 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style></head>'''

# print(captions_dict_long)
# print(captions_dict_long.keys())

keys = get_keys_from_dict(captions_dict_long)

# print(captions_dict_long[keys[0]])


# pattern = '''<button aria-describedby="w-interactive-transcript-813" tabindex="-1" style="display: inline-flex; min-height: 22.9365px; font-family: WistiaPlayerInter, Helvetica, sans-serif; font-size: 12.9974px; font-weight: 700; line-height: 19.8783px; outline: none; margin-left: 4.63364px;"><span style="background-color: transparent; box-shadow: none; cursor: pointer; padding: 2.59947px 6.1164px; text-align: left;">(.*?)</span></button>'''
# pattern= '''<span style="background-color: transparent; box-shadow: none; cursor: pointer; padding: 2.59947px 6.1164px; text-align: left;">(.*?)</span>'''
pattern = r'"transcript":"(.*?)","hasPart":\[\{"@type":"Clip",'
pattern_name = r'''","name":"(.*?)","thumbnailUrl":".*?"transcript":".*?","hasPart":\[\{"@type":"Clip",'''

split1 = re.findall(pattern,captions_dict_long[keys[0]],flags=re.DOTALL  )
split_names = re.findall(pattern_name,captions_dict_long[keys[0]],flags=re.DOTALL  )
# print('\n\n\n\n')
print(len(split1), "scripts found", len(set(split1)), "unique scripts found")
print(len(split_names), "names found", len(set(split_names)), "unique names found")
# print(split1[0])
# print(split1)

def keep_first(list):
    first_list = []
    for item in list:
        if item not in first_list:
            first_list.append(item)
    return first_list
split1 = keep_first(split1)
split_names = keep_first(split_names)

for script_index in range(len(split1)):
    split1[script_index] = split_names[script_index]+'\n\n'+ split1[script_index]


# print(split1)
# print(split_names)

import pathlib
from pathlib import Path
from typing import Iterable, List

# --- 1. Decode helper --------------------------------------------------------
def unescape(chunk: str) -> str:
    """
    Convert a literal-backslash sequence such as ``'\\n'`` into a real newline.

    Parameters
    ----------
    chunk : str
        Raw text straight from split1 (contains backslashes you want resolved).

    Returns
    -------
    str
        Same text with all recognized escape sequences turned into real chars.
    """
    # `unicode_escape` understands \n, \t, \', \", \uXXXX … exactly like a Python
    # string literal.
    return bytes(chunk, "utf-8").decode("unicode_escape")

# --- 2. Clean every script in your list --------------------------------------
def clean_all(snippets: Iterable[str]) -> List[str]:
    """
    Apply :func:`unescape` to each raw snippet.

    Parameters
    ----------
    snippets : iterable of str
        What you called ``split1``.

    Returns
    -------
    list[str]
        Fully decoded script fragments.
    """
    return [unescape(s) for s in snippets]

cleaned = clean_all(split1)

# --- 3. Stitch & write --------------------------------------------------------

OUT = Path("dbt") / "dbt Fundamentals Scripts" / "dbt_fundamentals_all_transcripts.txt"

OUT.parent.mkdir(parents=True, exist_ok=True)   # make sure the folder exists

with OUT.open("w", encoding="utf-8", newline="\n") as fh:
    for i, block in enumerate(cleaned, start=1):
        fh.write(f"--- Script {i} ----------------------------------------------------\n")
        fh.write(block.strip())      # drop leading/trailing blank lines
        fh.write("\n\n")             # two blank lines between scripts

print(f"📝 Wrote {OUT} ({OUT.stat().st_size/1024:.1f} kB)")


# ------------------------------------------------------------------
# 4.  ALSO write each cleaned snippet to its own file
#     ./dbt/dbt Fundamentals Scripts/Script {i}.txt
# ------------------------------------------------------------------
base_dir = Path("dbt") / "dbt Fundamentals Scripts" / "Individual Scripts"
base_dir.mkdir(parents=True, exist_ok=True)          # create folder if absent



for i, block in enumerate(cleaned, start=1):
    solo_path = base_dir / f"dbt_fundamentals_transcript_{i}_{split_names[i-1]}.txt"
    with solo_path.open("w", encoding="utf-8", newline="\n") as fh:
        fh.write(block.strip())          # same stripping / new-line policy
        fh.write("\n")                   # final newline for POSIX good manners
    print(f"📝  Wrote {solo_path.resolve()}")