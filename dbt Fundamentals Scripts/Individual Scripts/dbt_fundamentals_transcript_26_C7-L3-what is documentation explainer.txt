C7-L3-what is documentation explainer

Let's dive into dbt's documentation.

This documentation can be viewed by anybody with a read only license or a developer license in dbt cloud, And we can use this documentation to answer questions really quickly about our modeling or our sources, other aspects about our dbt project. And we can pass that information along to our stakeholders so they can answer questions for themselves very easily, like where is this data coming from? What does this field mean? How is it being calculated?

There are a few ways that this is done. One of them is with our dbt DAG.

In our documentation, we can see the dependencies between our models and our sources, and we can see exactly where source is coming from all the way through to our final models.

And this is done not by typing in, hey, this model depends on this model and letting dbt know very manually. It's done based on the code that we've already written in our project using our ref macro and our source macro to build those dependencies between our models and building dependencies between source and a model.

And all of this is being rendered in your documentation based off of that code. The other level of documentation is at the model level or the source level, being able to say, this is what this table is. This is what the grain of this table is, and sharing that information with the rest of your team. We can also document at the column level in a model or a source to indicate what a specific field means or to say this is how how this is being calculated.

So we can answer questions like, what does order status mean? What does return pending mean? With our documentation, we can answer that question very easily.

The way we document isn't to just log out of dbt and log into some other application. We're able to do that documentation right in dbt where we're developing our code.

So we've written our SQL in dbt, and then we can go over to our yaml files and create that documentation for the model that we just created. So that way, we can give that information to others on our team, or we can do ourselves a favor and say, right as we've done this development work, what we've done, what does this field mean, what does this calculation here.

And rather than in six months looking at your code and having no idea what it's doing.

So it's really powerful to do all of this in the same place.

And if you want to give any of your own input, it's really easy to do in DBT.
