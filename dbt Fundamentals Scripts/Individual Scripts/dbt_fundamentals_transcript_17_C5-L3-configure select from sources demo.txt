C5-L3-configure select from sources demo

We've just learned about sources, and we are going to add them to a project to take advantage of the benefits and features it provides. As a recap, we've created three models, two staging models, the staging JAFFL shop customers model that's doing some light transformations, the staging JAFEL shop orders model that's also doing light transformations, and the dead customized model that's doing a few things.

When we look at the lineage, we can see the three models, but we are not seeing the original sources that the staging these two staging models are referring to.

We can see this data is coming from rod dot jarfoshop dot orders.

And when we go into Snowflake, we know there is a table or a view that it is pulling from. So if you look here, raw, shuffle shop, customers table, orders view. We would love this to be represented in the lineage.

This is where sources come in. So how do we add sources so we can see this in our lineage?

If you're not sure, always go to the documentation.

Over here, this is how we add sources.

It tells us that we can create a YAML file under our models folder.

So let's do exactly that.

In DDT, we use a convention where we use underscore the name of the source that you are creating to underscore sources yml.

Great.

And if you're never sure, you can come see our style guide over here.

Now that this has been created, the YAML is going to be of this format.

I'm just gonna go ahead this version.

Always two.

Then you declare sources, and it's helping you over here the name. So the name is what you want the source to be called. So we'll call it JAFEL shop.

Then you have to clear database, and the database that we're getting the table from is raw as we saw in Snowflake.

There's an optional option to have a schema. If you do not explicitly name the schema, DBT will use the name. So let's just be explicit about it.

And then the next thing is to get the name of the tables. So we realize there are two tables that we're using. One is customers, and the other one is orders.

That was quite a bit of typing.

That worked, hopefully.

So let's save that.

And that was successful because you could already see the lineage showing up over here.

Now can we see the lineage here? Still can't see the lineage. This is because we have not added the sources anchor. So I'm gonna go into my stage models over here and replace this hard coded table reference with our source function.

So, again, go to our documentation, and it shows you how to do that.

Gives you an example of how you do that from replace this with the source macro.

So double curly brace, source.

Open that. The name of the source was Jafo shop, and the table that we want, we are in the customer staging model. So we say customers, then we save that.

And now you can see that we can see our Jafo shop customer source. Great.

Do the same thing in orders. If you are in dbt cloud, you can use the magic function shortcut underscore underscore source. Type it in. It fills in some templates for you, and you can type the name of the source and then the object name, which for this one is orders.

You save that.

See that our lineage is showing.

Just out of curiosity, if we compile the code, we can still see that DBT is generating the raw SQL that we need.

And so this is amazing because you are still getting the advantage of being able to specifically call your, tables or object names, but you've made it much more modular so that in the case that you need to change your database name in the future, you just have to make the change over here, and it will be reflected updated across your project.

So that's it. Sources, try it out, and let's keep on maturing and building our projects.
